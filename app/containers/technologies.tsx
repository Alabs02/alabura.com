"use client";

import React, { useMemo } from "react";
import { motion } from "framer-motion";
import Image from "next/image";

// LIB
import { ImagePath } from "@/constants";
import { GridPattern, HeadingChip, SEOIcons } from "@/components/ui";
import { Noise } from "./request-consultation";
import { nanoid } from "nanoid";
import { cn } from "@/lib/utils";

const Icons = {
  docker: () => (
    <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
      <path
        fill="#0DB7ED"
        fillRule="evenodd"
        d="M6.94221099,14.9002344 C6.9980621,14.9002344 7.05128211,14.9107588 7.10043586,14.9297745 C7.04721586,14.9606302 7.01109801,15.018335 7.01109801,15.0842919 C7.01109801,15.1828984 7.09098782,15.2626686 7.18959432,15.2626686 C7.25710599,15.2626686 7.31570779,15.2251754 7.34608506,15.1698027 C7.36743286,15.2214082 7.37939241,15.2780367 7.37939241,15.3374756 C7.37939241,15.578939 7.18361455,15.774657 6.94221099,15.774657 C6.70080744,15.774657 6.50496978,15.578939 6.50496978,15.3374756 C6.50496978,15.0959525 6.70080744,14.9002344 6.94221099,14.9002344 L6.94221099,14.9002344 Z M6.94221099,16.0853662 C6.52978585,16.0853662 6.19420083,15.7499008 6.19420083,15.3374756 C6.19420083,14.9250505 6.52978585,14.5895253 6.94221099,14.5895253 C7.35457634,14.5895253 7.69010156,14.9250505 7.69010156,15.3374756 C7.69010156,15.7499008 7.35457634,16.0853662 6.94221099,16.0853662 L6.94221099,16.0853662 Z M20.3859431,11.1838037 C18.2619865,16.8117894 13.4653093,19.318631 7.81023526,19.318631 C5.13823222,19.318631 3.00656172,18.3995992 1.64323262,16.8672219 L1.65327865,16.8605843 C2.04609012,16.880497 2.39758135,16.8872541 2.75439457,16.8872541 C3.08065114,16.8872541 3.39979178,16.8838457 3.6953721,16.8672219 C3.72108514,16.8657867 3.75325633,16.8621989 3.77878997,16.8605843 C3.77902916,16.8605245 3.86998155,16.8546046 3.82549202,16.853887 C4.57667146,16.8075437 5.15892224,16.7031368 5.70188589,16.5482008 C5.70200548,16.548141 5.70212508,16.548141 5.70224467,16.5480812 C5.80091098,16.5198567 5.89658739,16.4901372 5.98825735,16.4583846 C6.09081051,16.4228049 6.14510687,16.3108635 6.109587,16.2083104 C6.07406714,16.1056974 5.96218553,16.0512815 5.85957258,16.0869807 C5.16992503,16.3259326 4.26010213,16.4574876 3.14505333,16.4821841 L3.14475434,16.4821841 C2.57739321,16.4947416 1.95717085,16.4797922 1.28450587,16.4365584 L1.28444607,16.4365584 C1.14529669,16.2507668 1.01649231,16.0576798 0.89869073,15.8577161 L0.71248051,15.5172277 C0.149903198,14.4112083 -0.0964037696,13.1191582 0.0343141305,11.7160038 L16.3965356,11.7160038 C17.7407294,11.7160038 19.0534696,11.2143604 19.6764427,10.6609919 C18.5601381,9.75332174 18.670764,7.59731356 19.3822377,6.774616 C19.9997093,7.270758 20.9954018,8.31584342 20.824141,9.64622396 C21.6011531,9.255625 22.9506091,9.06259783 24,9.66816973 C23.3411483,10.9541803 21.8929064,11.3383809 20.3859431,11.1838037 L20.3859431,11.1838037 Z M2.25508329,11.3188869 L4.46771995,11.3188869 L4.46771995,9.1061306 L2.25508329,9.1061306 L2.25508329,11.3188869 Z M4.80808879,11.3188869 L7.02096464,11.3188869 L7.02096464,9.1061306 L4.80808879,9.1061306 L4.80808879,11.3188869 Z M4.80808879,8.76576176 L7.02096464,8.76576176 L7.02096464,6.5530653 L4.80808879,6.5530653 L4.80808879,8.76576176 Z M7.36127369,11.3188869 L9.57402994,11.3188869 L9.57402994,9.1061306 L7.36127369,9.1061306 L7.36127369,11.3188869 Z M7.36127369,8.76576176 L9.57402994,8.76576176 L9.57402994,6.5530653 L7.36127369,6.5530653 L7.36127369,8.76576176 Z M9.91433899,11.3188869 L12.1270952,11.3188869 L12.1270952,9.1061306 L9.91433899,9.1061306 L9.91433899,11.3188869 Z M9.91433899,8.76576176 L12.1270952,8.76576176 L12.1270952,6.5530653 L9.91433899,6.5530653 L9.91433899,8.76576176 Z M9.91433899,6.21275626 L12.1270952,6.21275626 L12.1270952,4 L9.91433899,4 L9.91433899,6.21275626 Z M12.4674043,11.3188869 L14.6801605,11.3188869 L14.6801605,9.1061306 L12.4674043,9.1061306 L12.4674043,11.3188869 Z"
      />
    </svg>
  ),
  nginx: () => (
    <svg viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M15.948,2h.065a10.418,10.418,0,0,1,.972.528Q22.414,5.65,27.843,8.774a.792.792,0,0,1,.414.788c-.008,4.389,0,8.777-.005,13.164a.813.813,0,0,1-.356.507q-5.773,3.324-11.547,6.644a.587.587,0,0,1-.657.037Q9.912,26.6,4.143,23.274a.7.7,0,0,1-.4-.666q0-6.582,0-13.163a.693.693,0,0,1,.387-.67Q9.552,5.657,14.974,2.535c.322-.184.638-.379.974-.535"
        style={{ fill: "#019639" }}
      />
      <path
        d="M8.767,10.538q0,5.429,0,10.859a1.509,1.509,0,0,0,.427,1.087,1.647,1.647,0,0,0,2.06.206,1.564,1.564,0,0,0,.685-1.293c0-2.62-.005-5.24,0-7.86q3.583,4.29,7.181,8.568a2.833,2.833,0,0,0,2.6.782,1.561,1.561,0,0,0,1.251-1.371q.008-5.541,0-11.081a1.582,1.582,0,0,0-3.152,0c0,2.662-.016,5.321,0,7.982-2.346-2.766-4.663-5.556-7-8.332A2.817,2.817,0,0,0,10.17,9.033,1.579,1.579,0,0,0,8.767,10.538Z"
        style={{ fill: "#fff" }}
      />
    </svg>
  ),
  shadecn: () => (
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256">
      <rect width="256" height="256" fill="none"></rect>
      <line
        x1="208"
        y1="128"
        x2="128"
        y2="208"
        fill="none"
        stroke="currentColor"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="32"
      ></line>
      <line
        x1="192"
        y1="40"
        x2="40"
        y2="192"
        fill="none"
        stroke="currentColor"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="32"
      ></line>
    </svg>
  ),
  nextjs: () => (
    <div className="size-5 md:size-6 rounded-full bg-zinc-50 border-none">
      <svg
        className="scale-105"
        viewBox=".5 -.2 1023 1024.1"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path d="m478.5.6c-2.2.2-9.2.9-15.5 1.4-145.3 13.1-281.4 91.5-367.6 212-48 67-78.7 143-90.3 223.5-4.1 28.1-4.6 36.4-4.6 74.5s.5 46.4 4.6 74.5c27.8 192.1 164.5 353.5 349.9 413.3 33.2 10.7 68.2 18 108 22.4 15.5 1.7 82.5 1.7 98 0 68.7-7.6 126.9-24.6 184.3-53.9 8.8-4.5 10.5-5.7 9.3-6.7-.8-.6-38.3-50.9-83.3-111.7l-81.8-110.5-102.5-151.7c-56.4-83.4-102.8-151.6-103.2-151.6-.4-.1-.8 67.3-1 149.6-.3 144.1-.4 149.9-2.2 153.3-2.6 4.9-4.6 6.9-8.8 9.1-3.2 1.6-6 1.9-21.1 1.9h-17.3l-4.6-2.9c-3-1.9-5.2-4.4-6.7-7.3l-2.1-4.5.2-200.5.3-200.6 3.1-3.9c1.6-2.1 5-4.8 7.4-6.1 4.1-2 5.7-2.2 23-2.2 20.4 0 23.8.8 29.1 6.6 1.5 1.6 57 85.2 123.4 185.9s157.2 238.2 201.8 305.7l81 122.7 4.1-2.7c36.3-23.6 74.7-57.2 105.1-92.2 64.7-74.3 106.4-164.9 120.4-261.5 4.1-28.1 4.6-36.4 4.6-74.5s-.5-46.4-4.6-74.5c-27.8-192.1-164.5-353.5-349.9-413.3-32.7-10.6-67.5-17.9-106.5-22.3-9.6-1-75.7-2.1-84-1.3zm209.4 309.4c4.8 2.4 8.7 7 10.1 11.8.8 2.6 1 58.2.8 183.5l-.3 179.8-31.7-48.6-31.8-48.6v-130.7c0-84.5.4-132 1-134.3 1.6-5.6 5.1-10 9.9-12.6 4.1-2.1 5.6-2.3 21.3-2.3 14.8 0 17.4.2 20.7 2z" />
        <path d="m784.3 945.1c-3.5 2.2-4.6 3.7-1.5 2 2.2-1.3 5.8-4 5.2-4.1-.3 0-2 1-3.7 2.1zm-6.9 4.5c-1.8 1.4-1.8 1.5.4.4 1.2-.6 2.2-1.3 2.2-1.5 0-.8-.5-.6-2.6 1.1zm-5 3c-1.8 1.4-1.8 1.5.4.4 1.2-.6 2.2-1.3 2.2-1.5 0-.8-.5-.6-2.6 1.1zm-5 3c-1.8 1.4-1.8 1.5.4.4 1.2-.6 2.2-1.3 2.2-1.5 0-.8-.5-.6-2.6 1.1zm-7.6 4c-3.8 2-3.6 2.8.2.9 1.7-.9 3-1.8 3-2 0-.7-.1-.6-3.2 1.1z" />
      </svg>
    </div>
  ),
  motion: () => (
    <svg viewBox="3.7 3.7 43.6 43.6" xmlns="http://www.w3.org/2000/svg">
      <path
        d="m47.3 3.7v21.8l-10.9 10.9-10.9 10.9-10.9-10.9 10.9-10.9v.1-.1z"
        fill="#59529d"
      />
      <path d="m47.3 25.5v21.8l-10.9-10.9z" fill="#5271b4" />
      <path
        d="m25.5 25.5-10.9 10.9-10.9 10.9v-43.6l10.9 10.9z"
        fill="#bb4b96"
      />
    </svg>
  ),
  gsap: () => (
    <svg
      viewBox="-2.138 -2.29 314.9 359.304"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="m48.173 155.568c-10.389 4.887-37.886 26.886-43.182 33.404-5.5 6.518-7.129-3.666-1.426-20.572 4.48-13.647 15.888-32.183 35.034-48.07 11.202-9.166 35.849-22.405 50.921-30.146 3.056-1.63 42.571-18.332 77.809-26.683 3.056-.815-3.666 5.092-4.685 8.351-5.296 15.48-111.01 81.882-111.01 81.882zm148.894 186.78c1.833 10.999.204 11.814-11.202 13.24-11.407 1.426-19.758-2.852-22.813-5.703-3.056-2.853-3.666-9.166-.611-14.869 1.834-3.667 3.667-4.889 4.686-9.37 1.018-4.277 1.833-5.296 2.647-6.925.814-1.427 1.019-2.853 1.222-12.833.204-9.98 0-28.72 1.019-36.663 1.019-8.147 36.257 3.666 36.257 3.666s-8.352 20.776-10.592 25.868c-2.241 5.093-2.037 14.869-2.037 16.906s-.814 6.11-1.426 6.314c-.611.203 2.037 5.499.814 8.555-.815 2.852 1.833 10.185 2.036 11.814zm13.444-311.437c-1.223-7.74 0-23.018 1.629-25.461 5.093-6.926 31.979-7.74 37.683.407 2.444 3.666 2.24 12.221 1.833 17.721-.407 5.499-1.833 17.313-2.037 21.184-.203 2.852-29.738 7.332-36.256-.408-1.834-2.036-2.852-13.443-2.852-13.443zm59.884 291.679c12.425 8.963 21.998 10.592 28.312 13.851 6.314 3.26 4.685 9.574-5.907 11.407-8.555 1.629-21.998-1.63-30.96-1.63s-28.924 1.019-34.22-2.647c-6.11-4.277-3.463-12.222-3.463-12.222 1.63-4.48 5.703-14.462 4.481-22.609s-2.852-12.628-5.907-20.165c-3.055-7.536-5.295-26.071-2.443-27.09s2.036 0 5.703.814c3.666.814 7.74 2.037 15.684 2.037s16.702-1.223 19.758-1.833c3.055-.611 5.499-1.223 4.48 5.092-1.018 6.314-4.073 18.128-4.277 27.294-.203 9.166-.203 19.758.408 21.591.61 1.833 5.092 3.87 8.351 6.11z"
        fill="#010101"
      />
      <path
        d="m226.806 51.28c-22.405 19.351-65.791 24.646-130.155 49.496-16.499 6.314-60.495 25.257-71.087 45.015 35.645-20.572 48.885 7.74 51.736 36.867 2.647 27.294 16.295 41.553 51.329 40.737 36.053-.814 47.052 20.165 57.032 44.812 19.35-94.308 50.311-112.639 70.271-128.73 42.368-34.424-9.776-95.123-29.126-88.197z"
        fill="#8ac640"
      />
      <path
        d="m226.806 51.28c-53.773 18.739-106.936 23.424-169.467 61.921-14.869 9.166-46.237 29.941-52.348 69.661 22.812-25.258 75.567-57.032 140.136-77.197 32.59-10.185 56.422-16.906 85.345-28.109-2.036-13.037-2.036-18.129-3.666-26.276z"
        fill="#8ac640"
      />
      <path
        d="m295.448 162.9s-3.87 13.24-11.61 17.518c0 0-5.703 2.037-17.109-4.277-3.259-1.833-5.703-8.147-5.5-10.185.204-4.889 3.259-7.129 3.259-7.129s3.26-5.5 7.129-5.296c3.871.203 10.389.814 12.426-1.019 1.832-2.037 11.813 3.666 11.405 10.388zm-83.104-128.119s-.814 10.389-2.24 16.906c-.204 1.223-6.314 1.833-10.796 3.667 8.555 24.442 60.088 24.238 66.81 12.221-3.259-2.24-9.777-5.703-12.832-6.925-3.056-1.223-2.852-1.019-3.056-6.722-.203-5.704-.611-16.295-1.019-19.147-.407-2.852-31.979-2.852-36.867 0z"
        fill="#010101"
      />
      <path
        d="m214.381 34.781s0 5.907-.611 11.61c-.203 2.648-.407 4.277-.814 6.314-.204 1.223 6.925 6.11 8.962 16.906 9.777 21.794 32.387 10.999 41.756.611-3.259-2.241-8.555-5.296-14.665-7.74-3.056-1.223-1.63-3.87-1.833-9.573-.204-5.703-1.019-14.055-1.426-17.11-.409-3.055-26.48-3.87-31.369-1.018z"
        fill="#f0efef"
      />
      <g fill="#010101">
        <path d="m212.344 34.781s-.204 3.667-.814 7.944c2.647 2.647 6.11 6.314 8.759 8.555 1.833 1.63 6.313 1.426 10.388 1.426 3.666 0 6.925.407 8.351-.407 3.26-1.63 7.944-5.703 10.592-8.759-.203-3.666-.407-7.129-.61-8.759-.206-2.852-31.778-2.852-36.666 0z" />
        <path d="m230.88 50.261c-2.445 0-5.297-.203-7.537-.611-1.019-.203-2.037-.814-2.852-1.222-1.426-1.019-2.852-2.24-4.48-3.463-3.26-2.444-3.463-3.87-3.463-4.48 1.426-12.833-.408-23.628-.408-23.628s-1.426-5.5 6.314-6.926 12.425-1.629 12.425-1.629 4.889 0 12.425 1.629c7.74 1.426 6.314 6.926 6.314 6.926s-1.833 10.795-.407 23.628c0 .61-.203 2.036-3.463 4.48-2.852 2.037-5.092 4.277-7.332 4.685-2.241.408-5.093.611-7.536.611z" />
        <path d="m230.88 3.006c-13.443 0-16.092 3.666-19.962 7.74-.814 1.018-.204 7.129 1.223 20.165h1.833s-1.223-3.667-1.019-7.944 1.019-4.073.407-5.092c-.814-1.223-2.444-3.26 1.223-5.296 3.666-2.037 9.369 1.629 16.295 1.833 6.925-.204 12.832-3.87 16.498-1.833 3.666 2.036 2.037 4.073 1.223 5.296-.815 1.222.203.814.407 5.092.203 4.277-1.019 7.944-1.019 7.944h1.833c1.222-13.036 2.037-18.739 1.426-19.758-3.463-4.481-6.925-7.944-20.368-8.147zm64.568 160.505s-3.87 12.425-11.406 16.702c-1.63-.814-1.426-2.036-2.852-3.87-.408-.61-1.834-1.019-2.444-1.629-.611-.611-.407-1.63-1.426-2.444-.815-.815-1.426-.204-2.241-.815-.814-.814-1.019-1.833-1.629-2.443-.408-.408-2.037-.611-2.444-1.019-1.019-1.019-9.98-2.852-9.573-4.889.814-3.056 2.444-5.296 2.444-5.296s3.87-5.703 7.739-5.5c3.87.204 7.537 1.019 9.574-.814 2.241-2.038 14.87 5.499 14.258 12.017z" />
        <path d="m268.969 73.482s12.832-3.056 21.591 5.296c8.759 8.555 8.147 19.146 5.5 25.664 2.24 2.648 6.314 9.98 3.259 18.739 13.443 11.406 7.536 28.924-4.481 40.534 0 0-2.852-10.592-14.258-11.203.407-4.073-10.592-7.333-5.5-17.925-7.74-1.833-7.536-7.129-8.758-13.646-1.019-6.519 2.647-47.459 2.647-47.459z" />
      </g>
      <path
        d="m264.284 79.185s14.869-7.536 23.628 1.019c8.758 8.555 6.313 17.924 3.666 24.442 2.24 2.647 7.536 10.185 4.277 19.146-.611 2.037-5.092 2.037-8.352 7.333 8.147-4.686 13.24-3.463 15.073 2.443 2.852 9.166-3.463 20.165-8.962 26.276 0-.204-.204-.408-.204-.611-.814 3.056-1.833 8.962-7.943 15.48-3.056 3.259-5.5 2.852-8.963 2.037-4.073-1.019-5.499-2.853-11.202-5.907-3.259-1.833-1.426-4.074-1.426-5.907 0-.407.407-1.019 1.019-1.833.407-1.019 1.629-2.647 3.462-4.481 0 0 2.648-3.666 6.519-3.463 3.87.204 7.943-.61 8.962-1.629 0-7.129-8.147-7.333-5.296-19.554.204-.611 1.223-1.63 4.481-2.037-4.889-1.019-7.129-1.223-10.592-4.481-2.444-2.24-4.277-5.092-4.889-8.758-1.221-6.314-3.258-39.515-3.258-39.515z"
        fill="#f0efef"
      />
      <path
        d="m221.306 66.353c-1.222-1.63-7.536-9.777-19.554-13.036-3.463-1.019-5.703 1.833-9.165 3.87-1.019-.611-5.5-2.648-7.944-1.223s-4.073 2.852-6.518 3.87c-1.223-.611-4.481-.611-7.129.407-2.648.815-6.722 2.648-10.592 7.944-2.444 8.759 43.181 2.24 43.181 2.24z"
        fill="#010101"
      />
      <path
        d="m221.714 66.353c-6.519-2.241-5.5-9.777-19.962-10.999-2.852-.204-4.685 2.036-6.722 3.462 1.019 1.019 2.037 2.648 2.648 4.277-1.833-2.036-5.092-4.685-8.352-5.296-3.055-.61-5.092 1.63-8.351 3.26.61.61 1.222 1.629 2.036 2.852-2.852-1.833-4.888-2.444-8.758-1.019-2.648.814-7.74 3.055-11.61 8.555-2.444 8.759 41.145-1.019 41.145-1.019z"
        fill="#8ac640"
      />
      <path
        d="m260.007 69.612s0-2.241-.204-4.277c0-.407-1.629-1.426-1.629-1.833l-.407-.408s3.259-1.833 5.703-.814c2.647.814 4.073 4.277 4.073 4.277 4.685-1.629 5.092.204 7.333 2.648 4.889-1.019 5.499.814 8.555 5.296 0 0-3.666-.611-10.795.61-6.926 1.018-12.629-5.703-12.629-5.499z"
        fill="#010101"
      />
      <path
        d="m259.192 68.593s1.222-1.019.814-1.223c2.24-1.222 5.296-2.647 6.722 1.223 4.685-1.63 5.296.611 7.536 3.056 5.703-2.648 6.11.61 6.518 2.036-1.833 0-4.48.204-8.147.611-6.925 1.019-13.647-5.907-13.443-5.703z"
        fill="#8ac640"
      />
      <path
        d="m189.939 63.501s11.61 4.073 21.387 3.462c9.777-.814 26.479-1.629 35.441 3.667 0 0 9.166-3.26 17.721-1.019 8.556 2.24 24.239 16.906 19.555 32.386-.408 1.019-3.056 2.648-6.111 3.667 0 0 1.63 6.925-1.222 12.628-2.852 5.5-9.166 16.092-9.37 30.757-.203 2.444-.61 7.536-1.018 9.98-15.888-.61-40.33-6.518-64.365-6.11.203-2.647.407-4.277.611-6.925h.61c-1.222-6.722-1.629-10.185-2.852-15.277-7.74-4.888-15.888-10.591-22.812-21.387-6.722-10.796 12.425-45.829 12.425-45.829zm78.623 109.991s12.629 45.219-2.24 64.162c0 0 2.24 8.758-2.852 18.128-.815 4.073-1.834 7.74-2.444 11.813-2.648 16.906-7.13 24.035-8.352 51.125l-12.222-.203s-1.426-19.554-5.703-29.942c-2.443-5.906-12.018-13.851-11.609-21.794.407-6.111 1.629-11.203 12.018-19.351.814-11.813-11-23.017-9.166-67.013z"
        fill="#010101"
      />
      <path
        d="m264.896 171.658c3.259 20.776 10.795 51.533-2.852 66.605a30.712 30.712 0 0 1 .203 11.61c-.407 2.444-1.222 5.092-2.24 7.943-2.037 4.889-2.852 12.018-3.463 16.295-2.648 16.906-2.648 17.722-3.87 44.812l-12.222-.204s-1.426-19.554-5.703-29.941c-2.443-5.907-7.536-10.999-7.943-18.943-.407-6.11 3.87-18.331 14.055-17.924-.611-24.646-12.018-19.758-15.073-71.087zm-74.957-108.157s4.481 1.426 9.369 1.833c4.889.407 10.185 0 14.869-.204 9.777-.814 23.628-1.833 32.794 3.463 0 0 5.092-1.63 10.592-1.223 2.444.204 4.889 2.241 7.74 3.056 8.962 2.24 17.517 17.109 13.646 30.553-.407 1.019-3.259 0-6.518 1.019.61 2.852 1.019 9.37-2.241 16.295-3.462 6.926-7.943 15.888-7.129 32.998-21.387-1.019-30.96-2.444-52.144-3.463-1.833-7.537-3.056-15.073-3.259-18.943 2.852-1.426 4.48-2.647 6.722-5.092-6.11 1.019-8.555.611-12.222-1.426-3.666-2.037-10.184-8.555-13.443-12.832-.407-.408-2.647 6.313-7.739 6.518-1.834-2.648 5.906-10.185 4.48-13.036-5.091-10.389 4.483-39.516 4.483-39.516z"
        fill="#f0efef"
      />
      <path
        d="m266.524 154.752s.407 7.333.407 9.166c0 2.037 1.63 8.147 1.833 10.999-2.24 3.87-12.017 12.629-29.738 15.888-17.517 3.666-40.737-23.831-40.737-23.831.611-2.648 2.648-10.389 4.074-14.462.204-.407.611-1.426.611-1.833 1.834-2.648 63.55 4.073 63.55 4.073z"
        fill="#010101"
      />
      <path
        d="m262.044 155.364c0 5.092.814 8.759 1.426 12.018 1.018 5.907 2.647 9.777 2.647 13.647 0 11.813-15.48 9.776-28.517 10.184-17.517 3.667-32.386-23.831-32.386-23.831 1.222-4.685 2.037-9.98 3.87-14.462.203-2.444.611-5.499.814-6.925 24.85 0 42.367 1.426 52.552 2.443.408 2.241.001 6.111-.406 6.926z"
        fill="#f0efef"
      />
      <path
        d="m242.489 181.639s-10.795-24.035-43.182-16.905c-7.739 21.794-18.128 46.848-11.406 73.938-6.722 9.166-14.462 14.259-14.462 31.164 0 16.906.815 19.758.815 19.758l23.831 1.223s7.74-9.98 10.795-20.776c.815-3.056 1.63-8.555 1.019-14.869.814-1.222 4.277-4.073 4.685-9.573 0 0 11.61-6.11 18.332-20.979 6.315-13.446 4.685-25.056 9.573-42.981z"
        fill="#010101"
      />
      <path
        d="m242.489 181.639c-.61-2.24-8.758-24.238-38.904-17.721-17.72 47.256-11.202 66.81-8.555 75.364-12.018 15.276-17.517 18.535-15.072 49.496h15.888c7.332-11.61 8.962-15.888 9.369-31.164 0-.611-2.24 1.222-3.87 3.259 1.223-6.314 4.685-7.536 7.333-11.406 1.222-1.63 2.24-4.074 2.24-7.333 14.258-9.573 19.554-21.591 22.609-34.016 2.445-8.554 5.296-22.609 8.962-26.479z"
        fill="#f0efef"
      />
      <g fill="#010101">
        <path d="m192.179 148.846s5.5.203 10.389 1.833c4.685 1.629 4.685 2.647 6.518 4.685s6.314 5.092 5.5 8.147c-.408 1.63-1.426 2.037-2.852 3.463-.611.611-5.093 5.499-6.111 6.11-.611.407-1.426 1.019-2.037 1.426l-3.055 2.037c-2.037 1.019-3.463 1.63-5.703 1.426 0 0-5.092-.204-8.352-3.666 0 0-.407-1.63.408-2.444 0 0-4.278-3.667-5.5-6.111-1.223-2.443-1.223-5.906-.407-7.739.407-1.835 8.35-6.927 11.202-9.167zm5.093 198.187-.611 5.093s-1.833 2.24-15.48 2.037c-13.851-.204-17.517-4.481-18.739-6.722l-.814-5.296s2.648-3.87 3.259-3.87c4.481.407 19.758 6.518 30.35 8.147 1.016 0 1.219.407 2.035.611zm29.534-10.388c0 2.24-.204 2.24-.204 4.481 2.444 1.833 8.556 2.852 20.165 2.647 16.906-.407 32.59 5.093 51.736 1.833l.204-3.666-1.833-.203-67.828-5.5z" />
        <path d="m241.675 343.774h5.092c11-.407 21.388 2.037 32.59 2.648 5.907-.204 13.24-1.63 12.629-5.907l-57.847-4.889c-3.463 3.87-.816 7.129 7.536 8.148zm-66.402-85.752c1.833 1.222 14.258 8.555 34.423 7.536-.408 3.87-.204 11.407-9.166 24.646-4.481 6.518-8.352 17.925-9.166 32.387.204 3.259 2.037 6.11-.407 10.388.814 2.647 4.073 7.943 5.703 11.202 1.629 3.26 2.444 6.926-8.352 7.13-10.999.203-28.72-1.019-26.275-9.573 1.223-4.481 4.685-9.166 5.093-11 .407-1.833.407-7.332 3.869-10.999 3.056-10.184 2.037-19.961 1.427-29.127-1.019-9.574-1.223-24.85 2.851-32.59zm18.943-166.005c14.462-19.351 2.24-34.83-20.979-30.146-9.37 1.833-18.739 8.352-19.351 20.165-3.055.407-9.98.814-13.443 13.443-2.647 9.777-4.073 11.61-8.759 16.498-3.055 3.463.204 10.592 2.444 15.685 7.537 17.517 30.757 19.146 46.441 32.386 5.296-1.426 10.795-7.332 12.425-11.202-13.24-15.685-10.389-21.795-15.685-29.942 5.704-2.038 18.74-9.981 16.907-26.887z" />
      </g>
      <path
        d="m191.364 90.795c.814-1.223 2.24-3.87 2.852-4.889.204-.204 2.444 3.666 2.648 3.463 5.499-8.963 6.925-21.999.61-23.221-1.426-.204-4.073-.814-6.314-1.63-4.073-1.426-7.739-1.426-14.258-.203-8.962 1.629-17.924 8.147-17.924 17.517 0 .611 6.313 2.444 8.147 9.981-3.056-4.278-8.352-8.963-14.666-4.889-6.722 4.277-3.259 14.054-12.221 24.238-3.056 3.463-2.648 7.537.61 15.684 5.296 12.833 30.35 19.758 43.997 31.979 3.259-1.426 5.499-4.685 7.129-7.129-9.166-9.573-12.833-18.536-15.48-25.054-3.259-7.536-6.926-11.813-14.055-17.518 3.667 1.426 6.519 2.852 8.147 4.074 1.833 1.222 4.481 1.426 6.926.611 8.76-3.053 13.445-15.275 13.852-23.014z"
        fill="#f0efef"
      />
      <path
        d="m279.968 94.054c-.611 7.74-6.314 3.87-9.369 2.444-6.111-2.648-12.222-4.481-19.351-4.481s-16.295.611-24.238 2.648c-10.999 3.055-14.259 2.852-19.147.407-4.888-2.648-13.442-9.166-13.442-9.166s-.204 2.037 1.833 4.685c2.647 3.259 8.555 7.333 16.498 9.98 3.87 1.223 6.926.407 10.389-.407 18.128-4.481 37.274-5.296 53.365 4.481.815.407 3.667-.815 4.889-2.648 1.628-2.647-1.427-7.943-1.427-7.943z"
        fill="#010101"
      />
      <path
        d="m187.291 171.658c1.629 1.019 3.666 1.63 5.906 3.463 0 0-1.833 0-2.647-.814-1.019-.611-3.056-2.444-3.259-2.649z"
        fill="#0a1825"
      />
      <path
        d="m246.156 10.135c-.611-1.833-5.093-5.093-15.48-5.093-11.203 0-14.462 3.463-14.665 5.296 0 .611-.815 7.13-1.019 9.777 0 0 0 3.259.203 8.147.204 3.259 1.019 5.092 1.426 9.37.407 4.48 1.63 7.332 3.87 10.999 1.019.61 1.833 1.222 2.852 1.426 4.074.814 11.203 1.018 15.073 0 2.24-.611 5.092-4.481 5.703-7.944.814-4.277 1.629-7.333 1.833-9.98.407-2.647.611-8.555.814-10.185.612-4.48-.407-11.406-.61-11.813z"
        fill="#f0efef"
      />
      <path
        d="m224.769 261.892s10.796 4.685 37.479.611c0 0-7.536 37.886-4.073 56.828 0 0 3.462 4.889 29.127 14.258 0 0 11.406 2.852 10.999 8.556 0 0 .407 1.222-13.443.814s-26.887-2.852-36.053-2.852-18.943.407-20.572-2.24c-1.833-2.444.407-8.759 3.055-12.426 2.853-3.869 2.037-6.722 1.834-13.646-.613-18.128-14.464-36.867-8.353-49.903z"
        fill="#010101"
      />
      <path
        d="m222.528 265.355c-1.426 2.037.203 9.776 2.24 17.313 2.037 7.536 6.519 12.018 7.537 24.442 1.018 12.221 1.222 13.851-2.241 20.979s-4.481 13.647 7.536 13.851 18.536-.204 30.757 1.63c12.222 1.833 16.499 2.444 23.221 1.426s8.147-3.26 5.296-5.296c-2.852-2.037-14.666-4.277-19.758-8.352-4.889-3.666-18.739-9.777-18.942-11.406-.611-5.5-.815-25.461.203-31.979 1.019-6.519 2.444-15.888 2.852-18.332s2.444-4.889-1.019-4.074c-3.462.814-16.498 2.648-26.275 2.037-9.777-.61-10.795-2.851-11.407-2.239z"
        fill="#8ac640"
      />
      <path
        d="m229.454 328.294c3.462 1.629 8.555 2.852 12.425 2.852 0 0-1.427 6.722.814 10.795 2.24 4.074-16.295 1.63-16.295 1.63l-.814-14.462zm53.977 17.517c3.259-1.019 5.5-4.685 2.852-8.147-2.852-3.463-5.296-4.074-1.63-4.277 3.667-.204 17.11 7.943 17.11 7.943l-6.926 6.314zm-61.514-72.513c4.685 1.63 11.814 2.037 17.925 1.833 6.11-.203 15.276-1.019 21.184-3.055 5.906-2.037 3.462 2.24 3.462 2.24l-3.259 3.056s-7.74 3.055-20.368 2.852c-14.869-.204-19.351-1.833-19.351-1.833zm.407 10.185c4.686 1.63 11.814 2.037 17.925 1.833 6.11-.203 14.258-.203 20.165-2.444 2.444-.814 1.019 2.648 1.019 2.648l-1.019 1.833s-7.944 2.852-20.369 2.647c-14.869-.203-17.517-1.426-17.517-1.426z"
        fill="#010101"
        opacity=".3"
      />
      <path
        d="m224.769 261.892s17.721 6.314 37.683 2.037c0 0-7.74 36.46-4.277 55.199 0 0 3.462 4.888 29.127 14.258 0 0 11.406 2.852 10.999 8.555 0 0 .407 1.223-13.443.814-13.851-.407-26.887-2.852-36.053-2.852s-18.943.408-20.572-2.24c-1.833-2.444.407-8.759 3.055-12.425 2.853-3.87 2.037-6.722 1.834-13.647-.613-17.924-14.464-36.663-8.353-49.699z"
        fill="none"
      />
      <path
        d="m224.769 261.892s17.721 6.11 37.683 1.833c0 0-7.74 36.664-4.277 55.403 0 0 3.462 4.888 29.127 14.258 0 0 11.406 2.852 10.999 8.555 0 0 .407 1.223-13.443.814-13.851-.407-27.091-4.277-36.053-2.852-9.573 1.63-18.943 1.019-20.572-2.24-1.426-2.647.407-8.759 3.055-12.425 2.853-3.87 2.037-6.722 1.834-13.647-.613-17.924-14.464-36.663-8.353-49.699z"
        fill="none"
      />
      <path
        d="m208.881 140.699c0 1.426 15.888 9.369 24.646 10.999 8.759 1.629 27.091 0 29.942-.611l-.408 2.852s-21.794 3.259-38.496-1.222c-16.703-4.481-14.869-5.5-14.869-5.5z"
        fill="#010101"
      />
      <path
        d="m174.865 314.443c2.444 1.223 11.203 3.463 16.906 2.241.814-.204 0-14.055 2.241-20.369 3.259-8.759 8.555-15.888 10.998-31.367-8.555-.815-18.331-3.056-23.424-4.686-6.517 19.962-4.276 37.071-6.721 54.181zm13.648 12.833c1.426.407 2.444 2.036 2.852 1.019.814-1.834-1.426-5.296-1.63-7.74v-.204c-1.833-1.629-14.258-1.833-13.443-1.019-1.426 2.648-3.666 2.241-4.48 7.537-.407 2.647 2.852.407 5.906.203-5.499 3.666-11.813 8.352-12.832 12.425-1.222 5.703.815 7.333 6.926 10.389 5.296 1.222 11.61 1.426 16.498 1.222 5.5-1.019 6.519-3.666 4.889-7.333-2.446-5.5-4.075-12.629-4.686-16.499z"
        fill="#f0efef"
      />
      <path
        d="m190.753 62.686c6.722 3.87 16.092 2.852 19.554 2.648.815 0 8.963-1.426 9.37-1.223.814.204.814.815.814.815s-3.055 1.629-9.98 2.036c-6.518.407-14.258 0-18.535-2.036-5.093-2.24-1.223-2.24-1.223-2.24zm69.254 3.87c1.222.814 9.166 3.87 12.629 7.536 3.055 3.26 1.426 3.056.814 2.241-.814-1.019-7.129-5.296-9.573-6.314s-5.5-2.852-5.5-3.259 1.63-.204 1.63-.204z"
        fill="#010101"
      />
      <path
        d="m189.734 151.086c5.907-.407 12.018 1.019 15.888 5.092 2.037 2.037 5.296 4.277 4.889 6.314 0 .611-1.223 2.241-2.24 3.463-.611.814-2.444 2.647-3.056 3.259-.814.611-3.666 2.852-4.277 3.259-.611.408-1.426 1.427-2.037 1.63-2.036 1.019-4.277.204-6.314-.814-2.036-1.019.408-1.223-1.833-2.852-5.499-3.87-8.555-6.519-6.314-14.055.203-1.426 2.443-3.056 5.294-5.296z"
        fill="#f0efef"
      />
      <path
        d="m137.795 104.442c-18.332 7.333-64.977 30.554-78.216 37.683 10.999 6.925 16.091 23.627 17.721 40.533.203 1.63.407 3.056.611 4.685.203 1.426.407 2.444.61 3.056 0 .204 0 .611.204.814 12.018-32.793 54.995-67.42 56.625-70.068.814-1.222-1.019-6.518 1.833-11.609 3.667-6.52 10.797-9.372.612-5.094zm43.589 153.784c9.369-18.739 9.573-36.664 9.369-57.644 0-8.759 6.314-21.184 3.056-17.721-12.222 13.646-42.978 39.312-65.18 40.737 31.164-1.018 43.385 14.666 52.755 34.628z"
        fill="#010101"
        opacity=".4"
      />
      <path
        d="m41.654 159.437c11.61-8.351 71.698-40.329 86.16-44.811 14.461-4.685 9.98-10.185 9.98-10.185s-58.662 25.257-93.696 47.052"
        fill="#010101"
      />
      <path
        d="m212.751 100.572c-4.685-1.833-8.351 3.667-7.129 8.963 1.223 5.296 12.222 11.202 11.61 30.553-.407 15.888-3.87 22.405-3.87 22.405l-7.74-9.776s-1.222-21.999-3.87-25.258c-2.647-3.259-10.999-9.166-14.258-12.221-3.259-3.056 3.666-7.129 3.259-12.833-.407-5.499 3.463-16.498 3.463-16.498zm28.313 86.77c-.407 15.276 3.056 37.886 4.481 48.682 1.426 10.795 3.259 11.61 0 16.499-3.259 4.685-7.536 12.425-7.536 12.425l-14.055-1.223s11.203-14.258 11.813-16.906c.611-2.647-5.703-22.812-5.703-22.812zm-27.09-142.58c2.852 6.313 6.314 9.165 11.813 10.999 3.259 1.222 16.091 2.852 21.184-2.852 2.24-2.648.814-9.777.814-9.777l-11.61 9.369-15.684-2.851-1.833-4.685z"
        fill="#010101"
        opacity=".4"
      />
      <path
        d="m215.195 58.816c5.296 3.463 18.536 6.722 22.202 7.333 3.666.814 9.573-3.87 12.425-5.092 3.056-1.426 8.352-2.241 14.462 3.259.611.611-1.426 3.259-1.426 3.259-.204-.204-1.426-.204-3.056-1.019-1.629-.814-3.055-1.426-5.499-1.222-10.185 1.222-11.814 4.685-20.776 2.647s-11.203-3.666-19.961-3.259"
        fill="#8ac640"
        stroke="#010101"
        strokeLinejoin="round"
        strokeMiterlimit={10}
        strokeWidth="1.586"
      />
      <path
        d="m213.362 59.427c6.722 2.852 19.758 5.907 23.424 6.722s9.573-2.852 12.425-4.685c5.093-3.259 11.61-.611 14.666 2.852 2.036 2.24 2.852 3.666 2.852 4.277 0 .814-2.444 0-2.444 0-1.426-.611-3.056-.814-4.277-1.63-1.63-.814-3.26-2.036-5.703-1.833-10.185 1.223-12.222 4.685-20.98 2.648s-10.999-3.87-20.368-3.26"
        fill="#8ac640"
      />
      <path
        d="m181.791 249.67c-.407-.407.407-.814 0-.814-2.647 0-6.314-2.037-8.352-4.889-8.758-12.628-21.591-20.979-44.811-20.368-34.831.814-48.682-13.443-51.329-40.737-1.426-14.869-5.5-29.331-13.851-37.479l-4.889 3.056c9.369 8.147 12.425 21.387 14.462 39.515 3.259 27.294 25.257 39.923 50.922 40.33 26.683.407 36.256 5.907 46.236 19.351 3.259 4.277 6.926 5.703 9.777 6.314z"
        fill="#010101"
      />
      <path
        d="m276.302 118.7c.611 3.055 2.24 8.962 5.499 11.813 1.427 1.426 1.63 1.833.408 1.833-1.223 0-10.185-.407-10.185-.407l-2.444-4.277z"
        fill="#010101"
        opacity=".4"
      />
    </svg>
  ),
  vuetify: () => (
    <svg viewBox="0 0 296 300" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M147.868 292.803C225.635 292.803 288.677 228.86 288.677 149.982C288.677 71.1036 225.635 7.16023 147.868 7.16023C70.1017 7.16023 7.05935 71.1036 7.05935 149.982C7.05935 228.86 70.1017 292.803 147.868 292.803ZM147.868 295.648C227.183 295.648 291.482 230.43 291.482 149.982C291.482 69.5323 227.183 4.31519 147.868 4.31519C68.5525 4.31519 4.25439 69.5323 4.25439 149.982C4.25439 230.43 68.5525 295.648 147.868 295.648Z"
        fill="#AEDDFF"
      />
      <path
        d="M214.874 31.2974C219.428 31.2974 223.12 27.5525 223.12 22.9329C223.12 18.3133 219.428 14.5684 214.874 14.5684C210.319 14.5684 206.627 18.3133 206.627 22.9329C206.627 27.5525 210.319 31.2974 214.874 31.2974Z"
        fill="#1697F6"
      />
      <path
        d="M80.8627 285.4C85.4172 285.4 89.1093 281.655 89.1093 277.036C89.1093 272.416 85.4172 268.671 80.8627 268.671C76.3081 268.671 72.616 272.416 72.616 277.036C72.616 281.655 76.3081 285.4 80.8627 285.4Z"
        fill="#1697F6"
      />
      <path
        d="M150.169 129.52L107.191 205.042L147.887 276.58L201.788 181.885L255.665 87.1897H174.248L150.169 129.52Z"
        fill="#1697F6"
      />
      <path
        d="M94.0094 181.885L96.8321 186.865L137.037 116.198L153.556 87.1897H147.886H40.1079L94.0094 181.885Z"
        fill="#AEDDFF"
      />
      <path
        d="M174.248 87.1897C194.621 155.192 147.887 276.58 147.887 276.58L107.191 205.042L174.248 87.1897Z"
        fill="#1867C0"
      />
      <path
        d="M153.557 87.1897C67.7217 87.1897 96.8324 186.865 96.8324 186.865L153.557 87.1897Z"
        fill="#7BC6FF"
      />
    </svg>
  ),
  webflow: () => (
    <svg viewBox="0 0 29 19" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M28.8562 0.5L19.6486 18.5H11L14.8534 11.04H14.6805C11.5015 15.1668 6.7583 17.8835 0 18.5V11.1433C0 11.1433 4.32345 10.8879 6.86508 8.21575H0V0.500142H7.71561V6.84612L7.88878 6.84541L11.0417 0.500142H16.8768V6.80588L17.0499 6.8056L20.3211 0.5H28.8562Z"
        fill="#146EF5"
      ></path>
    </svg>
  ),
  jest: () => (
    <svg
      viewBox="-13.5 0 283 283"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      preserveAspectRatio="xMidYMid"
    >
      <g>
        <path
          d="M239.552674,138.960457 C239.552674,124.451866 227.791431,112.690623 213.282197,112.690623 C212.349305,112.690623 211.428604,112.740668 210.521375,112.835625 L246.60326,6.41597594 L93.2669594,6.41597594 L129.298799,112.743234 C128.770117,112.711154 128.238869,112.690623 127.702488,112.690623 C113.193897,112.690623 101.432012,124.451866 101.432012,138.960457 C101.432012,150.688337 109.117786,160.616517 119.725426,163.994562 C114.122939,173.699465 107.072994,182.440036 99.0689845,189.991715 C88.1854556,200.259304 75.7293554,208.044527 62.2569544,212.842442 C46.2174957,204.602322 38.6427188,186.27747 45.4777263,170.20978 C46.2489343,168.395324 47.0374657,166.556487 47.7900672,164.725349 C59.410799,162.013289 68.0692451,151.596207 68.0692451,139.149089 C68.0692451,124.640497 56.308002,112.879254 41.7987689,112.879254 C27.2901774,112.879254 15.5282927,124.640497 15.5282927,139.149089 C15.5282927,148.046212 19.9553604,155.904577 26.7217163,160.656938 C20.2197013,175.461309 10.6617263,190.954763 7.68404211,208.911976 C4.1154406,230.432658 7.67249323,253.276327 26.2854256,266.177059 C69.6334757,296.220808 116.687431,247.551936 166.299461,235.317831 C184.279771,230.883705 204.016152,231.598452 219.857355,222.423515 C231.753335,215.533329 239.595661,204.115344 241.821385,191.296096 C244.020162,178.632116 240.814709,166.023314 233.442679,155.799354 C237.255731,151.239475 239.552674,145.36944 239.552674,138.960457"
          fill="#99425B"
        ></path>
        <path
          d="M235.500174,190.198183 C233.567663,201.327447 226.694159,211.049031 216.641508,216.871587 C207.270881,222.298915 196.041528,223.918965 184.152606,225.633331 C177.783403,226.551467 171.197337,227.501682 164.763332,229.088369 C147.751202,233.283176 131.273528,241.468118 115.338651,249.382945 C83.4490065,265.222865 55.908796,278.900579 29.9405153,260.903587 C10.9188812,247.719908 11.7972371,223.328048 14.0133373,209.961512 C16.0671118,197.577913 21.6195529,186.173402 26.9891368,175.143587 C27.9168962,173.23674 28.8260491,171.365181 29.7108211,169.509662 C32.3721945,170.5728 35.2029514,171.298454 38.1536882,171.628239 C32.6878637,189.666935 41.2834326,209.28077 59.3253373,218.549381 L61.7942296,219.817833 L64.4094075,218.886865 C78.6722647,213.807286 91.8148812,205.656349 103.472184,194.657973 C111.007182,187.549001 117.486099,179.684219 122.810771,171.280489 C124.407082,171.521091 126.039964,171.647487 127.70236,171.647487 C144.260876,171.647487 157.973237,159.268379 160.095022,143.280249 C166.872926,143.031948 174.072365,143.030023 180.889408,143.277682 C183.009909,159.267096 196.722911,171.647487 213.282069,171.647487 C220.205618,171.647487 226.628074,169.477582 231.918741,165.791567 C235.591924,173.310524 236.963032,181.770715 235.500174,190.198183 Z M41.7986406,119.295166 C52.7469714,119.295166 61.6530767,128.201913 61.6530767,139.149602 C61.6530767,143.081993 60.4994727,146.74876 58.5181995,149.8368 C55.2171469,154.983747 49.6088862,158.511928 43.1626907,158.952068 C42.7116431,158.982865 42.2573875,159.004038 41.7986406,159.004038 C39.3592622,159.004038 37.0218987,158.558765 34.8609764,157.750985 C30.4897283,156.114895 26.8473424,152.978735 24.5561744,148.973843 C22.8976281,146.074434 21.9442045,142.722053 21.9442045,139.149602 C21.9442045,128.201913 30.8509514,119.295166 41.7986406,119.295166 Z M107.847924,138.96097 C107.847924,129.014183 115.200706,120.754815 124.755473,119.326605 C125.717237,119.182244 126.701458,119.106534 127.70236,119.106534 C134.067072,119.106534 139.733718,122.122073 143.368405,126.794234 C144.271783,127.954895 145.055182,129.214364 145.685879,130.559166 C146.883753,133.11275 147.556796,135.958905 147.556796,138.96097 C147.556796,140.548299 147.364315,142.091356 147.010791,143.571537 C145.075713,151.671787 138.168846,157.862625 129.705448,158.714675 C129.047162,158.78076 128.378611,158.815407 127.70236,158.815407 C123.73853,158.815407 120.045458,157.643196 116.942019,155.633692 C111.475553,152.09268 107.847924,145.944188 107.847924,138.96097 Z M190.713007,115.351868 C186.459814,119.421562 183.296706,124.621121 181.721568,130.468058 C174.369428,130.192168 166.573297,130.192168 159.263503,130.468058 C157.584425,124.236158 154.101798,118.738254 149.417448,114.562053 L169.961608,73.0201183 L190.713007,115.351868 Z M102.215924,12.8325293 L237.652756,12.8325293 L205.664305,107.177833 C204.277798,107.510825 202.925297,107.929792 201.612575,108.433452 L170.012295,43.9702135 L138.322831,108.048489 C136.953007,107.57691 135.541478,107.197081 134.096585,106.909001 L102.215924,12.8325293 Z M233.136505,138.96097 C233.136505,140.951868 232.838801,142.873472 232.291513,144.687928 C230.987773,149.00464 228.251974,152.703487 224.639102,155.23269 C221.41825,157.487286 217.503182,158.815407 213.282069,158.815407 C204.114831,158.815407 196.381578,152.568108 194.108375,144.107918 C193.666951,142.465412 193.427633,140.74078 193.427633,138.96097 C193.427633,136.246985 193.976205,133.659396 194.966199,131.301502 C195.476275,130.086304 196.112746,128.937833 196.843533,127.858655 C200.416626,122.585311 206.44642,119.106534 213.282069,119.106534 C213.908916,119.106534 214.527423,119.139256 215.139513,119.196359 C225.219753,120.135667 233.136505,128.639487 233.136505,138.96097 Z M245.968585,138.96097 C245.968585,123.002995 234.471042,109.688429 219.327262,106.843557 L255.552866,0.000449122807 L84.3183799,0.000449122807 L120.599162,107.061061 C105.980856,110.313993 95.0158436,123.377051 95.0158436,138.96097 C95.0158436,150.662544 101.200265,160.941682 110.468235,166.717402 C106.01037,173.359286 100.723553,179.609151 94.6661694,185.324559 C85.0581494,194.388499 74.3549113,201.262003 62.8156632,205.78467 C51.1930065,198.483858 46.279603,184.715677 51.3822797,172.72089 L51.781999,171.78094 C52.0322246,171.193873 52.2824501,170.605522 52.5320341,170.017171 C65.2980291,165.564439 74.4851569,153.413742 74.4851569,139.149602 C74.4851569,121.125662 59.8219388,106.463086 41.7986406,106.463086 C23.7753424,106.463086 9.11212431,121.125662 9.11212431,139.149602 C9.11212431,148.246905 12.8513925,156.485101 18.8696381,162.41673 C17.7789113,164.741261 16.6304401,167.105572 15.4518135,169.526344 C9.94941754,180.828198 3.71302657,193.637823 1.35449023,207.862183 C-3.32986065,236.112008 4.22630977,258.694544 22.6307208,271.450274 C33.7991218,279.190584 45.1401143,282.233712 56.553608,282.233712 C78.0447759,282.233712 99.7842446,271.4368 121.047002,260.875356 C136.360164,253.269782 152.194951,245.404359 167.835974,241.547036 C173.655322,240.111767 179.644054,239.248168 185.984385,238.333883 C198.556616,236.520068 211.557438,234.645301 223.072946,227.975828 C236.421518,220.243858 245.559242,207.274474 248.142981,192.393752 C250.361007,179.618775 247.691934,166.823266 241.181578,155.972459 C244.216365,151.013502 245.968585,145.188379 245.968585,138.96097 Z"
          fill="#FFFFFF"
        ></path>
      </g>
    </svg>
  ),
  playwright: () => (
    <svg viewBox="0 0 400 400" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M136.444 221.556C123.558 225.213 115.104 231.625 109.535 238.032C114.869 233.364 122.014 229.08 131.652 226.348C141.51 223.554 149.92 223.574 156.869 224.915V219.481C150.941 218.939 144.145 219.371 136.444 221.556ZM108.946 175.876L61.0895 188.484C61.0895 188.484 61.9617 189.716 63.5767 191.36L104.153 180.668C104.153 180.668 103.578 188.077 98.5847 194.705C108.03 187.559 108.946 175.876 108.946 175.876ZM149.005 288.347C81.6582 306.486 46.0272 228.438 35.2396 187.928C30.2556 169.229 28.0799 155.067 27.5 145.928C27.4377 144.979 27.4665 144.179 27.5336 143.446C24.04 143.657 22.3674 145.473 22.7077 150.721C23.2876 159.855 25.4633 174.016 30.4473 192.721C41.2301 233.225 76.8659 311.273 144.213 293.134C158.872 289.185 169.885 281.992 178.152 272.81C170.532 279.692 160.995 285.112 149.005 288.347ZM161.661 128.11V132.903H188.077C187.535 131.206 186.989 129.677 186.447 128.11H161.661Z"
        fill="#2D4552"
      />
      <path
        d="M193.981 167.584C205.861 170.958 212.144 179.287 215.465 186.658L228.711 190.42C228.711 190.42 226.904 164.623 203.57 157.995C181.741 151.793 168.308 170.124 166.674 172.496C173.024 167.972 182.297 164.268 193.981 167.584ZM299.422 186.777C277.573 180.547 264.145 198.916 262.535 201.255C268.89 196.736 278.158 193.031 289.837 196.362C301.698 199.741 307.976 208.06 311.307 215.436L324.572 219.212C324.572 219.212 322.736 193.41 299.422 186.777ZM286.262 254.795L176.072 223.99C176.072 223.99 177.265 230.038 181.842 237.869L274.617 263.805C282.255 259.386 286.262 254.795 286.262 254.795ZM209.867 321.102C122.618 297.71 133.166 186.543 147.284 133.865C153.097 112.156 159.073 96.0203 164.029 85.204C161.072 84.5953 158.623 86.1529 156.203 91.0746C150.941 101.747 144.212 119.124 137.7 143.45C123.586 196.127 113.038 307.29 200.283 330.682C241.406 341.699 273.442 324.955 297.323 298.659C274.655 319.19 245.714 330.701 209.867 321.102Z"
        fill="#2D4552"
      />
      <path
        d="M161.661 262.296V239.863L99.3324 257.537C99.3324 257.537 103.938 230.777 136.444 221.556C146.302 218.762 154.713 218.781 161.661 220.123V128.11H192.869C189.471 117.61 186.184 109.526 183.423 103.909C178.856 94.612 174.174 100.775 163.545 109.665C156.059 115.919 137.139 129.261 108.668 136.933C80.1966 144.61 57.179 142.574 47.5752 140.911C33.9601 138.562 26.8387 135.572 27.5049 145.928C28.0847 155.062 30.2605 169.224 35.2445 187.928C46.0272 228.433 81.663 306.481 149.01 288.342C166.602 283.602 179.019 274.233 187.626 262.291H161.661V262.296ZM61.0848 188.484L108.946 175.876C108.946 175.876 107.551 194.288 89.6087 199.018C71.6614 203.743 61.0848 188.484 61.0848 188.484Z"
        fill="#E2574C"
      />
      <path
        d="M341.786 129.174C329.345 131.355 299.498 134.072 262.612 124.185C225.716 114.304 201.236 97.0224 191.537 88.8994C177.788 77.3834 171.74 69.3802 165.788 81.4857C160.526 92.163 153.797 109.54 147.284 133.866C133.171 186.543 122.623 297.706 209.867 321.098C297.093 344.47 343.53 242.92 357.644 190.238C364.157 165.917 367.013 147.5 367.799 135.625C368.695 122.173 359.455 126.078 341.786 129.174ZM166.497 172.756C166.497 172.756 180.246 151.372 203.565 158C226.899 164.628 228.706 190.425 228.706 190.425L166.497 172.756ZM223.42 268.713C182.403 256.698 176.077 223.99 176.077 223.99L286.262 254.796C286.262 254.791 264.021 280.578 223.42 268.713ZM262.377 201.495C262.377 201.495 276.107 180.126 299.422 186.773C322.736 193.411 324.572 219.208 324.572 219.208L262.377 201.495Z"
        fill="#2EAD33"
      />
      <path
        d="M139.88 246.04L99.3324 257.532C99.3324 257.532 103.737 232.44 133.607 222.496L110.647 136.33L108.663 136.933C80.1918 144.611 57.1742 142.574 47.5704 140.911C33.9554 138.563 26.834 135.572 27.5001 145.929C28.08 155.063 30.2557 169.224 35.2397 187.929C46.0225 228.433 81.6583 306.481 149.005 288.342L150.989 287.719L139.88 246.04ZM61.0848 188.485L108.946 175.876C108.946 175.876 107.551 194.288 89.6087 199.018C71.6615 203.743 61.0848 188.485 61.0848 188.485Z"
        fill="#D65348"
      />
      <path
        d="M225.27 269.163L223.415 268.712C182.398 256.698 176.072 223.99 176.072 223.99L232.89 239.872L262.971 124.281L262.607 124.185C225.711 114.304 201.232 97.0224 191.532 88.8994C177.783 77.3834 171.735 69.3802 165.783 81.4857C160.526 92.163 153.797 109.54 147.284 133.866C133.171 186.543 122.623 297.706 209.867 321.097L211.655 321.5L225.27 269.163ZM166.497 172.756C166.497 172.756 180.246 151.372 203.565 158C226.899 164.628 228.706 190.425 228.706 190.425L166.497 172.756Z"
        fill="#1D8D22"
      />
      <path
        d="M141.946 245.451L131.072 248.537C133.641 263.019 138.169 276.917 145.276 289.195C146.513 288.922 147.74 288.687 149 288.342C152.302 287.451 155.364 286.348 158.312 285.145C150.371 273.361 145.118 259.789 141.946 245.451ZM137.7 143.451C132.112 164.307 127.113 194.326 128.489 224.436C130.952 223.367 133.554 222.371 136.444 221.551L138.457 221.101C136.003 188.939 141.308 156.165 147.284 133.866C148.799 128.225 150.318 122.978 151.832 118.085C149.393 119.637 146.767 121.228 143.776 122.867C141.759 129.093 139.722 135.898 137.7 143.451Z"
        fill="#C04B41"
      />
    </svg>
  ),
  vite: () => (
    <>
      <Image
        src={ImagePath.VITE_LOGO}
        alt={""}
        fill
        loading={"lazy"}
        draggable={false}
      />
    </>
  ),
  firebase: () => (
    <>
      <Image
        src={ImagePath.FIREBASE_LOGO}
        alt={""}
        fill
        loading={"lazy"}
        draggable={false}
      />
    </>
  ),
  mongodb: () => (
    <svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg">
      <circle cx="512" cy="512" r="512" style={{ fill: "#13aa52" }} />
      <path
        d="M648.86 449.44c-32.34-142.73-108.77-189.66-117-207.59-9-12.65-18.12-35.15-18.12-35.15-.15-.38-.39-1.05-.67-1.7-.93 12.65-1.41 17.53-13.37 30.29-18.52 14.48-113.54 94.21-121.27 256.37-7.21 151.24 109.25 241.36 125 252.85l1.79 1.27v-.11c.1.76 5 36 8.44 73.34H526a726.68 726.68 0 0 1 13-78.53l1-.65a204.48 204.48 0 0 0 20.11-16.45l.72-.65c33.48-30.93 93.67-102.47 93.08-216.53a347.07 347.07 0 0 0-5.05-56.76zM512.35 659.12s0-212.12 7-212.08c5.46 0 12.53 273.61 12.53 273.61-9.72-1.17-19.53-45.03-19.53-61.53z"
        style={{ fill: "#fff" }}
      />
    </svg>
  ),
  nodejs: () => (
    <svg viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M17.1725 2.29872C16.4627 1.89953 15.5373 1.90132 14.8269 2.29872C11.2689 4.26227 7.71082 6.22641 4.15216 8.18906C3.45969 8.55335 2.99264 9.29698 3.00009 10.0688V21.9328C2.99509 22.7197 3.48622 23.4705 4.19655 23.8298C5.21871 24.3736 6.2118 24.9726 7.25244 25.4802C8.45451 26.0709 9.95843 26.2015 11.1752 25.5855C12.1629 25.075 12.6016 23.9395 12.6003 22.896C12.6083 18.9806 12.6016 15.0651 12.6034 11.1496C12.6269 10.9756 12.4962 10.7896 12.3064 10.7938C11.8517 10.7866 11.3964 10.7896 10.9417 10.7926C10.7699 10.7764 10.6022 10.9191 10.6152 11.0918C10.6091 14.982 10.6164 18.8734 10.6115 22.7642C10.6214 23.3024 10.2578 23.8196 9.73913 24.0014C8.5412 24.4213 5.12198 22.2012 5.12198 22.2012C4.9965 22.1431 4.91682 22.007 4.92912 21.8718C4.92912 17.9576 4.92973 14.0433 4.92912 10.1297C4.91187 9.97191 5.00912 9.8298 5.15402 9.76538C8.70033 7.8134 12.2448 5.85654 15.7911 3.90336C15.9143 3.82115 16.086 3.8214 16.2089 3.90396C19.7552 5.85654 23.3003 7.81161 26.8472 9.76368C26.9926 9.828 27.0857 9.9725 27.0709 10.1297C27.0703 14.0433 27.0721 17.9576 27.0697 21.8713C27.0802 22.0098 27.0086 22.144 26.8793 22.2048C23.3661 24.1462 19.8129 26.025 16.3315 28.0228C16.1796 28.1099 16.0075 28.2086 15.8373 28.1126C14.9218 27.6062 14.0174 27.0801 13.1049 26.5688C13.0057 26.5069 12.8794 26.4803 12.7759 26.5496C12.3668 26.7652 11.982 26.9398 11.5122 27.1258C10.8524 27.387 10.9578 27.4938 11.5529 27.8405C12.62 28.4444 13.6889 29.0459 14.756 29.6504C15.4585 30.0888 16.4024 30.12 17.1275 29.7149C20.6861 27.7538 24.2436 25.7904 27.8029 23.8293C28.5113 23.468 29.0049 22.7202 28.9999 21.9327V10.0688C29.0068 9.31264 28.5576 8.58227 27.886 8.21259C24.3156 6.23947 20.7435 4.27064 17.1725 2.29872Z"
        fill="#8CC84B"
      />
      <path
        d="M22.5419 11.2062C21.1452 10.459 19.4836 10.4192 17.9315 10.5169C16.8102 10.6277 15.6309 10.9371 14.814 11.7409C13.9761 12.5489 13.7937 13.8537 14.1917 14.9085C14.4769 15.6539 15.1948 16.1386 15.9372 16.395C16.8935 16.7326 17.8979 16.837 18.9026 16.9414C19.819 17.0366 20.7357 17.1319 21.6165 17.4042C21.9763 17.5234 22.3953 17.7058 22.5055 18.0973C22.6073 18.5609 22.4957 19.0998 22.1193 19.4219C20.9237 20.3682 17.5979 20.2232 16.4166 19.4784C15.939 19.1611 15.7332 18.5994 15.6495 18.0641C15.6402 17.8973 15.5059 17.7443 15.3248 17.757C14.8713 17.7516 14.4178 17.7528 13.9643 17.7564C13.8061 17.7431 13.6416 17.8557 13.6329 18.0172C13.5397 20.4689 15.7914 21.5377 17.9039 21.773C19.1108 21.888 20.3442 21.8814 21.5327 21.6224C22.4261 21.419 23.3219 21.0444 23.9369 20.3563C24.6953 19.52 24.8444 18.2749 24.5043 17.2332C24.2443 16.4559 23.5012 15.9573 22.7416 15.7008C21.7086 15.3466 20.4844 15.1562 19.5488 15.0671C18.1889 14.9376 16.5729 14.9905 16.188 14.0969C16.0345 13.629 16.1651 13.048 16.5951 12.7602C17.7328 11.9885 20.0483 12.091 21.2265 12.6675C21.7675 12.9384 22.081 13.4948 22.2104 14.0565C22.2344 14.2215 22.3454 14.3937 22.5364 14.3865C22.9868 14.3955 23.4372 14.3889 23.8875 14.3895C24.0422 14.4003 24.2116 14.313 24.2418 14.1546C24.2227 12.9806 23.6232 11.7788 22.5419 11.2062Z"
        fill="#8CC84B"
      />
    </svg>
  ),
  openai: () => (
    <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
      <path d="M22.2819 9.8211a5.9847 5.9847 0 0 0-.5157-4.9108 6.0462 6.0462 0 0 0-6.5098-2.9A6.0651 6.0651 0 0 0 4.9807 4.1818a5.9847 5.9847 0 0 0-3.9977 2.9 6.0462 6.0462 0 0 0 .7427 7.0966 5.98 5.98 0 0 0 .511 4.9107 6.051 6.051 0 0 0 6.5146 2.9001A5.9847 5.9847 0 0 0 13.2599 24a6.0557 6.0557 0 0 0 5.7718-4.2058 5.9894 5.9894 0 0 0 3.9977-2.9001 6.0557 6.0557 0 0 0-.7475-7.0729zm-9.022 12.6081a4.4755 4.4755 0 0 1-2.8764-1.0408l.1419-.0804 4.7783-2.7582a.7948.7948 0 0 0 .3927-.6813v-6.7369l2.02 1.1686a.071.071 0 0 1 .038.052v5.5826a4.504 4.504 0 0 1-4.4945 4.4944zm-9.6607-4.1254a4.4708 4.4708 0 0 1-.5346-3.0137l.142.0852 4.783 2.7582a.7712.7712 0 0 0 .7806 0l5.8428-3.3685v2.3324a.0804.0804 0 0 1-.0332.0615L9.74 19.9502a4.4992 4.4992 0 0 1-6.1408-1.6464zM2.3408 7.8956a4.485 4.485 0 0 1 2.3655-1.9728V11.6a.7664.7664 0 0 0 .3879.6765l5.8144 3.3543-2.0201 1.1685a.0757.0757 0 0 1-.071 0l-4.8303-2.7865A4.504 4.504 0 0 1 2.3408 7.872zm16.5963 3.8558L13.1038 8.364 15.1192 7.2a.0757.0757 0 0 1 .071 0l4.8303 2.7913a4.4944 4.4944 0 0 1-.6765 8.1042v-5.6772a.79.79 0 0 0-.407-.667zm2.0107-3.0231l-.142-.0852-4.7735-2.7818a.7759.7759 0 0 0-.7854 0L9.409 9.2297V6.8974a.0662.0662 0 0 1 .0284-.0615l4.8303-2.7866a4.4992 4.4992 0 0 1 6.6802 4.66zM8.3065 12.863l-2.02-1.1638a.0804.0804 0 0 1-.038-.0567V6.0742a4.4992 4.4992 0 0 1 7.3757-3.4537l-.142.0805L8.704 5.459a.7948.7948 0 0 0-.3927.6813zm1.0976-2.3654l2.602-1.4998 2.6069 1.4998v2.9994l-2.5974 1.4997-2.6067-1.4997Z" />
    </svg>
  ),
  gemini: () => (
    <svg viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M20 10.0196C14.6358 10.3431 10.3431 14.6358 10.0196 20H9.98042C9.65687 14.6358 5.36425 10.3431 0 10.0196V9.98043C5.36425 9.65688 9.65687 5.36424 9.98042 0H10.0196C10.3431 5.36424 14.6358 9.65688 20 9.98043V10.0196Z"
        fill="url(#paint0_radial_809_11874)"
      />
      <defs>
        <radialGradient
          id="paint0_radial_809_11874"
          cx="0"
          cy="0"
          r="1"
          gradientUnits="userSpaceOnUse"
          gradientTransform="translate(-6.13727 9.97493) scale(21.6266 172.607)"
        >
          <stop offset="0.385135" stopColor="#9E72BA" />
          <stop offset="0.734299" stopColor="#D65C67" />
          <stop offset="0.931035" stopColor="#D6635C" />
        </radialGradient>
      </defs>
    </svg>
  ),
  optimizely: () => (
    <svg fill="none" viewBox="0 0 38 38" xmlns="http://www.w3.org/2000/svg">
      <path
        d="m12.8359 20.4556v4.485c3.4221-.004 6.7029-1.3235 9.1227-3.6691s3.781-5.5257 3.7852-8.8428h-4.627c-.0027 2.128-.8761 4.1682-2.4284 5.6729-1.5524 1.5048-3.6571 2.3513-5.8525 2.354z"
        fill="#3be081"
      ></path>
      <path
        d="m12.8346 32.8099c-2.1796 0-4.26989-.8393-5.81108-2.3332-1.5412-1.4939-2.40703-3.5201-2.40703-5.6328 0-2.1128.86583-4.1389 2.40703-5.6329 1.54119-1.4939 3.63148-2.3332 5.81108-2.3332v-4.452c-1.6831-.0023-3.35011.3167-4.90597.9389-1.55586.6221-2.97007 1.5353-4.16187 2.6872s-2.13786 2.5202-2.784159 4.0265c-.6463 1.5064-.98018355 3.1214-.98258792 4.7528s.32671792 3.2473.96857492 4.7555c.641862 1.5081 1.583882 2.8789 2.772282 4.0342 1.1884 1.1552 2.59991 2.0723 4.15393 2.6987 1.55402.6265 3.2201.9502 4.9032.9525h.0366z"
        fill="#0037ff"
      ></path>
      <path
        d="m12.8359 32.81v4.452c3.3991 0 6.659-1.3088 9.0625-3.6386s3.7538-5.4897 3.7538-8.7845h-4.5981c-.0014 2.1127-.8675 4.1387-2.4083 5.6331-1.5407 1.4944-3.6302 2.3353-5.8099 2.338z"
        fill="#0cf"
      ></path>
      <path
        d="m12.8359 7.9711v4.452c3.3991 0 6.659-1.3088 9.0625-3.63861 2.4035-2.32979 3.7538-5.48967 3.7538-8.78449h-4.5981c-.0014 2.11278-.8675 4.13871-2.4083 5.63314-1.5407 1.49444-3.6302 2.33527-5.8099 2.33796z"
        fill="#861dff"
      ></path>
      <path
        d="m25.7266 7.9711v4.452c3.3991 0 6.6589-1.3088 9.0624-3.63861 2.4036-2.32979 3.7538-5.48967 3.7538-8.78449h-4.5955c-.0014 2.11321-.8679 4.13953-2.4092 5.63404-1.5413 1.4945-3.6314 2.33504-5.8115 2.33706z"
        fill="#ff8110"
      ></path>
    </svg>
  ),
  moz: () => (
    <svg
      fill="#24ABE2"
      version="1.1"
      id="Capa_1"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      viewBox="0 0 359.09 359.09"
      xmlSpace="preserve"
    >
      <g>
        <path
          d="M359.09,139.004H243.6v11.568c-10.986-15.8-30.639-26.346-53.178-26.346c-24.593,0-45.768,12.551-55.965,30.803
		l-0.003-16.141H99.09l-31.449,43.841l-37.809-43.84H0.203L0,219.971h28.024l0.269-39.114l36.966,42.295h6.866l34.134-42.295
		l0.356,39.114h27.856l-0.003-15.893c10.206,18.238,31.372,30.785,55.954,30.785c34.562,0,62.477-24.727,62.477-55.323
		c0-4.258-0.59-8.383-1.611-12.359h37.23l-52.646,52.903h117.301V193.57h-46.916L359.09,139.004z M190.422,203.774
		c-15.245,0-27.524-10.879-27.524-24.378c0-13.5,12.281-24.374,27.524-24.374c15.256,0,27.533,10.874,27.533,24.374
		C217.955,192.896,205.678,203.774,190.422,203.774z"
        />
      </g>
    </svg>
  ),
  figma: () => (
    <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
      <g fill="none" fillRule="evenodd" transform="translate(4)">
        <circle cx="12" cy="12" r="4" fill="#19BCFE" />
        <path
          fill="#09CF83"
          d="M4,24 C6.209139,24 8,22.209139 8,20 C8,19.3969461 8,18.0636128 8,16 C6.20303877,16 4.86970543,16 4,16 C1.790861,16 0,17.790861 0,20 C0,22.209139 1.790861,24 4,24 Z"
        />
        <path
          fill="#A259FF"
          d="M4,16 C4.73637967,16 6.069713,16 8,16 L8,8 C6.069713,8 4.73637967,8 4,8 C1.790861,8 0,9.790861 0,12 C0,14.209139 1.790861,16 4,16 Z"
        />
        <path
          fill="#F24E1E"
          d="M4,8 C4.73637967,8 6.069713,8 8,8 L8,0 C6.069713,0 4.73637967,0 4,0 C1.790861,0 0,1.790861 0,4 C0,6.209139 1.790861,8 4,8 Z"
        />
        <path
          fill="#FF7262"
          d="M12,8 L8,8 L8,8 L8,0 L12,0 L12,0 C14.209139,0 16,1.790861 16,4 C16,6.209139 14.209139,8 12,8 Z"
        />
      </g>
    </svg>
  ),
  canva: () => (
    <Image
      src={ImagePath.CANVA_LOGO}
      alt={""}
      fill
      loading={"lazy"}
      draggable={false}
    />
  ),
  cursor: () => (
    <Image
      src={ImagePath.CURSOR_LOGO}
      alt={""}
      fill
      loading={"lazy"}
      draggable={false}
    />
  ),
  vscode: () => (
    <Image
      src={ImagePath.VS_CODE_LOGO}
      alt={""}
      fill
      loading={"lazy"}
      draggable={false}
    />
  ),
  git: () => (
    <Image
      src={ImagePath.GIT_LOGO}
      alt={""}
      fill
      loading={"lazy"}
      draggable={false}
    />
  ),
  postman: () => (
    <Image
      src={ImagePath.POSTMAN_LOGO}
      alt={""}
      fill
      loading={"lazy"}
      draggable={false}
    />
  ),
  synk: () => (
    <Image
      src={ImagePath.SYNK_LOGO}
      alt={""}
      fill
      loading={"lazy"}
      draggable={false}
    />
  ),
  jenkins: () => (
    <Image
      src={ImagePath.JENKINS_LOGO}
      alt={""}
      fill
      loading={"lazy"}
      draggable={false}
    />
  ),
  terraform: () => (
    <Image
      src={ImagePath.TERRAFORM_LOGO}
      alt={""}
      fill
      loading={"lazy"}
      draggable={false}
    />
  ),
  python: () => (
    <Image
      src={ImagePath.PYTHON_LOGO}
      alt={""}
      fill
      loading={"lazy"}
      draggable={false}
    />
  ),
  typescript: () => (
    <Image
      src={ImagePath.TYPESCRIPT_LOGO}
      alt={""}
      fill
      loading={"lazy"}
      draggable={false}
    />
  ),
  javascript: () => (
    <Image
      src={ImagePath.JAVASCRIPT_LOGO}
      alt={""}
      fill
      loading={"lazy"}
      draggable={false}
    />
  ),
  dart: () => (
    <Image
      src={ImagePath.DART_LOGO}
      alt={""}
      fill
      loading={"lazy"}
      draggable={false}
    />
  ),
  php: () => (
    <Image
      src={ImagePath.PHP_LOGO}
      alt={""}
      fill
      loading={"lazy"}
      draggable={false}
    />
  ),
  redis: () => (
    <Image
      src={ImagePath.REDIS_LOGO}
      alt=""
      fill
      loading="lazy"
      quality={100}
      draggable={false}
    />
  ),
  tensorflow: () => (
    <Image
      src={ImagePath.TENSORFLOW}
      alt=""
      fill
      loading="lazy"
      quality={100}
      draggable={false}
    />
  ),
  langchain: () => (
    <Image
      src={ImagePath.LANGCHAIN_LOGO}
      alt=""
      fill
      loading="lazy"
      quality={100}
      draggable={false}
    />
  ),
  huggingFace: () => (
    <Image
      src={ImagePath.HUGGING_FACE_LOGO}
      alt=""
      fill
      loading="lazy"
      quality={100}
      draggable={false}
    />
  ),
  wb: () => (
    <Image
      src={ImagePath.WB_LOGO}
      alt=""
      fill
      loading="lazy"
      quality={100}
      draggable={false}
    />
  ),
  kafka: () => (
    <Image
      src={ImagePath.KAFKA_LOGO}
      alt=""
      fill
      loading="lazy"
      quality={100}
      draggable={false}
    />
  ),
  vercel: () => (
    <Image
      src={ImagePath.VERCEL_ICON}
      alt=""
      fill
      loading="lazy"
      quality={100}
      draggable={false}
    />
  ),
  autogen: () => (
    <div className="bg-black/85 p-0.5 grid place-items-center">
      <span className="font-poppins font-bold text-center text-[13px] tracking-wide">AG</span>
    </div>
  )
};

const ReactLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox="0 -14 256 256"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <g>
        <path
          d="M210.483381,73.8236374 C207.827698,72.9095503 205.075867,72.0446761 202.24247,71.2267368 C202.708172,69.3261098 203.135596,67.4500894 203.515631,65.6059664 C209.753843,35.3248922 205.675082,10.9302478 191.747328,2.89849283 C178.392359,-4.80289661 156.551327,3.22703567 134.492936,22.4237776 C132.371761,24.2697233 130.244662,26.2241201 128.118477,28.2723861 C126.701777,26.917204 125.287358,25.6075897 123.876584,24.3549348 C100.758745,3.82852863 77.5866802,-4.82157937 63.6725966,3.23341515 C50.3303869,10.9571328 46.3792156,33.8904224 51.9945178,62.5880206 C52.5367729,65.3599011 53.1706189,68.1905639 53.8873982,71.068617 C50.6078941,71.9995641 47.4418534,72.9920277 44.4125156,74.0478303 C17.3093297,83.497195 0,98.3066828 0,113.667995 C0,129.533287 18.5815786,145.446423 46.8116526,155.095373 C49.0394553,155.856809 51.3511025,156.576778 53.7333796,157.260293 C52.9600965,160.37302 52.2875179,163.423318 51.7229345,166.398431 C46.3687351,194.597975 50.5500231,216.989464 63.8566899,224.664425 C77.6012619,232.590464 100.66852,224.443422 123.130185,204.809231 C124.905501,203.257196 126.687196,201.611293 128.472081,199.886102 C130.785552,202.113904 133.095375,204.222319 135.392897,206.199955 C157.14963,224.922338 178.637969,232.482469 191.932332,224.786092 C205.663234,216.837268 210.125675,192.78347 204.332202,163.5181 C203.88974,161.283006 203.374826,158.99961 202.796573,156.675661 C204.416503,156.196743 206.006814,155.702335 207.557482,155.188332 C236.905331,145.46465 256,129.745175 256,113.667995 C256,98.2510906 238.132466,83.3418093 210.483381,73.8236374 L210.483381,73.8236374 Z M204.118035,144.807565 C202.718197,145.270987 201.281904,145.718918 199.818271,146.153177 C196.578411,135.896354 192.205739,124.989735 186.854729,113.72131 C191.961041,102.721277 196.164656,91.9540963 199.313837,81.7638014 C201.93261,82.5215915 204.474374,83.3208483 206.923636,84.1643056 C230.613348,92.3195488 245.063763,104.377206 245.063763,113.667995 C245.063763,123.564379 229.457753,136.411268 204.118035,144.807565 L204.118035,144.807565 Z M193.603754,165.642007 C196.165567,178.582766 196.531475,190.282717 194.834536,199.429057 C193.309843,207.64764 190.243595,213.12715 186.452366,215.321689 C178.384612,219.991462 161.131788,213.921395 142.525146,197.909832 C140.392124,196.074366 138.243609,194.114502 136.088259,192.040261 C143.301619,184.151133 150.510878,174.979732 157.54698,164.793993 C169.922699,163.695814 181.614905,161.900447 192.218042,159.449363 C192.740247,161.555956 193.204126,163.621993 193.603754,165.642007 L193.603754,165.642007 Z M87.2761866,214.514686 C79.3938934,217.298414 73.1160375,217.378157 69.3211631,215.189998 C61.2461189,210.532528 57.8891498,192.554265 62.4682434,168.438039 C62.9927272,165.676183 63.6170041,162.839142 64.3365173,159.939216 C74.8234575,162.258154 86.4299951,163.926841 98.8353334,164.932519 C105.918826,174.899534 113.336329,184.06091 120.811247,192.08264 C119.178102,193.65928 117.551336,195.16028 115.933685,196.574699 C106.001303,205.256705 96.0479605,211.41654 87.2761866,214.514686 L87.2761866,214.514686 Z M50.3486141,144.746959 C37.8658105,140.48046 27.5570398,134.935332 20.4908634,128.884403 C14.1414664,123.446815 10.9357817,118.048415 10.9357817,113.667995 C10.9357817,104.34622 24.8334611,92.4562517 48.0123604,84.3748281 C50.8247961,83.3942121 53.7689223,82.4701001 56.8242337,81.6020363 C60.0276398,92.0224477 64.229889,102.917218 69.3011135,113.93411 C64.1642716,125.11459 59.9023288,136.182975 56.6674809,146.725506 C54.489347,146.099407 52.3791089,145.440499 50.3486141,144.746959 L50.3486141,144.746959 Z M62.7270678,60.4878073 C57.9160346,35.9004118 61.1112387,17.3525532 69.1516515,12.6982729 C77.7160924,7.74005624 96.6544653,14.8094222 116.614922,32.5329619 C117.890816,33.6657739 119.171723,34.8514442 120.456275,36.0781256 C113.018267,44.0647686 105.66866,53.1573386 98.6480514,63.0655695 C86.6081646,64.1815215 75.0831931,65.9741531 64.4868907,68.3746571 C63.8206914,65.6948233 63.2305903,63.0619242 62.7270678,60.4878073 L62.7270678,60.4878073 Z M173.153901,87.7550367 C170.620796,83.3796304 168.020249,79.1076627 165.369124,74.9523483 C173.537126,75.9849113 181.362914,77.3555864 188.712066,79.0329319 C186.505679,86.1041206 183.755673,93.4974728 180.518546,101.076741 C178.196419,96.6680702 175.740322,92.2229454 173.153901,87.7550367 L173.153901,87.7550367 Z M128.122121,43.8938899 C133.166461,49.3588189 138.218091,55.4603279 143.186789,62.0803968 C138.179814,61.8439007 133.110868,61.720868 128.000001,61.720868 C122.937434,61.720868 117.905854,61.8411667 112.929865,62.0735617 C117.903575,55.515009 122.99895,49.4217021 128.122121,43.8938899 L128.122121,43.8938899 Z M82.8018984,87.830679 C80.2715265,92.2183886 77.8609975,96.6393627 75.5753239,101.068539 C72.3906004,93.5156998 69.6661103,86.0886276 67.440586,78.9171899 C74.7446255,77.2826781 82.5335049,75.9461789 90.6495601,74.9332099 C87.9610684,79.1268011 85.3391054,83.4302106 82.8018984,87.8297677 L82.8018984,87.830679 L82.8018984,87.830679 Z M90.8833221,153.182899 C82.4979621,152.247395 74.5919739,150.979704 67.289757,149.390303 C69.5508242,142.09082 72.3354636,134.505173 75.5876271,126.789657 C77.8792246,131.215644 80.2993228,135.638441 82.8451877,140.03572 L82.8456433,140.03572 C85.4388987,144.515476 88.1255676,148.90364 90.8833221,153.182899 L90.8833221,153.182899 Z M128.424691,184.213105 C123.24137,178.620587 118.071264,172.434323 113.021912,165.780078 C117.923624,165.972373 122.921029,166.0708 128.000001,166.0708 C133.217953,166.0708 138.376211,165.953235 143.45336,165.727219 C138.468257,172.501308 133.434855,178.697141 128.424691,184.213105 L128.424691,184.213105 Z M180.622896,126.396409 C184.044571,134.195313 186.929004,141.741317 189.219234,148.9164 C181.796719,150.609693 173.782736,151.973534 165.339049,152.986959 C167.996555,148.775595 170.619884,144.430263 173.197646,139.960532 C175.805484,135.438399 178.28163,130.90943 180.622896,126.396409 L180.622896,126.396409 Z M163.724586,134.496971 C159.722835,141.435557 155.614455,148.059271 151.443648,154.311611 C143.847063,154.854776 135.998946,155.134562 128.000001,155.134562 C120.033408,155.134562 112.284171,154.887129 104.822013,154.402745 C100.48306,148.068386 96.285368,141.425078 92.3091341,134.556664 L92.3100455,134.556664 C88.3442923,127.706935 84.6943232,120.799333 81.3870228,113.930466 C84.6934118,107.045648 88.3338117,100.130301 92.276781,93.292874 L92.2758697,93.294241 C96.2293193,86.4385872 100.390102,79.8276317 104.688954,73.5329157 C112.302398,72.9573964 120.109505,72.6571055 127.999545,72.6571055 L128.000001,72.6571055 C135.925583,72.6571055 143.742714,72.9596746 151.353879,73.5402067 C155.587114,79.7888993 159.719645,86.3784378 163.688588,93.2350031 C167.702644,100.168578 171.389978,107.037901 174.724618,113.77508 C171.400003,120.627999 167.720871,127.566587 163.724586,134.496971 L163.724586,134.496971 Z M186.284677,12.3729198 C194.857321,17.3165548 198.191049,37.2542268 192.804953,63.3986692 C192.461372,65.0669011 192.074504,66.7661189 191.654369,68.4881206 C181.03346,66.0374921 169.500286,64.2138746 157.425315,63.0810626 C150.391035,53.0639249 143.101577,43.9572289 135.784778,36.073113 C137.751934,34.1806885 139.716356,32.3762092 141.672575,30.673346 C160.572216,14.2257007 178.236518,7.73185406 186.284677,12.3729198 L186.284677,12.3729198 Z M128.000001,90.8080696 C140.624975,90.8080696 150.859926,101.042565 150.859926,113.667995 C150.859926,126.292969 140.624975,136.527922 128.000001,136.527922 C115.375026,136.527922 105.140075,126.292969 105.140075,113.667995 C105.140075,101.042565 115.375026,90.8080696 128.000001,90.8080696 L128.000001,90.8080696 Z"
          fill="#00D8FF"
        ></path>
      </g>
    </svg>
  );
};

const VueLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox="0 -17.5 256 256"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <g>
        <path
          d="M204.8,0 L256,0 L128,220.8 L0,0 L50.56,0 L97.92,0 L128,51.2 L157.44,0 L204.8,0 Z"
          fill="#41B883"
        ></path>
        <path
          d="M0,0 L128,220.8 L256,0 L204.8,0 L128,132.48 L50.56,0 L0,0 Z"
          fill="#41B883"
        ></path>
        <path
          d="M50.56,0 L128,133.12 L204.8,0 L157.44,0 L128,51.2 L97.92,0 L50.56,0 Z"
          fill="#35495E"
        ></path>
      </g>
    </svg>
  );
};

const AngularLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 223 236"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <g clipPath="url(#a)">
        <path
          _ngcontent-ng-c249881476=""
          fill="url(#b)"
          d="m222.077 39.192-8.019 125.923L137.387 0l84.69 39.192Zm-53.105 162.825-57.933 33.056-57.934-33.056 11.783-28.556h92.301l11.783 28.556ZM111.039 62.675l30.357 73.803H80.681l30.358-73.803ZM7.937 165.115 0 39.192 84.69 0 7.937 165.115Z"
        ></path>
        <path
          _ngcontent-ng-c249881476=""
          fill="url(#c)"
          d="m222.077 39.192-8.019 125.923L137.387 0l84.69 39.192Zm-53.105 162.825-57.933 33.056-57.934-33.056 11.783-28.556h92.301l11.783 28.556ZM111.039 62.675l30.357 73.803H80.681l30.358-73.803ZM7.937 165.115 0 39.192 84.69 0 7.937 165.115Z"
        ></path>
      </g>
      <defs _ngcontent-ng-c249881476="">
        <linearGradient
          _ngcontent-ng-c249881476=""
          id="b"
          x1="49.009"
          x2="225.829"
          y1="213.75"
          y2="129.722"
          gradientUnits="userSpaceOnUse"
        >
          <stop _ngcontent-ng-c249881476="" stopColor="#E40035"></stop>
          <stop
            _ngcontent-ng-c249881476=""
            offset=".24"
            stopColor="#F60A48"
          ></stop>
          <stop
            _ngcontent-ng-c249881476=""
            offset=".352"
            stopColor="#F20755"
          ></stop>
          <stop
            _ngcontent-ng-c249881476=""
            offset=".494"
            stopColor="#DC087D"
          ></stop>
          <stop
            _ngcontent-ng-c249881476=""
            offset=".745"
            stopColor="#9717E7"
          ></stop>
          <stop
            _ngcontent-ng-c249881476=""
            offset="1"
            stopColor="#6C00F5"
          ></stop>
        </linearGradient>
        <linearGradient
          _ngcontent-ng-c249881476=""
          id="c"
          x1="41.025"
          x2="156.741"
          y1="28.344"
          y2="160.344"
          gradientUnits="userSpaceOnUse"
        >
          <stop _ngcontent-ng-c249881476="" stopColor="#FF31D9"></stop>
          <stop
            _ngcontent-ng-c249881476=""
            offset="1"
            stopColor="#FF5BE1"
            stopOpacity="0"
          ></stop>
        </linearGradient>
        <clipPath _ngcontent-ng-c249881476="" id="a">
          <path
            _ngcontent-ng-c249881476=""
            fill="#fff"
            d="M0 0h223v236H0z"
          ></path>
        </clipPath>
      </defs>
    </svg>
  );
};

const TailwindCSSLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox="0 -51 256 256"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <defs>
        <linearGradient
          x1="-2.77777778%"
          y1="32%"
          x2="100%"
          y2="67.5555556%"
          id="linearGradient-1"
        >
          <stop stopColor="#2298BD" offset="0%"></stop>
          <stop stopColor="#0ED7B5" offset="100%"></stop>
        </linearGradient>
      </defs>
      <g>
        <path
          d="M128,-1.0658141e-14 C93.8666667,-1.0658141e-14 72.5333333,17.0666667 64,51.2 C76.8,34.1333333 91.7333333,27.7333333 108.8,32 C118.537481,34.4343704 125.497363,41.4985481 133.201067,49.3184 C145.750756,62.0567704 160.275437,76.8 192,76.8 C226.133333,76.8 247.466667,59.7333333 256,25.6 C243.2,42.6666667 228.266667,49.0666667 211.2,44.8 C201.462519,42.3656296 194.502637,35.3014519 186.798933,27.4816 C174.249244,14.7432296 159.724563,-1.0658141e-14 128,-1.0658141e-14 Z M64,76.8 C29.8666667,76.8 8.53333333,93.8666667 0,128 C12.8,110.933333 27.7333333,104.533333 44.8,108.8 C54.5374815,111.23437 61.497363,118.298548 69.2010667,126.1184 C81.7507556,138.85677 96.275437,153.6 128,153.6 C162.133333,153.6 183.466667,136.533333 192,102.4 C179.2,119.466667 164.266667,125.866667 147.2,121.6 C137.462519,119.16563 130.502637,112.101452 122.798933,104.2816 C110.249244,91.5432296 95.724563,76.8 64,76.8 Z"
          fill="url(#linearGradient-1)"
        ></path>
      </g>
    </svg>
  );
};

const LottieLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox="0 0 64 64"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      preserveAspectRatio="xMidYMid"
      className={cn(
        "c-PJLV c-PJLV-fYGgTQ-size-lg c-PJLV-ijIslH-css",
        className
      )}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M16.1947 0H47.8053C56.7493 0 63.9999 7.25065 63.9999 16.1947V47.8053C63.9999 56.7493 56.7493 64 47.8053 64H16.1947C7.2506 64 0 56.7493 0 47.8053V16.1947C0 7.25065 7.2506 0 16.1947 0ZM30.2792 28.4924C33.5603 22.1766 37.6337 14.3356 48.6489 14.3356C49.0645 14.3352 49.4761 14.4167 49.8601 14.5756C50.2441 14.7344 50.593 14.9674 50.8869 15.2613C51.1807 15.5552 51.4138 15.9041 51.5726 16.2881C51.7314 16.6721 51.813 17.0837 51.8125 17.4993C51.813 17.9149 51.7314 18.3264 51.5726 18.7105C51.4138 19.0945 51.1807 19.4434 50.8869 19.7373C50.593 20.0311 50.2441 20.2642 49.8601 20.423C49.4761 20.5818 49.0645 20.6634 48.6489 20.6629C41.9582 20.6629 39.3623 24.7351 35.8839 31.4388L33.7392 35.4786L33.7304 35.4955C30.4514 41.8134 26.3766 49.6647 15.3543 49.6647C14.5152 49.6647 13.7105 49.3314 13.1172 48.7381C12.5239 48.1448 12.1906 47.3401 12.1906 46.501C12.1906 45.662 12.5239 44.8573 13.1172 44.264C13.7105 43.6707 14.5152 43.3374 15.3543 43.3374C22.045 43.3374 24.6408 39.2652 28.1224 32.5615L30.264 28.5218L30.2792 28.4924Z"
        className="c-PJLV c-PJLV-gDQMhN-appearance-default"
      ></path>
    </svg>
  );
};

const FlutterLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox="-30.5 0 317 317"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <defs>
        <linearGradient
          x1="3.9517088%"
          y1="26.9930287%"
          x2="75.8970734%"
          y2="52.9192657%"
          id="linearGradient-1"
        >
          <stop stopColor="#000000" offset="0%"></stop>
          <stop stopColor="#000000" stopOpacity="0" offset="100%"></stop>
        </linearGradient>
      </defs>
      <g>
        <polygon
          fill="#47C5FB"
          points="157.665785 0.000549356223 0.000549356223 157.665785 48.8009614 206.466197 255.267708 0.000549356223"
        ></polygon>
        <polygon
          fill="#47C5FB"
          points="156.567183 145.396793 72.1487107 229.815265 121.132608 279.530905 169.842925 230.820587 255.267818 145.396793"
        ></polygon>
        <polygon
          fill="#00569E"
          points="121.133047 279.531124 158.214592 316.61267 255.267159 316.61267 169.842266 230.820807"
        ></polygon>
        <polygon
          fill="#00B5F8"
          points="71.5995742 230.364072 120.401085 181.562561 169.842046 230.821136 121.132827 279.531454"
        ></polygon>
        <polygon
          fillOpacity="0.8"
          fill="url(#linearGradient-1)"
          points="121.132827 279.531454 161.692896 266.072227 165.721875 234.941308"
        ></polygon>
      </g>
    </svg>
  );
};


// const NestJSLogo = ({ className }: { className?: string }) => {
//   return (
//     <svg
//       viewBox="0 0 32 32"
//       xmlns="http://www.w3.org/2000/svg"
//       xmlnsXlink="http://www.w3.org/1999/xlink"
//       preserveAspectRatio="xMidYMid"
//       className={className}
//     >
//       <path
//         d="M18.487,2a1.781,1.781,0,0,0-.564.1c1.615,1.062-.29,2.6.6,3.9A2.235,2.235,0,0,1,19.6,3.765c.285-.237.468-.322.407-.714C19.908,2.409,19.052,2,18.487,2Zm2.3.414c-.223,1.123-.5,1.164-1.323,1.887a1.821,1.821,0,0,0-.527,2.191c-3.4-1.32-7.758-2.118-10.953.166-1.149.821-1.85,2-3.267,2.481-.916.314-1.816.221-2.39,1.129A1.413,1.413,0,0,0,2.383,12.1c.171.175.5.287.636.465.079.1.077.2.152.333a2.6,2.6,0,0,0,.564.828c.147.121.652.239.738.368.108.161-.172.8.063.9.158.073.621-.744.666-.816-.092.643-.213,1.784.51.834.343-.451.364-.6.941-.7a8.2,8.2,0,0,1,1.117-.116,8.362,8.362,0,0,1,8.622,7.622c-.108-.5-.761-1.3-1.369-1.11-.259.08-.355.527-.525.786a3.773,3.773,0,0,1-.785.868,4.687,4.687,0,0,0-.072-1.452c-.182.748-.547,1.989-1.466,1.788a1.652,1.652,0,0,1-1.328-1.142c-.119-.76.684-1.651-.607-1.714-2.59-.127-1.991,3.682-.462,4.675a3.272,3.272,0,0,0-1.015.283,6.893,6.893,0,0,0,10.276-4.922,7.058,7.058,0,0,1-.015,3.085,7.213,7.213,0,0,1-.554,1.559,6.781,6.781,0,0,1-1.3,1.81c-.314.311-.89.624-1.088.941a13.409,13.409,0,0,0,3.52-.968A11.638,11.638,0,0,1,15.1,30a11.589,11.589,0,0,0,9.3-5.909,11.657,11.657,0,0,1-1.945,4.668,11.531,11.531,0,0,0,4.975-7.783,11.622,11.622,0,0,1,.209,3.5A12.418,12.418,0,0,0,29.528,13.91a15.755,15.755,0,0,0-1.689-3.962A14.838,14.838,0,0,0,26.9,8.554c-.133-.173-.844-.806-.844-1q-.009.029-.015,0c0,3.248-3.5,5.333-6.431,4.463A5,5,0,0,0,24.156,7.85,5,5,0,0,0,20.787,2.414Z"
//         style={{
//           fill: "#ea2845",
//           fillRule: "evenodd",
//         }}
//       />
//     </svg>
//   );
// };


const MySQLLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox="-18.458 -22.75 191.151 191.151"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <path d="M-18.458 6.58h191.151v132.49H-18.458V6.58z" fill="none" />
      <path
        d="M40.054 113.583h-5.175c-.183-8.735-.687-16.947-1.511-24.642h-.046l-7.879 24.642h-3.94l-7.832-24.642h-.045c-.581 7.388-.947 15.602-1.099 24.642H7.81c.304-10.993 1.068-21.299 2.289-30.919h6.414l7.465 22.719h.046l7.511-22.719h6.137c1.344 11.268 2.138 21.575 2.382 30.919M62.497 90.771c-2.107 11.434-4.887 19.742-8.337 24.928-2.688 3.992-5.633 5.99-8.84 5.99-.855 0-1.91-.258-3.16-.77v-2.757c.611.088 1.328.138 2.152.138 1.498 0 2.702-.412 3.62-1.238 1.098-1.006 1.647-2.137 1.647-3.388 0-.858-.428-2.612-1.282-5.268L42.618 90.77h5.084l4.076 13.19c.916 2.995 1.298 5.086 1.145 6.277 2.229-5.953 3.786-12.444 4.673-19.468h4.901v.002z"
        fill="#5d87a1"
      />
      <path
        d="M131.382 113.583h-14.7V82.664h4.945v27.113h9.755v3.806zM112.834 114.33l-5.684-2.805c.504-.414.986-.862 1.42-1.381 2.416-2.838 3.621-7.035 3.621-12.594 0-10.229-4.014-15.346-12.045-15.346-3.938 0-7.01 1.298-9.207 3.895-2.414 2.84-3.619 7.022-3.619 12.551 0 5.435 1.068 9.422 3.205 11.951 1.955 2.291 4.902 3.438 8.843 3.438 1.47 0 2.819-.18 4.048-.543l7.4 4.308 2.018-3.474zm-18.413-6.934c-1.252-2.014-1.878-5.248-1.878-9.707 0-7.785 2.365-11.682 7.1-11.682 2.475 0 4.289.932 5.449 2.792 1.25 2.017 1.879 5.222 1.879 9.619 0 7.849-2.367 11.774-7.099 11.774-2.476.001-4.29-.928-5.451-2.796M85.165 105.013c0 2.622-.962 4.773-2.884 6.458-1.924 1.678-4.504 2.519-7.737 2.519-3.024 0-5.956-.966-8.794-2.888l1.329-2.655c2.442 1.223 4.653 1.831 6.638 1.831 1.863 0 3.319-.413 4.375-1.232 1.055-.822 1.684-1.975 1.684-3.433 0-1.837-1.281-3.407-3.631-4.722-2.167-1.19-6.501-3.678-6.501-3.678-2.349-1.712-3.525-3.55-3.525-6.578 0-2.506.877-4.529 2.632-6.068 1.757-1.545 4.024-2.315 6.803-2.315 2.87 0 5.479.769 7.829 2.291l-1.192 2.656c-2.01-.854-3.994-1.281-5.951-1.281-1.585 0-2.809.381-3.66 1.146-.858.762-1.387 1.737-1.387 2.933 0 1.828 1.308 3.418 3.722 4.759 2.196 1.192 6.638 3.723 6.638 3.723 2.409 1.709 3.612 3.53 3.612 6.534"
        fill="#f8981d"
      />
      <path
        d="M137.59 72.308c-2.99-.076-5.305.225-7.248 1.047-.561.224-1.453.224-1.531.933.303.3.338.784.601 1.198.448.747 1.229 1.752 1.942 2.276.783.6 1.569 1.194 2.393 1.717 1.453.899 3.1 1.422 4.516 2.318.825.521 1.645 1.195 2.471 1.756.406.299.666.784 1.193.971v-.114c-.264-.336-.339-.822-.598-1.196l-1.122-1.082c-1.084-1.456-2.431-2.727-3.884-3.771-1.196-.824-3.812-1.944-4.297-3.322l-.076-.076c.822-.077 1.797-.375 2.578-.604 1.271-.335 2.43-.259 3.734-.594.6-.15 1.195-.338 1.797-.523v-.337c-.676-.673-1.158-1.567-1.869-2.203-1.902-1.643-3.998-3.25-6.164-4.595-1.16-.749-2.652-1.231-3.887-1.868-.445-.225-1.195-.336-1.457-.71-.67-.822-1.047-1.904-1.533-2.877-1.08-2.053-2.129-4.331-3.061-6.502-.674-1.456-1.084-2.91-1.906-4.257-3.85-6.35-8.031-10.196-14.457-13.971-1.381-.786-3.024-1.121-4.779-1.533l-2.803-.148c-.598-.262-1.197-.973-1.719-1.309-2.132-1.344-7.621-4.257-9.189-.411-1.01 2.431 1.494 4.821 2.354 6.054.635.856 1.458 1.83 1.902 2.802.263.635.337 1.309.6 1.98.598 1.644 1.157 3.473 1.943 5.007.41.782.857 1.604 1.381 2.312.3.414.822.597.936 1.272-.521.744-.562 1.867-.861 2.801-1.344 4.221-.819 9.45 1.086 12.552.596.934 2.018 2.99 3.92 2.202 1.684-.672 1.311-2.801 1.795-4.668.111-.451.038-.747.262-1.043v.073c.521 1.045 1.047 2.052 1.53 3.1 1.159 1.829 3.177 3.735 4.858 5.002.895.676 1.604 1.832 2.725 2.245V74.1h-.074c-.227-.335-.559-.485-.857-.745-.674-.673-1.42-1.495-1.943-2.241-1.566-2.093-2.952-4.41-4.182-6.801-.602-1.16-1.121-2.428-1.606-3.586-.226-.447-.226-1.121-.601-1.346-.562.821-1.381 1.532-1.791 2.538-.711 1.609-.785 3.588-1.049 5.646l-.147.072c-1.19-.299-1.604-1.53-2.056-2.575-1.119-2.654-1.307-6.914-.336-9.976.26-.783 1.385-3.249.936-3.995-.225-.715-.973-1.122-1.383-1.685-.482-.708-1.01-1.604-1.346-2.39-.896-2.091-1.347-4.408-2.312-6.498-.451-.974-1.234-1.982-1.868-2.879-.712-1.008-1.495-1.718-2.058-2.913-.186-.411-.447-1.083-.148-1.53.073-.3.225-.412.523-.487.484-.409 1.867.111 2.352.336 1.385.56 2.543 1.083 3.699 1.867.523.375 1.084 1.085 1.755 1.272h.786c1.193.26 2.538.072 3.661.41 1.979.636 3.772 1.569 5.38 2.576 4.893 3.103 8.928 7.512 11.652 12.778.447.858.637 1.644 1.045 2.539.787 1.832 1.76 3.7 2.541 5.493.785 1.755 1.533 3.547 2.654 5.005.559.784 2.805 1.195 3.812 1.606.745.335 1.905.633 2.577 1.044 1.271.783 2.537 1.682 3.732 2.543.595.448 2.465 1.382 2.576 2.13M99.484 39.844a5.82 5.82 0 0 0-1.529.188v.075h.072c.301.597.824 1.011 1.197 1.532.301.599.562 1.193.857 1.791l.072-.074c.527-.373.789-.971.789-1.868-.227-.264-.262-.522-.451-.784-.22-.374-.705-.56-1.007-.86"
        fill="#5d87a1"
      />
      <path
        d="M141.148 113.578h.774v-3.788h-1.161l-.947 2.585-1.029-2.585h-1.118v3.788h.731v-2.882h.041l1.078 2.882h.557l1.074-2.882v2.882zm-6.235 0h.819v-3.146h1.072v-.643h-3.008v.643h1.115l.002 3.146z"
        fill="#f8981d"
      />
    </svg>
  );
};

const OwaspZapLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      id="Layer_1"
      data-name="Layer 1"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      viewBox="0 0 90 90"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <defs>
        <radialGradient
          id="radial-gradient"
          cx="47.65"
          cy="47.68"
          fx="47.65"
          fy="47.68"
          r="41.32"
          gradientUnits="userSpaceOnUse"
        >
          <stop offset="0" stopColor="#4386ff" />
          <stop offset="1" stopColor="#00549b" />
        </radialGradient>
      </defs>
      <g>
        <circle className="cls-1" cx="47.65" cy="47.68" r="41.32" />
        <path
          className="cls-4"
          d="M4.47,18.31L37.27,4.16c.24-.1.52-.02.67.2l17.74,25.22c.23.32.08.79-.29.91l-4.75,1.54c-.38.12-.52.61-.27.93l14.01,17.64c.27.34.1.84-.3.94l-6.07,1.49c-.41.1-.57.61-.31.94l20.62,26.13c.39.5-.16,1.2-.71.89l-46.41-26.79c-.42-.24-.38-.88.07-1.06l5.59-2.21c.42-.17.49-.76.12-1.03l-18.84-13.6c-.37-.26-.31-.84.1-1.02l4.3-1.89c.41-.18.47-.76.1-1.02L4.36,19.33c-.37-.26-.31-.85.1-1.03Z"
        />
        <path
          className="cls-2"
          d="M37.48,4.12c.18,0,.35.09.45.24l17.74,25.22c.23.32.08.79-.29.91l-4.75,1.54c-.38.12-.52.61-.27.93l14.01,17.64c.27.34.1.84-.3.94l-6.07,1.49c-.41.1-.57.61-.31.94l20.62,26.13c.33.41,0,.96-.43.96-.09,0-.18-.02-.28-.08l-46.41-26.79c-.42-.24-.38-.88.07-1.06l5.59-2.21c.42-.17.49-.76.12-1.03l-18.84-13.6c-.37-.26-.31-.84.1-1.02l4.3-1.89c.41-.18.47-.76.1-1.02L4.36,19.33c-.37-.26-.31-.85.1-1.03L37.27,4.16c.07-.03.14-.04.22-.04M37.48,1c-.5,0-.99.1-1.45.3L3.23,15.44c-1.22.53-2.07,1.68-2.21,3.01-.14,1.33.45,2.64,1.53,3.42l14.66,10.44-.22.1c-1.21.53-2.05,1.68-2.19,3-.14,1.32.44,2.63,1.52,3.41l15.1,10.9-1.3.51c-1.33.53-2.22,1.74-2.32,3.18-.11,1.44.6,2.77,1.84,3.49l46.41,26.79c.56.32,1.2.5,1.84.5,1.39,0,2.69-.82,3.31-2.09.63-1.29.46-2.79-.43-3.92l-18.19-23.06,2.25-.55c1.22-.3,2.2-1.2,2.61-2.4.41-1.21.19-2.52-.61-3.52l-11.75-14.79,1.27-.41c1.11-.36,1.99-1.24,2.36-2.35.37-1.12.19-2.36-.48-3.32L40.49,2.56c-.69-.98-1.81-1.56-3.01-1.56h0Z"
        />
      </g>
    </svg>
  );
};

const LookaLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      id="Layer_1"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 813.39 813.39"
      className={className}
    >
      <path
        fill="#5340ff"
        d="M319.36 148.98l221.39 128.86c35.78 20.82 57.81 59.08 57.87 100.47l.63 435.08 265.24-148.98V232.27c0-41.54-22.13-79.93-58.07-100.76L579.43 0 319.36 148.98z"
      />
      <path
        fill="#5340ff"
        d="M545.13 664.41l-221.4-128.86c-35.78-20.82-57.81-59.08-57.87-100.47L265.24 0 0 148.98v432.14c0 41.54 22.13 79.93 58.07 100.76L285.06 813.4l260.07-148.99zM2170.82 481.94c0 146.88-106.26 253.89-246.96"
      />
    </svg>
  );
};

const FastAPILogo = ({ className }: { className?: string }) => {
  return (
    <svg
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 154 154"
      className={className}
    >
      <circle cx="77" cy="77" fill="#05998b" r="77" />
      <path
        d="M81.375 18.667l-38.75 70H77.5l-3.875 46.666 38.75-70H77.5z"
        fill="#fff"
      />
    </svg>
  );
};

const frontendTechnologies = [
  {
    Icon: Icons.nextjs,
    name: "Next Js",
  },
  {
    Icon: ReactLogo,
    name: "React Js",
  },
  {
    Icon: VueLogo,
    name: "Vue Js",
  },
  {
    Icon: Icons.vite,
    name: "Vite & Vitest",
  },
  {
    Icon: AngularLogo,
    name: "Angular Js",
  },
  {
    Icon: TailwindCSSLogo,
    name: "Tailwind CSS",
  },

  {
    Icon: Icons.shadecn,
    name: "Shadecn UI",
  },

  {
    Icon: Icons.motion,
    name: "Framer Motion",
  },

  {
    Icon: Icons.gsap,
    name: "GSAP",
  },
  {
    Icon: Icons.webflow,
    name: "Webflow",
  },
  {
    Icon: Icons.jest,
    name: "Jest",
  },
  {
    Icon: Icons.playwright,
    name: "Playwright",
  },
];

const backendTechnologies = [
  {
    Icon: Icons.nodejs,
    name: "Node Js / Fastify / Express",
  },
  {
    Icon: FastAPILogo,
    name: "FastAPI",
  },
  {
    Icon: Icons.redis,
    name: "Redis",
  },
  {
    Icon: Icons.kafka,
    name: "Kafka",
  },
  {
    Icon: MySQLLogo,
    name: "MySQL DB",
  },
  {
    Icon: Icons.mongodb,
    name: "Mongo DB",
  },
  {
    Icon: Icons.firebase,
    name: "Firebase",
  },
];

const seoTechnologies = [
  {
    Icon: SEOIcons.googleAnalytics,
    name: "Google Analytics",
  },
  {
    Icon: SEOIcons.googlePageSpeed,
    name: "Google Page Speed",
  },
  {
    Icon: SEOIcons.semRush,
    name: "Semrush",
  },
  {
    Icon: Icons.openai,
    name: "ChatGPT",
  },
  {
    Icon: SEOIcons.chromeLightHouse,
    name: "Lighthouse",
  },
  {
    Icon: Icons.vercel,
    name: "Vercel Analytics & Speed Insights",
  }
];

const mobileTechnologies = [
  {
    Icon: FlutterLogo,
    name: "Flutter",
  },
  {
    Icon: LottieLogo,
    name: "Lottie Files",
  },
];

const designTechnologies = [
  {
    Icon: Icons.figma,
    name: "Figma",
  },
  {
    Icon: Icons.canva,
    name: "Canva",
  },
  {
    Icon: LookaLogo,
    name: "Looka",
  },
];

const toolsTechnologies = [
  {
    Icon: Icons.cursor,
    name: "Cursor AI Editor",
  },
  {
    Icon: Icons.vscode,
    name: "VS Code",
  },
  {
    Icon: Icons.git,
    name: "Git",
  },
  {
    Icon: Icons.postman,
    name: "Postman",
  },
];

const aiTechnologies = [
  {
    Icon: Icons.openai,
    name: "OpenAI API",
  },
  {
    Icon: Icons.tensorflow,
    name: "TensorFlow",
  },
  {
    Icon: Icons.langchain,
    name: "LangChain",
  },
  {
    Icon: Icons.huggingFace,
    name: "Hugging Face",
  },
  {
    Icon: Icons.autogen,
    name: "AutoGen",
  },
  {
    Icon: Icons.wb,
    name: "Weights & Biases",
  },
];

const securityTechnologies = [
  {
    Icon: Icons.synk,
    name: "Synk",
  },
  {
    Icon: OwaspZapLogo,
    name: "Owasp Zap",
  },
];

const devopsTechnologies = [
  {
    Icon: Icons.docker,
    name: "Docker",
  },
  {
    Icon: Icons.nginx,
    name: "Nginx",
  },
  {
    Icon: Icons.jenkins,
    name: "Jenkins",
  },
  {
    Icon: Icons.terraform,
    name: "Terraform",
  },
];

const programmingLanguages = [
  {
    Icon: Icons.typescript,
    name: "JavaScript / TypeScript",
  },
  {
    Icon: Icons.python,
    name: "Python",
  },
  {
    Icon: MySQLLogo,
    name: "SQL",
  },
  {
    Icon: Icons.dart,
    name: "Dart",
  },
];

const Technologies = () => {
  return (
    <motion.div className="section h-full gap-y-10 py-10 xl:py-12 2xl:py-16 relative z-[2000]">
      <motion.div className="flex flex-col items-center">
        <HeadingChip>Tools & Technologies</HeadingChip>
        <motion.p className="text-xl text-center text-zinc-50 font-poppins font-normal mt-4 xl:mt-6 md:max-w-[80%]">
          I leverage a powerful tech stack to build AI-driven, scalable, and high-performance solutions. From frontend to backend, I integrate AI seamlessly to enhance automation, intelligence, and user experience.
        </motion.p>
      </motion.div>

      <motion.div className="grid grid-cols-1 lg:grid-cols-2 gap-6 xl:gap-8 2xl:gap-12 items-start mt-6 xl:mt-10 2xl:mt-12">
        <motion.div className="w-full h-auto relative flex flex-row flex-wrap gap-2 md:gap-4 items-start p-4 xl:p-6 rounded-2xl bg-gradient-to-b from-zinc-900/50 via-zinc-800/50 to-zinc-900/50 shadow-sm shadow-zinc-900/90 overflow-hidden">
          <Grid size={60} />

          <h4 className="block w-full font-bricolage font-bold text-xl md:text-2xl xl:text-3xl text-transparent bg-gradient-to-b bg-clip-text from-zinc-200 to-zinc-600">
            Programming Languages
          </h4>

          {programmingLanguages.map(({ Icon, name }) => (
            <motion.div
              transition={{
                type: "tween",
                ease: "easeInOut",
                duration: 0.3,
              }}
              whileHover={{
                scale: 1.1,
              }}
              key={nanoid()}
              className="relative inline-flex flex-row items-center space-x-1 md:space-x-2 rounded-full font-poppins font-light tracking-wide capitalize text-sm md:text-base py-1 px-2 md:px-4 bg-zinc-700/90 cursor-default"
            >
              <div className="size-5 md:size-6 relative overflow-hidden grid place-items-center p-px">
                <Icon />
              </div>

              <span>{name}</span>
            </motion.div>
          ))}
        </motion.div>

        <motion.div className="w-full h-auto relative flex flex-row flex-wrap gap-2 md:gap-4 items-start p-4 xl:p-6 rounded-2xl bg-gradient-to-b from-zinc-900/50 via-zinc-800/50 to-zinc-900/50 shadow-sm shadow-zinc-900/90 overflow-hidden">
          <Grid size={60} />

          <h4 className="block w-full font-bricolage font-bold text-xl md:text-2xl xl:text-3xl text-transparent bg-gradient-to-b bg-clip-text from-zinc-200 to-zinc-600">
            AI & Machine Learning
          </h4>

          {aiTechnologies.map(({ Icon, name }) => (
            <motion.div
              transition={{
                type: "tween",
                ease: "easeInOut",
                duration: 0.3,
              }}
              whileHover={{
                scale: 1.1,
              }}
              key={nanoid()}
              className="relative inline-flex flex-row items-center space-x-1 md:space-x-2 rounded-full font-poppins font-light tracking-wide capitalize text-sm md:text-base py-1 px-2 md:px-4 bg-zinc-700/90 cursor-default"
            >
              <div className="size-5 md:size-6 relative overflow-hidden grid place-items-center p-px">
                <Icon />
              </div>

              <span>{name}</span>
            </motion.div>
          ))}
        </motion.div>

        <motion.div className="w-full h-auto relative flex flex-row flex-wrap gap-2 md:gap-4 items-start p-4 xl:p-6 rounded-2xl bg-gradient-to-b from-zinc-900/50 via-zinc-800/50 to-zinc-900/50 shadow-sm shadow-zinc-900/90 overflow-hidden">
          <Grid size={60} />

          <h4 className="block w-full font-bricolage font-bold text-xl md:text-2xl xl:text-3xl text-transparent bg-gradient-to-b bg-clip-text from-zinc-200 to-zinc-600">
            Frontend Development
          </h4>

          {frontendTechnologies.map(({ Icon, name }) => (
            <motion.div
              transition={{
                type: "tween",
                ease: "easeInOut",
                duration: 0.3,
              }}
              whileHover={{
                scale: 1.1,
              }}
              key={nanoid()}
              className="relative inline-flex flex-row items-center space-x-1 md:space-x-2 rounded-full font-poppins font-light tracking-wide capitalize text-sm md:text-base py-1 px-2 md:px-4 bg-zinc-700/90 cursor-default"
            >
              <div className="size-5 md:size-6 relative overflow-hidden grid place-items-center p-px">
                <Icon />
              </div>

              <span>{name}</span>
            </motion.div>
          ))}
        </motion.div>

        <motion.div className="w-full h-auto relative flex flex-row flex-wrap gap-2 md:gap-4 items-start p-4 xl:p-6 rounded-2xl bg-gradient-to-b from-zinc-900/50 via-zinc-800/50 to-zinc-900/50 shadow-sm shadow-zinc-900/90 overflow-hidden">
          <Grid size={60} />

          <h4 className="block w-full font-bricolage font-bold text-xl md:text-2xl xl:text-3xl text-transparent bg-gradient-to-b bg-clip-text from-zinc-200 to-zinc-600">
            Backend & APIs
          </h4>

          {backendTechnologies.map(({ Icon, name }) => (
            <motion.div
              transition={{
                type: "tween",
                ease: "easeInOut",
                duration: 0.3,
              }}
              whileHover={{
                scale: 1.1,
              }}
              key={nanoid()}
              className="relative inline-flex flex-row items-center space-x-1 md:space-x-2 rounded-full font-poppins font-light tracking-wide capitalize text-sm md:text-base py-1 px-2 md:px-4 bg-zinc-700/90 cursor-default"
            >
              <div className="size-5 md:size-6 relative overflow-hidden grid place-items-center p-px">
                <Icon />
              </div>

              <span>{name}</span>
            </motion.div>
          ))}
        </motion.div>

        <motion.div className="w-full h-auto relative flex flex-row flex-wrap gap-2 md:gap-4 items-start p-4 xl:p-6 rounded-2xl bg-gradient-to-b from-zinc-900/50 via-zinc-800/50 to-zinc-900/50 shadow-sm shadow-zinc-900/90 overflow-hidden">
          <Grid size={60} />

          <h4 className="block w-full font-bricolage font-bold text-xl md:text-2xl xl:text-3xl text-transparent bg-gradient-to-b bg-clip-text from-zinc-200 to-zinc-600">
            Mobile Development
          </h4>

          {mobileTechnologies.map(({ Icon, name }) => (
            <motion.div
              transition={{
                type: "tween",
                ease: "easeInOut",
                duration: 0.3,
              }}
              whileHover={{
                scale: 1.1,
              }}
              key={nanoid()}
              className="relative inline-flex flex-row items-center space-x-1 md:space-x-2 rounded-full font-poppins font-light tracking-wide capitalize text-sm md:text-base py-1 px-2 md:px-4 bg-zinc-700/90 cursor-default"
            >
              <div className="size-5 md:size-6 relative overflow-hidden grid place-items-center p-px">
                <Icon />
              </div>

              <span>{name}</span>
            </motion.div>
          ))}
        </motion.div>

        <motion.div className="w-full h-auto relative flex flex-row flex-wrap gap-2 md:gap-4 items-start p-4 xl:p-6 rounded-2xl bg-gradient-to-b from-zinc-900/50 via-zinc-800/50 to-zinc-900/50 shadow-sm shadow-zinc-900/90 overflow-hidden">
          <Grid size={60} />

          <h4 className="block w-full font-bricolage font-bold text-xl md:text-2xl xl:text-3xl text-transparent bg-gradient-to-b bg-clip-text from-zinc-100/90 to-zinc-600">
            UI/UX Design & Audit
          </h4>

          {designTechnologies.map(({ Icon, name }) => (
            <motion.div
              transition={{
                type: "tween",
                ease: "easeInOut",
                duration: 0.3,
              }}
              whileHover={{
                scale: 1.1,
              }}
              key={nanoid()}
              className="relative inline-flex flex-row items-center space-x-1 md:space-x-2 rounded-full font-poppins font-light tracking-wide capitalize text-base py-1 px-2 md:px-4 bg-zinc-700/90 cursor-default"
            >
              <div className="size-5 md:size-6 relative overflow-hidden grid place-items-center p-px">
                <Icon />
              </div>

              <span>{name}</span>
            </motion.div>
          ))}
        </motion.div>

        <motion.div className="w-full h-auto relative flex flex-row flex-wrap gap-2 md:gap-4 items-start p-4 xl:p-6 rounded-2xl bg-gradient-to-b from-zinc-900/50 via-zinc-800/50 to-zinc-900/50 shadow-sm shadow-zinc-900/90 overflow-hidden">
          <Grid size={60} />

          <h4 className="block w-full font-bricolage font-bold text-xl md:text-2xl xl:text-3xl text-transparent bg-gradient-to-b bg-clip-text from-zinc-100/90 to-zinc-600">
            Tools
          </h4>

          {toolsTechnologies.map(({ Icon, name }) => (
            <motion.div
              transition={{
                type: "tween",
                ease: "easeInOut",
                duration: 0.3,
              }}
              whileHover={{
                scale: 1.1,
              }}
              key={nanoid()}
              className="relative inline-flex flex-row items-center space-x-1 md:space-x-2 rounded-full font-poppins font-light tracking-wide capitalize text-base py-1 px-2 md:px-4 bg-zinc-700/90 cursor-default"
            >
              <div className="size-5 md:size-6 relative overflow-hidden grid place-items-center p-px">
                <Icon />
              </div>

              <span>{name}</span>
            </motion.div>
          ))}
        </motion.div>

        <motion.div className="w-full h-auto relative flex flex-row flex-wrap gap-2 md:gap-4 items-start p-4 xl:p-6 rounded-2xl bg-gradient-to-b from-zinc-900/50 via-zinc-800/50 to-zinc-900/50 shadow-sm shadow-zinc-900/90 overflow-hidden">
          <Grid size={60} />

          <h4 className="block w-full font-bricolage font-bold text-xl md:text-2xl xl:text-3xl text-transparent bg-gradient-to-b bg-clip-text from-zinc-100/90 to-zinc-600">
            Code Security & Audit
          </h4>

          {securityTechnologies.map(({ Icon, name }) => (
            <motion.div
              transition={{
                type: "tween",
                ease: "easeInOut",
                duration: 0.3,
              }}
              whileHover={{
                scale: 1.1,
              }}
              key={nanoid()}
              className="relative inline-flex flex-row items-center space-x-1 md:space-x-2 rounded-full font-poppins font-light tracking-wide capitalize text-sm md:text-base py-1 px-2 md:px-4 bg-zinc-700/90 cursor-default"
            >
              <div className="size-5 md:size-6 relative overflow-hidden grid place-items-center p-px">
                <Icon />
              </div>

              <span>{name}</span>
            </motion.div>
          ))}
        </motion.div>

        <motion.div className="w-full h-auto relative flex flex-row flex-wrap gap-2 md:gap-4 items-start p-4 xl:p-6 rounded-2xl bg-gradient-to-b from-zinc-900/50 via-zinc-800/50 to-zinc-900/50 shadow-sm shadow-zinc-900/90 overflow-hidden">
          <Grid size={60} />

          <h4 className="block w-full font-bricolage font-bold text-xl md:text-2xl xl:text-3xl text-transparent bg-gradient-to-b bg-clip-text from-zinc-100/90 to-zinc-600">
            DevOps
          </h4>

          {devopsTechnologies.map(({ Icon, name }) => (
            <motion.div
              transition={{
                type: "tween",
                ease: "easeInOut",
                duration: 0.3,
              }}
              whileHover={{
                scale: 1.1,
              }}
              key={nanoid()}
              className="relative inline-flex flex-row items-center space-x-1 md:space-x-2 rounded-full font-poppins font-light tracking-wide capitalize text-base py-1 px-2 md:px-4 bg-zinc-700/90 cursor-default"
            >
              <div className="size-5 md:size-6 relative overflow-hidden grid place-items-center p-px">
                <Icon />
              </div>

              <span>{name}</span>
            </motion.div>
          ))}
        </motion.div>

        <motion.div className="w-full h-auto relative flex flex-row flex-wrap gap-2 md:gap-4 items-start p-4 xl:p-6 rounded-2xl bg-gradient-to-b from-zinc-900/50 via-zinc-800/50 to-zinc-900/50 shadow-sm shadow-zinc-900/90 overflow-hidden">
          <Grid size={60} />

          <h4 className="block w-full font-bricolage font-bold text-xl md:text-2xl xl:text-3xl text-transparent bg-gradient-to-b bg-clip-text from-zinc-100/90 to-zinc-600">
            Web & SEO Optimization
          </h4>

          {seoTechnologies.map(({ Icon, name }) => (
            <motion.div
              transition={{
                type: "tween",
                ease: "easeInOut",
                duration: 0.3,
              }}
              whileHover={{
                scale: 1.1,
              }}
              key={nanoid()}
              className="relative inline-flex flex-row items-center space-x-1 md:space-x-2 rounded-full font-poppins font-light tracking-wide capitalize text-base py-1 px-2 md:px-4 bg-zinc-700/90 cursor-default"
            >
              <div className="size-5 md:size-6 relative overflow-hidden grid place-items-center p-px">
                <Icon />
              </div>

              <span>{name}</span>
            </motion.div>
          ))}
        </motion.div>
      </motion.div>
    </motion.div>
  );
};

export const Grid = ({
  pattern,
  size,
}: {
  pattern?: number[][];
  size?: number;
}) => {
  const stablePattern = useMemo(
    () =>
      pattern ??
      Array.from({ length: 5 }, () => [
        Math.floor(Math.random() * 4) + 7,
        Math.floor(Math.random() * 6) + 1,
      ]),
    [pattern]
  );

  return (
    <div className="pointer-events-none absolute left-1/2 -translate-x-1/2 top-0 -mt-2 h-full w-full [mask-image:linear-gradient(#f4f4f5,transparent)]">
      <GridPattern
        width={size ?? 20}
        height={size ?? 20}
        x="-12"
        y="4"
        squares={stablePattern}
        className="absolute inset-0 h-full w-full mix-blend-overlay fill-white/10 stroke-white/10"
      />
      <Noise />
    </div>
  );
};

const TechnologiesArtifactTopLeft = () => {
  return (
    <motion.div className="absolute -top-1 -left-1 h-[60%] w-[50%] grid grid-cols-1 overflow-hidden z-[500] opacity-35">
      <div className="w-full h-full relative">
        <Image
          src={ImagePath.WAVY_LINES}
          alt={""}
          fill
          loading={"lazy"}
          draggable={false}
          className="relative"
        />
        <div className="absolute h-[70%] w-20 bottom-0 -right-1 z-[600] bg-zinc-950" />
      </div>
    </motion.div>
  );
};

const TechnologiesArtifactTopRight = () => {
  return (
    <motion.div className="absolute -top-1 -right-1 h-[33.3%] w-[20%] overflow-hidden z-[500] opacity-35">
      <Image
        src={ImagePath.ILLUS_LINES_TOP}
        alt={""}
        fill
        loading={"lazy"}
        draggable={false}
      />
    </motion.div>
  );
};

const TechnologiesArtifactBottomRight = () => {
  return (
    <motion.div className="absolute -bottom-1 -right-1 h-[33.3%] w-[33.3%] overflow-hidden z-[500] opacity-35">
      <Image
        src={ImagePath.ILLUS_LINES_DOWN}
        alt={""}
        fill
        loading={"lazy"}
        draggable={false}
      />
    </motion.div>
  );
};

TechnologiesArtifactTopLeft.displayName = "TechnologiesArtifactTopLeft";
TechnologiesArtifactTopRight.displayName = "TechnologiesArtifactTopRight";
TechnologiesArtifactBottomRight.displayName = "TechnologiesArtifactBottomRight";

export {
  Technologies,
  TechnologiesArtifactTopLeft,
  TechnologiesArtifactTopRight,
  TechnologiesArtifactBottomRight,
  Icons as TechIcons,
};
