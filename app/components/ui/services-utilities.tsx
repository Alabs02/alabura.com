"use client";

import { cn } from "@/lib/utils";
import { animate } from "framer-motion";
import { useEffect } from "react";
import { FeatureContainer, Sparkles } from "./feature-card";
import { ImagePath } from "@/constants";
import Image from "next/image";

export const ReactLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox="0 -14 256 256"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <g>
        <path
          d="M210.483381,73.8236374 C207.827698,72.9095503 205.075867,72.0446761 202.24247,71.2267368 C202.708172,69.3261098 203.135596,67.4500894 203.515631,65.6059664 C209.753843,35.3248922 205.675082,10.9302478 191.747328,2.89849283 C178.392359,-4.80289661 156.551327,3.22703567 134.492936,22.4237776 C132.371761,24.2697233 130.244662,26.2241201 128.118477,28.2723861 C126.701777,26.917204 125.287358,25.6075897 123.876584,24.3549348 C100.758745,3.82852863 77.5866802,-4.82157937 63.6725966,3.23341515 C50.3303869,10.9571328 46.3792156,33.8904224 51.9945178,62.5880206 C52.5367729,65.3599011 53.1706189,68.1905639 53.8873982,71.068617 C50.6078941,71.9995641 47.4418534,72.9920277 44.4125156,74.0478303 C17.3093297,83.497195 0,98.3066828 0,113.667995 C0,129.533287 18.5815786,145.446423 46.8116526,155.095373 C49.0394553,155.856809 51.3511025,156.576778 53.7333796,157.260293 C52.9600965,160.37302 52.2875179,163.423318 51.7229345,166.398431 C46.3687351,194.597975 50.5500231,216.989464 63.8566899,224.664425 C77.6012619,232.590464 100.66852,224.443422 123.130185,204.809231 C124.905501,203.257196 126.687196,201.611293 128.472081,199.886102 C130.785552,202.113904 133.095375,204.222319 135.392897,206.199955 C157.14963,224.922338 178.637969,232.482469 191.932332,224.786092 C205.663234,216.837268 210.125675,192.78347 204.332202,163.5181 C203.88974,161.283006 203.374826,158.99961 202.796573,156.675661 C204.416503,156.196743 206.006814,155.702335 207.557482,155.188332 C236.905331,145.46465 256,129.745175 256,113.667995 C256,98.2510906 238.132466,83.3418093 210.483381,73.8236374 L210.483381,73.8236374 Z M204.118035,144.807565 C202.718197,145.270987 201.281904,145.718918 199.818271,146.153177 C196.578411,135.896354 192.205739,124.989735 186.854729,113.72131 C191.961041,102.721277 196.164656,91.9540963 199.313837,81.7638014 C201.93261,82.5215915 204.474374,83.3208483 206.923636,84.1643056 C230.613348,92.3195488 245.063763,104.377206 245.063763,113.667995 C245.063763,123.564379 229.457753,136.411268 204.118035,144.807565 L204.118035,144.807565 Z M193.603754,165.642007 C196.165567,178.582766 196.531475,190.282717 194.834536,199.429057 C193.309843,207.64764 190.243595,213.12715 186.452366,215.321689 C178.384612,219.991462 161.131788,213.921395 142.525146,197.909832 C140.392124,196.074366 138.243609,194.114502 136.088259,192.040261 C143.301619,184.151133 150.510878,174.979732 157.54698,164.793993 C169.922699,163.695814 181.614905,161.900447 192.218042,159.449363 C192.740247,161.555956 193.204126,163.621993 193.603754,165.642007 L193.603754,165.642007 Z M87.2761866,214.514686 C79.3938934,217.298414 73.1160375,217.378157 69.3211631,215.189998 C61.2461189,210.532528 57.8891498,192.554265 62.4682434,168.438039 C62.9927272,165.676183 63.6170041,162.839142 64.3365173,159.939216 C74.8234575,162.258154 86.4299951,163.926841 98.8353334,164.932519 C105.918826,174.899534 113.336329,184.06091 120.811247,192.08264 C119.178102,193.65928 117.551336,195.16028 115.933685,196.574699 C106.001303,205.256705 96.0479605,211.41654 87.2761866,214.514686 L87.2761866,214.514686 Z M50.3486141,144.746959 C37.8658105,140.48046 27.5570398,134.935332 20.4908634,128.884403 C14.1414664,123.446815 10.9357817,118.048415 10.9357817,113.667995 C10.9357817,104.34622 24.8334611,92.4562517 48.0123604,84.3748281 C50.8247961,83.3942121 53.7689223,82.4701001 56.8242337,81.6020363 C60.0276398,92.0224477 64.229889,102.917218 69.3011135,113.93411 C64.1642716,125.11459 59.9023288,136.182975 56.6674809,146.725506 C54.489347,146.099407 52.3791089,145.440499 50.3486141,144.746959 L50.3486141,144.746959 Z M62.7270678,60.4878073 C57.9160346,35.9004118 61.1112387,17.3525532 69.1516515,12.6982729 C77.7160924,7.74005624 96.6544653,14.8094222 116.614922,32.5329619 C117.890816,33.6657739 119.171723,34.8514442 120.456275,36.0781256 C113.018267,44.0647686 105.66866,53.1573386 98.6480514,63.0655695 C86.6081646,64.1815215 75.0831931,65.9741531 64.4868907,68.3746571 C63.8206914,65.6948233 63.2305903,63.0619242 62.7270678,60.4878073 L62.7270678,60.4878073 Z M173.153901,87.7550367 C170.620796,83.3796304 168.020249,79.1076627 165.369124,74.9523483 C173.537126,75.9849113 181.362914,77.3555864 188.712066,79.0329319 C186.505679,86.1041206 183.755673,93.4974728 180.518546,101.076741 C178.196419,96.6680702 175.740322,92.2229454 173.153901,87.7550367 L173.153901,87.7550367 Z M128.122121,43.8938899 C133.166461,49.3588189 138.218091,55.4603279 143.186789,62.0803968 C138.179814,61.8439007 133.110868,61.720868 128.000001,61.720868 C122.937434,61.720868 117.905854,61.8411667 112.929865,62.0735617 C117.903575,55.515009 122.99895,49.4217021 128.122121,43.8938899 L128.122121,43.8938899 Z M82.8018984,87.830679 C80.2715265,92.2183886 77.8609975,96.6393627 75.5753239,101.068539 C72.3906004,93.5156998 69.6661103,86.0886276 67.440586,78.9171899 C74.7446255,77.2826781 82.5335049,75.9461789 90.6495601,74.9332099 C87.9610684,79.1268011 85.3391054,83.4302106 82.8018984,87.8297677 L82.8018984,87.830679 L82.8018984,87.830679 Z M90.8833221,153.182899 C82.4979621,152.247395 74.5919739,150.979704 67.289757,149.390303 C69.5508242,142.09082 72.3354636,134.505173 75.5876271,126.789657 C77.8792246,131.215644 80.2993228,135.638441 82.8451877,140.03572 L82.8456433,140.03572 C85.4388987,144.515476 88.1255676,148.90364 90.8833221,153.182899 L90.8833221,153.182899 Z M128.424691,184.213105 C123.24137,178.620587 118.071264,172.434323 113.021912,165.780078 C117.923624,165.972373 122.921029,166.0708 128.000001,166.0708 C133.217953,166.0708 138.376211,165.953235 143.45336,165.727219 C138.468257,172.501308 133.434855,178.697141 128.424691,184.213105 L128.424691,184.213105 Z M180.622896,126.396409 C184.044571,134.195313 186.929004,141.741317 189.219234,148.9164 C181.796719,150.609693 173.782736,151.973534 165.339049,152.986959 C167.996555,148.775595 170.619884,144.430263 173.197646,139.960532 C175.805484,135.438399 178.28163,130.90943 180.622896,126.396409 L180.622896,126.396409 Z M163.724586,134.496971 C159.722835,141.435557 155.614455,148.059271 151.443648,154.311611 C143.847063,154.854776 135.998946,155.134562 128.000001,155.134562 C120.033408,155.134562 112.284171,154.887129 104.822013,154.402745 C100.48306,148.068386 96.285368,141.425078 92.3091341,134.556664 L92.3100455,134.556664 C88.3442923,127.706935 84.6943232,120.799333 81.3870228,113.930466 C84.6934118,107.045648 88.3338117,100.130301 92.276781,93.292874 L92.2758697,93.294241 C96.2293193,86.4385872 100.390102,79.8276317 104.688954,73.5329157 C112.302398,72.9573964 120.109505,72.6571055 127.999545,72.6571055 L128.000001,72.6571055 C135.925583,72.6571055 143.742714,72.9596746 151.353879,73.5402067 C155.587114,79.7888993 159.719645,86.3784378 163.688588,93.2350031 C167.702644,100.168578 171.389978,107.037901 174.724618,113.77508 C171.400003,120.627999 167.720871,127.566587 163.724586,134.496971 L163.724586,134.496971 Z M186.284677,12.3729198 C194.857321,17.3165548 198.191049,37.2542268 192.804953,63.3986692 C192.461372,65.0669011 192.074504,66.7661189 191.654369,68.4881206 C181.03346,66.0374921 169.500286,64.2138746 157.425315,63.0810626 C150.391035,53.0639249 143.101577,43.9572289 135.784778,36.073113 C137.751934,34.1806885 139.716356,32.3762092 141.672575,30.673346 C160.572216,14.2257007 178.236518,7.73185406 186.284677,12.3729198 L186.284677,12.3729198 Z M128.000001,90.8080696 C140.624975,90.8080696 150.859926,101.042565 150.859926,113.667995 C150.859926,126.292969 140.624975,136.527922 128.000001,136.527922 C115.375026,136.527922 105.140075,126.292969 105.140075,113.667995 C105.140075,101.042565 115.375026,90.8080696 128.000001,90.8080696 L128.000001,90.8080696 Z"
          fill="#00D8FF"
        ></path>
      </g>
    </svg>
  );
};

export const VueLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox="0 -17.5 256 256"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <g>
        <path
          d="M204.8,0 L256,0 L128,220.8 L0,0 L50.56,0 L97.92,0 L128,51.2 L157.44,0 L204.8,0 Z"
          fill="#41B883"
        ></path>
        <path
          d="M0,0 L128,220.8 L256,0 L204.8,0 L128,132.48 L50.56,0 L0,0 Z"
          fill="#41B883"
        ></path>
        <path
          d="M50.56,0 L128,133.12 L204.8,0 L157.44,0 L128,51.2 L97.92,0 L50.56,0 Z"
          fill="#35495E"
        ></path>
      </g>
    </svg>
  );
};

export const AngularLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 223 236"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <g clipPath="url(#a)">
        <path
          _ngcontent-ng-c249881476=""
          fill="url(#b)"
          d="m222.077 39.192-8.019 125.923L137.387 0l84.69 39.192Zm-53.105 162.825-57.933 33.056-57.934-33.056 11.783-28.556h92.301l11.783 28.556ZM111.039 62.675l30.357 73.803H80.681l30.358-73.803ZM7.937 165.115 0 39.192 84.69 0 7.937 165.115Z"
        ></path>
        <path
          _ngcontent-ng-c249881476=""
          fill="url(#c)"
          d="m222.077 39.192-8.019 125.923L137.387 0l84.69 39.192Zm-53.105 162.825-57.933 33.056-57.934-33.056 11.783-28.556h92.301l11.783 28.556ZM111.039 62.675l30.357 73.803H80.681l30.358-73.803ZM7.937 165.115 0 39.192 84.69 0 7.937 165.115Z"
        ></path>
      </g>
      <defs _ngcontent-ng-c249881476="">
        <linearGradient
          _ngcontent-ng-c249881476=""
          id="b"
          x1="49.009"
          x2="225.829"
          y1="213.75"
          y2="129.722"
          gradientUnits="userSpaceOnUse"
        >
          <stop _ngcontent-ng-c249881476="" stopColor="#E40035"></stop>
          <stop
            _ngcontent-ng-c249881476=""
            offset=".24"
            stopColor="#F60A48"
          ></stop>
          <stop
            _ngcontent-ng-c249881476=""
            offset=".352"
            stopColor="#F20755"
          ></stop>
          <stop
            _ngcontent-ng-c249881476=""
            offset=".494"
            stopColor="#DC087D"
          ></stop>
          <stop
            _ngcontent-ng-c249881476=""
            offset=".745"
            stopColor="#9717E7"
          ></stop>
          <stop
            _ngcontent-ng-c249881476=""
            offset="1"
            stopColor="#6C00F5"
          ></stop>
        </linearGradient>
        <linearGradient
          _ngcontent-ng-c249881476=""
          id="c"
          x1="41.025"
          x2="156.741"
          y1="28.344"
          y2="160.344"
          gradientUnits="userSpaceOnUse"
        >
          <stop _ngcontent-ng-c249881476="" stopColor="#FF31D9"></stop>
          <stop
            _ngcontent-ng-c249881476=""
            offset="1"
            stopColor="#FF5BE1"
            stopOpacity="0"
          ></stop>
        </linearGradient>
        <clipPath _ngcontent-ng-c249881476="" id="a">
          <path
            _ngcontent-ng-c249881476=""
            fill="#fff"
            d="M0 0h223v236H0z"
          ></path>
        </clipPath>
      </defs>
    </svg>
  );
};

export const JQueryLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox="0 0 32 32"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <circle cx="16" cy="16" r="14" fill="#0769AD" />
      <path
        d="M22.6573 13.4211C23.9143 13.4211 25.0652 13.0019 25.955 12.3066C25.0312 13.5238 23.5007 14.3196 21.7689 14.3196C18.9477 14.3196 16.6607 12.2077 16.6607 9.60256C16.6607 8.1581 17.3638 6.86527 18.4712 6C17.8901 6.76568 17.5491 7.6981 17.5491 8.70407C17.5491 11.3092 19.8361 13.4211 22.6573 13.4211Z"
        fill="#78CFF5"
      />
      <path
        d="M25.9064 16.6586C24.5512 17.7216 22.7968 18.3628 20.8805 18.3628C16.5874 18.3628 13.1071 15.1447 13.1071 11.1749C13.1071 9.63522 13.6307 8.20859 14.5221 7.03894C12.8413 8.35742 11.7745 10.3248 11.7745 12.5226C11.7745 16.4924 15.2548 19.7106 19.5479 19.7106C22.176 19.7106 24.4994 18.5047 25.9064 16.6586Z"
        fill="#78CFF5"
      />
      <path
        d="M26 20.7701C24.0689 22.6129 21.3937 23.7538 18.4375 23.7538C12.5497 23.7538 7.77678 19.2283 7.77678 13.6458C7.77678 11.8768 8.25603 10.214 9.09813 8.76767C7.18322 10.595 6 13.1125 6 15.892C6 21.4745 10.7729 26 16.6607 26C20.6827 26 24.1846 23.8881 26 20.7701Z"
        fill="#78CFF5"
      />
    </svg>
  );
};

export const TailwindCSSLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox="0 -51 256 256"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <defs>
        <linearGradient
          x1="-2.77777778%"
          y1="32%"
          x2="100%"
          y2="67.5555556%"
          id="linearGradient-1"
        >
          <stop stopColor="#2298BD" offset="0%"></stop>
          <stop stopColor="#0ED7B5" offset="100%"></stop>
        </linearGradient>
      </defs>
      <g>
        <path
          d="M128,-1.0658141e-14 C93.8666667,-1.0658141e-14 72.5333333,17.0666667 64,51.2 C76.8,34.1333333 91.7333333,27.7333333 108.8,32 C118.537481,34.4343704 125.497363,41.4985481 133.201067,49.3184 C145.750756,62.0567704 160.275437,76.8 192,76.8 C226.133333,76.8 247.466667,59.7333333 256,25.6 C243.2,42.6666667 228.266667,49.0666667 211.2,44.8 C201.462519,42.3656296 194.502637,35.3014519 186.798933,27.4816 C174.249244,14.7432296 159.724563,-1.0658141e-14 128,-1.0658141e-14 Z M64,76.8 C29.8666667,76.8 8.53333333,93.8666667 0,128 C12.8,110.933333 27.7333333,104.533333 44.8,108.8 C54.5374815,111.23437 61.497363,118.298548 69.2010667,126.1184 C81.7507556,138.85677 96.275437,153.6 128,153.6 C162.133333,153.6 183.466667,136.533333 192,102.4 C179.2,119.466667 164.266667,125.866667 147.2,121.6 C137.462519,119.16563 130.502637,112.101452 122.798933,104.2816 C110.249244,91.5432296 95.724563,76.8 64,76.8 Z"
          fill="url(#linearGradient-1)"
        ></path>
      </g>
    </svg>
  );
};

export const LottieLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox="0 0 64 64"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      preserveAspectRatio="xMidYMid"
      className={cn(
        "c-PJLV c-PJLV-fYGgTQ-size-lg c-PJLV-ijIslH-css",
        className
      )}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M16.1947 0H47.8053C56.7493 0 63.9999 7.25065 63.9999 16.1947V47.8053C63.9999 56.7493 56.7493 64 47.8053 64H16.1947C7.2506 64 0 56.7493 0 47.8053V16.1947C0 7.25065 7.2506 0 16.1947 0ZM30.2792 28.4924C33.5603 22.1766 37.6337 14.3356 48.6489 14.3356C49.0645 14.3352 49.4761 14.4167 49.8601 14.5756C50.2441 14.7344 50.593 14.9674 50.8869 15.2613C51.1807 15.5552 51.4138 15.9041 51.5726 16.2881C51.7314 16.6721 51.813 17.0837 51.8125 17.4993C51.813 17.9149 51.7314 18.3264 51.5726 18.7105C51.4138 19.0945 51.1807 19.4434 50.8869 19.7373C50.593 20.0311 50.2441 20.2642 49.8601 20.423C49.4761 20.5818 49.0645 20.6634 48.6489 20.6629C41.9582 20.6629 39.3623 24.7351 35.8839 31.4388L33.7392 35.4786L33.7304 35.4955C30.4514 41.8134 26.3766 49.6647 15.3543 49.6647C14.5152 49.6647 13.7105 49.3314 13.1172 48.7381C12.5239 48.1448 12.1906 47.3401 12.1906 46.501C12.1906 45.662 12.5239 44.8573 13.1172 44.264C13.7105 43.6707 14.5152 43.3374 15.3543 43.3374C22.045 43.3374 24.6408 39.2652 28.1224 32.5615L30.264 28.5218L30.2792 28.4924Z"
        className="c-PJLV c-PJLV-gDQMhN-appearance-default"
      ></path>
    </svg>
  );
};

export const FlutterLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox="-30.5 0 317 317"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <defs>
        <linearGradient
          x1="3.9517088%"
          y1="26.9930287%"
          x2="75.8970734%"
          y2="52.9192657%"
          id="linearGradient-1"
        >
          <stop stopColor="#000000" offset="0%"></stop>
          <stop stopColor="#000000" stopOpacity="0" offset="100%"></stop>
        </linearGradient>
      </defs>
      <g>
        <polygon
          fill="#47C5FB"
          points="157.665785 0.000549356223 0.000549356223 157.665785 48.8009614 206.466197 255.267708 0.000549356223"
        ></polygon>
        <polygon
          fill="#47C5FB"
          points="156.567183 145.396793 72.1487107 229.815265 121.132608 279.530905 169.842925 230.820587 255.267818 145.396793"
        ></polygon>
        <polygon
          fill="#00569E"
          points="121.133047 279.531124 158.214592 316.61267 255.267159 316.61267 169.842266 230.820807"
        ></polygon>
        <polygon
          fill="#00B5F8"
          points="71.5995742 230.364072 120.401085 181.562561 169.842046 230.821136 121.132827 279.531454"
        ></polygon>
        <polygon
          fillOpacity="0.8"
          fill="url(#linearGradient-1)"
          points="121.132827 279.531454 161.692896 266.072227 165.721875 234.941308"
        ></polygon>
      </g>
    </svg>
  );
};

export const ReduxLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox="0 0 32 32"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <path
        d="M21.7868 21.556C22.8939 21.4433 23.7338 20.505 23.6956 19.3789C23.6575 18.253 22.703 17.3522 21.5577 17.3522H21.4814C20.2978 17.3897 19.3817 18.3656 19.4199 19.5291C19.4581 20.0921 19.6871 20.58 20.0307 20.9178C18.7327 23.4326 16.7475 25.2717 13.7698 26.8106C11.7464 27.8615 9.6468 28.2369 7.54715 27.9742C5.82918 27.749 4.49301 26.9984 3.65301 25.7596C2.43144 23.9205 2.31695 21.9312 3.34773 19.942C4.07312 18.5157 5.21828 17.4647 5.94367 16.9392C5.79098 16.4513 5.56187 15.6256 5.44738 15.0251C-0.0882044 18.9661 0.484491 24.2959 2.16426 26.8106C3.42402 28.6873 5.98187 29.8509 8.80691 29.8509C9.57039 29.8509 10.3339 29.7757 11.0975 29.5882C15.9841 28.6498 19.6872 25.7972 21.7868 21.556ZM28.5059 16.9018C25.6045 13.5613 21.3287 11.7222 16.4421 11.7222H15.8314C15.4878 11.0466 14.7624 10.5961 13.9607 10.5961H13.8843C12.7009 10.6337 11.7848 11.6095 11.8229 12.7731C11.8611 13.8991 12.8154 14.7999 13.9607 14.7999H14.037C14.8769 14.7624 15.6023 14.2369 15.9077 13.5237H16.5948C19.4963 13.5237 22.2449 14.3494 24.7265 15.9634C26.6352 17.202 28.0096 18.816 28.7731 20.7677C29.4221 22.3441 29.3839 23.883 28.6967 25.1967C27.6278 27.1859 25.8336 28.2744 23.4666 28.2744C21.9395 28.2744 20.4889 27.824 19.7253 27.4862C19.3054 27.8615 18.5418 28.462 18.0073 28.8375C19.649 29.5881 21.3287 30.001 22.9321 30.001C26.597 30.001 29.3076 28.0116 30.3384 26.0224C31.4454 23.8454 31.369 20.0921 28.5059 16.9018ZM9.1123 22.1939C9.15051 23.3199 10.1049 24.2206 11.2502 24.2206H11.3266C12.51 24.1832 13.4262 23.2073 13.388 22.0438C13.3499 20.9177 12.3954 20.017 11.2502 20.017H11.1739C11.0975 20.017 10.9829 20.017 10.9067 20.0544C9.3414 17.5022 8.69242 14.7248 8.92152 11.7221C9.0741 9.47006 9.83769 7.51828 11.1739 5.9043C12.2809 4.51555 14.4188 3.83996 15.8696 3.80252C19.9162 3.7274 21.634 8.68179 21.7486 10.6711C22.2449 10.7837 23.0848 11.0465 23.6575 11.2342C23.1993 5.15382 19.3817 2.00098 15.7169 2.00098C12.2809 2.00098 9.1123 4.44067 7.85242 8.04387C6.09637 12.8481 7.24164 17.4647 9.37949 21.1055C9.18871 21.3682 9.0741 21.7811 9.1123 22.194V22.1939Z"
        fill="#764ABC"
      />
    </svg>
  );
};

export const NativeScriptLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox="0 0 256 256"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <g>
        <path
          d="M237.248313,18.7516875 C249.288646,30.7920202 255.539209,45.8744355 255.995734,63.9989335 L255.995734,192.001067 C255.539209,210.121298 249.288646,225.207981 237.248313,237.248313 C225.207981,249.288646 210.121298,255.539209 191.9968,256 L63.9989335,256 C45.8744355,255.539209 30.7920202,249.288646 18.7516875,237.248313 C6.71135482,225.207981 0.460792321,210.121298 0,192.001067 L0,63.9989335 C0.460792321,45.8744355 6.71135482,30.7920202 18.7516875,18.7516875 C30.7920202,6.71135482 45.8744355,0.460792321 63.9989335,0 L191.9968,0 C210.121298,0.460792321 225.207981,6.71135482 237.248313,18.7516875 L237.248313,18.7516875 L237.248313,18.7516875 Z M219.59314,121.751571 C215.569741,117.749505 213.479109,112.727722 213.312712,106.686222 L213.312712,63.9989335 C213.184714,57.9574341 211.111148,52.927118 207.092015,48.907985 C203.072883,44.8845853 198.038299,42.8152865 191.9968,42.6872886 L170.685155,42.6872886 L170.685155,149.313778 L85.3148448,42.6872886 L63.9989335,42.6872886 C57.9574341,42.8152865 52.927118,44.8845853 48.907985,48.907985 C44.8845853,52.927118 42.8152865,57.9574341 42.6872886,63.9989335 L42.6872886,106.686222 C42.5208914,112.727722 40.4302595,117.749505 36.40686,121.751571 C32.3877269,125.749371 27.3574107,127.831469 21.3159115,127.997867 C27.3574107,128.168531 32.3877269,130.250629 36.40686,134.248429 C40.4302595,138.250496 42.5208914,143.272279 42.6872886,149.313778 L42.6872886,192.001067 C42.8152865,198.038299 44.8845853,203.072883 48.907985,207.092015 C52.927118,211.111148 57.9574341,213.184714 63.9989335,213.312712 L85.3148448,213.312712 L85.3148448,106.686222 L170.685155,213.312712 L191.9968,213.312712 C198.038299,213.184714 203.072883,211.111148 207.092015,207.092015 C211.111148,203.072883 213.184714,198.038299 213.312712,192.001067 L213.312712,149.313778 C213.479109,143.272279 215.569741,138.250496 219.59314,134.248429 C223.612274,130.250629 228.642589,128.168531 234.684089,127.997867 C228.642589,127.831469 223.612274,125.749371 219.59314,121.751571 L219.59314,121.751571 L219.59314,121.751571 Z"
          fill="#3C5AFD"
        ></path>
      </g>
    </svg>
  );
};

export const RiverPodLogo = ({ className }: { className?: string }) => {
  return (
    <div className={cn("size-8 relative", className)}>
      <Image
        src={ImagePath.RIVERPOD_LOGO}
        alt={""}
        fill
        loading="lazy"
        draggable={false}
      />
    </div>
  );
};

export const NodeJSLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      width="800px"
      height="800px"
      viewBox="0 -99 512 512"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <defs>
        <linearGradient
          x1="68.188%"
          y1="17.487%"
          x2="27.823%"
          y2="89.755%"
          id="b"
        >
          <stop stopColor="#41873F" offset="0%" />

          <stop stopColor="#418B3D" offset="32.88%" />

          <stop stopColor="#419637" offset="63.52%" />

          <stop stopColor="#3FA92D" offset="93.19%" />

          <stop stopColor="#3FAE2A" offset="100%" />
        </linearGradient>

        <path
          id="a"
          d="M57.903 1.85a5.957 5.957 0 0 0-5.894 0L3.352 29.933c-1.85 1.04-2.89 3.005-2.89 5.085v56.286c0 2.08 1.156 4.045 2.89 5.085l48.657 28.085a5.957 5.957 0 0 0 5.894 0l48.658-28.085c1.849-1.04 2.89-3.005 2.89-5.085V35.019c0-2.08-1.157-4.045-2.89-5.085L57.903 1.85z"
        />

        <linearGradient
          x1="43.277%"
          y1="55.169%"
          x2="159.245%"
          y2="-18.306%"
          id="d"
        >
          <stop stopColor="#41873F" offset="13.76%" />

          <stop stopColor="#54A044" offset="40.32%" />

          <stop stopColor="#66B848" offset="71.36%" />

          <stop stopColor="#6CC04A" offset="90.81%" />
        </linearGradient>

        <linearGradient
          x1="-4413.77%"
          y1="13.43%"
          x2="5327.93%"
          y2="13.43%"
          id="e"
        >
          <stop stopColor="#6CC04A" offset="9.192%" />

          <stop stopColor="#66B848" offset="28.64%" />

          <stop stopColor="#54A044" offset="59.68%" />

          <stop stopColor="#41873F" offset="86.24%" />
        </linearGradient>

        <linearGradient
          x1="-4.389%"
          y1="49.997%"
          x2="101.499%"
          y2="49.997%"
          id="f"
        >
          <stop stopColor="#6CC04A" offset="9.192%" />

          <stop stopColor="#66B848" offset="28.64%" />

          <stop stopColor="#54A044" offset="59.68%" />

          <stop stopColor="#41873F" offset="86.24%" />
        </linearGradient>

        <linearGradient
          x1="-9713.77%"
          y1="36.21%"
          x2="27.93%"
          y2="36.21%"
          id="g"
        >
          <stop stopColor="#6CC04A" offset="9.192%" />

          <stop stopColor="#66B848" offset="28.64%" />

          <stop stopColor="#54A044" offset="59.68%" />

          <stop stopColor="#41873F" offset="86.24%" />
        </linearGradient>

        <linearGradient
          x1="-103.861%"
          y1="50.275%"
          x2="100.797%"
          y2="50.275%"
          id="h"
        >
          <stop stopColor="#6CC04A" offset="9.192%" />

          <stop stopColor="#66B848" offset="28.64%" />

          <stop stopColor="#54A044" offset="59.68%" />

          <stop stopColor="#41873F" offset="86.24%" />
        </linearGradient>

        <linearGradient
          x1="130.613%"
          y1="-211.069%"
          x2="4.393%"
          y2="201.605%"
          id="i"
        >
          <stop stopColor="#41873F" offset="0%" />

          <stop stopColor="#418B3D" offset="32.88%" />

          <stop stopColor="#419637" offset="63.52%" />

          <stop stopColor="#3FA92D" offset="93.19%" />

          <stop stopColor="#3FAE2A" offset="100%" />
        </linearGradient>
      </defs>

      <g fill="none">
        <path
          d="M253.11 313.094c-1.733 0-3.351-.462-4.854-1.271l-15.371-9.13c-2.312-1.272-1.156-1.734-.462-1.965 3.12-1.04 3.698-1.272 6.934-3.12.347-.232.81-.116 1.156.115l11.789 7.05c.462.231 1.04.231 1.386 0l46.115-26.698c.462-.231.694-.694.694-1.271v-53.28c0-.579-.232-1.04-.694-1.272l-46.115-26.582c-.462-.232-1.04-.232-1.386 0l-46.115 26.582c-.462.231-.694.809-.694 1.271v53.28c0 .463.232 1.04.694 1.272l12.598 7.281c6.819 3.467 11.095-.578 11.095-4.623v-52.587c0-.693.578-1.387 1.387-1.387h5.894c.694 0 1.387.578 1.387 1.387v52.587c0 9.13-4.97 14.447-13.638 14.447-2.658 0-4.738 0-10.633-2.89l-12.135-6.934c-3.005-1.733-4.854-4.97-4.854-8.437v-53.28c0-3.467 1.849-6.704 4.854-8.437l46.114-26.698c2.89-1.618 6.82-1.618 9.709 0l46.114 26.698c3.005 1.733 4.855 4.97 4.855 8.437v53.28c0 3.467-1.85 6.704-4.855 8.437l-46.114 26.698c-1.503.694-3.236 1.04-4.854 1.04zm14.216-36.637c-20.225 0-24.386-9.246-24.386-17.105 0-.694.578-1.387 1.387-1.387h6.01c.693 0 1.271.462 1.271 1.156.925 6.125 3.583 9.13 15.834 9.13 9.708 0 13.87-2.196 13.87-7.397 0-3.005-1.157-5.2-16.297-6.703-12.598-1.272-20.457-4.045-20.457-14.1 0-9.362 7.86-14.91 21.035-14.91 14.793 0 22.075 5.086 23 16.18 0 .348-.116.694-.347 1.041-.232.231-.578.462-.925.462h-6.01c-.578 0-1.156-.462-1.271-1.04-1.387-6.356-4.97-8.437-14.447-8.437-10.633 0-11.905 3.699-11.905 6.472 0 3.352 1.503 4.392 15.834 6.241 14.216 1.85 20.92 4.508 20.92 14.447-.116 10.171-8.437 15.95-23.116 15.95z"
          fill="#539E43"
        />

        <path
          d="M110.028 104.712c0-2.08-1.156-4.046-3.005-5.086l-49.004-28.2c-.81-.463-1.734-.694-2.658-.81h-.463c-.924 0-1.849.347-2.658.81l-49.004 28.2c-1.85 1.04-3.005 3.005-3.005 5.086l.116 75.817c0 1.04.578 2.08 1.502 2.543.925.578 2.08.578 2.89 0l29.125-16.643c1.849-1.04 3.005-3.005 3.005-5.085v-35.482c0-2.08 1.155-4.045 3.005-5.085l12.366-7.166c.925-.578 1.965-.81 3.005-.81 1.04 0 2.08.232 2.89.81l12.366 7.166c1.85 1.04 3.005 3.004 3.005 5.085v35.482c0 2.08 1.156 4.045 3.005 5.085l29.125 16.643c.925.578 2.08.578 3.005 0 .925-.463 1.503-1.503 1.503-2.543l-.116-75.817zM345.571.347c-.924-.463-2.08-.463-2.89 0-.924.578-1.502 1.502-1.502 2.542v75.125c0 .693-.346 1.386-1.04 1.849-.693.346-1.387.346-2.08 0l-12.251-7.05a5.957 5.957 0 0 0-5.895 0l-49.004 28.316c-1.849 1.04-3.005 3.005-3.005 5.085v56.516c0 2.08 1.156 4.046 3.005 5.086l49.004 28.316a5.957 5.957 0 0 0 5.895 0l49.004-28.316c1.849-1.04 3.005-3.005 3.005-5.086V21.844c0-2.196-1.156-4.16-3.005-5.201L345.572.347zm-4.507 143.776c0 .578-.231 1.04-.694 1.271l-16.758 9.708a1.714 1.714 0 0 1-1.503 0l-16.758-9.708c-.463-.231-.694-.809-.694-1.271v-19.417c0-.578.231-1.04.694-1.271l16.758-9.709a1.714 1.714 0 0 1 1.503 0l16.758 9.709c.463.23.694.809.694 1.271v19.417zM508.648 124.244c1.85-1.04 2.89-3.005 2.89-5.086v-13.753c0-2.08-1.156-4.045-2.89-5.085l-48.657-28.2a5.957 5.957 0 0 0-5.894 0l-49.004 28.315c-1.85 1.04-3.005 3.005-3.005 5.086v56.516c0 2.08 1.155 4.045 3.005 5.085l48.657 27.738c1.85 1.04 4.045 1.04 5.779 0L489 178.45c.925-.463 1.503-1.503 1.503-2.543 0-1.04-.578-2.08-1.503-2.543l-49.235-28.316c-.924-.577-1.502-1.502-1.502-2.542v-17.683c0-1.04.578-2.08 1.502-2.543l15.372-8.784a2.821 2.821 0 0 1 3.005 0l15.371 8.784c.925.578 1.503 1.502 1.503 2.543v13.869c0 1.04.578 2.08 1.502 2.542.925.578 2.08.578 3.005 0l29.125-16.99z"
          fill="#a1a1aa"
        />

        <path
          d="M456.293 121.586a1.05 1.05 0 0 1 1.155 0l9.362 5.432c.347.23.578.577.578 1.04v10.864c0 .462-.231.809-.578 1.04l-9.362 5.432a1.05 1.05 0 0 1-1.155 0l-9.362-5.432c-.347-.231-.578-.578-.578-1.04v-10.864c0-.463.231-.81.578-1.04l9.362-5.432z"
          fill="#539E43"
        />

        <g transform="translate(134.068 70.501)">
          <mask id="c" fill="#ffffff">
            <use xlinkHref="#a" />
          </mask>

          <use fill="url(#b)" xlinkHref="#a" />

          <g mask="url(#c)">
            <path d="M51.893 1.85L3.121 29.933C1.27 30.974 0 32.94 0 35.02v56.286c0 1.387.578 2.658 1.502 3.698L56.285 1.156c-1.387-.231-3.005-.116-4.392.693zM56.632 125.053c.462-.116.925-.347 1.387-.578l48.773-28.085c1.85-1.04 3.005-3.005 3.005-5.085V35.019c0-1.502-.694-3.005-1.734-4.045l-51.43 94.079z" />

            <path
              d="M106.676 29.934L57.788 1.85a8.025 8.025 0 0 0-1.503-.578L1.502 95.12a6.082 6.082 0 0 0 1.619 1.387l48.888 28.085c1.387.809 3.005 1.04 4.507.577l51.432-94.078c-.347-.462-.81-.81-1.272-1.156z"
              fill="url(#d)"
            />
          </g>

          <g mask="url(#c)">
            <path d="M109.797 91.305V35.019c0-2.08-1.271-4.045-3.12-5.085L57.786 1.85a5.106 5.106 0 0 0-1.848-.693l53.511 91.42c.231-.347.347-.809.347-1.271zM3.12 29.934C1.272 30.974 0 32.94 0 35.02v56.286c0 2.08 1.387 4.045 3.12 5.085l48.889 28.085c1.156.693 2.427.925 3.814.693L3.467 29.818l-.346.116z" />

            <path
              fill="url(#e)"
              fillRule="evenodd"
              d="M50.391.809l-.693.347h.924l-.231-.347z"
              transform="translate(0 -9.246)"
            />

            <path
              d="M106.792 105.636c1.387-.809 2.427-2.196 2.89-3.698L56.053 10.402c-1.387-.231-2.89-.116-4.16.693L3.351 39.065l52.355 95.465a8.057 8.057 0 0 0 2.196-.693l48.889-28.2z"
              fill="url(#f)"
              fillRule="evenodd"
              transform="translate(0 -9.246)"
            />

            <path
              fill="url(#g)"
              fillRule="evenodd"
              d="M111.3 104.712l-.347-.578v.809l.346-.231z"
              transform="translate(0 -9.246)"
            />

            <path
              d="M106.792 105.636l-48.773 28.085a6.973 6.973 0 0 1-2.196.693l.925 1.734 54.089-31.32v-.694l-1.387-2.312c-.231 1.618-1.271 3.005-2.658 3.814z"
              fill="url(#h)"
              fillRule="evenodd"
              transform="translate(0 -9.246)"
            />

            <path
              d="M106.792 105.636l-48.773 28.085a6.973 6.973 0 0 1-2.196.693l.925 1.734 54.089-31.32v-.694l-1.387-2.312c-.231 1.618-1.271 3.005-2.658 3.814z"
              fill="url(#i)"
              fillRule="evenodd"
              transform="translate(0 -9.246)"
            />
          </g>
        </g>
      </g>
    </svg>
  );
};

export const NestJSLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox="0 0 32 32"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <path
        d="M18.487,2a1.781,1.781,0,0,0-.564.1c1.615,1.062-.29,2.6.6,3.9A2.235,2.235,0,0,1,19.6,3.765c.285-.237.468-.322.407-.714C19.908,2.409,19.052,2,18.487,2Zm2.3.414c-.223,1.123-.5,1.164-1.323,1.887a1.821,1.821,0,0,0-.527,2.191c-3.4-1.32-7.758-2.118-10.953.166-1.149.821-1.85,2-3.267,2.481-.916.314-1.816.221-2.39,1.129A1.413,1.413,0,0,0,2.383,12.1c.171.175.5.287.636.465.079.1.077.2.152.333a2.6,2.6,0,0,0,.564.828c.147.121.652.239.738.368.108.161-.172.8.063.9.158.073.621-.744.666-.816-.092.643-.213,1.784.51.834.343-.451.364-.6.941-.7a8.2,8.2,0,0,1,1.117-.116,8.362,8.362,0,0,1,8.622,7.622c-.108-.5-.761-1.3-1.369-1.11-.259.08-.355.527-.525.786a3.773,3.773,0,0,1-.785.868,4.687,4.687,0,0,0-.072-1.452c-.182.748-.547,1.989-1.466,1.788a1.652,1.652,0,0,1-1.328-1.142c-.119-.76.684-1.651-.607-1.714-2.59-.127-1.991,3.682-.462,4.675a3.272,3.272,0,0,0-1.015.283,6.893,6.893,0,0,0,10.276-4.922,7.058,7.058,0,0,1-.015,3.085,7.213,7.213,0,0,1-.554,1.559,6.781,6.781,0,0,1-1.3,1.81c-.314.311-.89.624-1.088.941a13.409,13.409,0,0,0,3.52-.968A11.638,11.638,0,0,1,15.1,30a11.589,11.589,0,0,0,9.3-5.909,11.657,11.657,0,0,1-1.945,4.668,11.531,11.531,0,0,0,4.975-7.783,11.622,11.622,0,0,1,.209,3.5A12.418,12.418,0,0,0,29.528,13.91a15.755,15.755,0,0,0-1.689-3.962A14.838,14.838,0,0,0,26.9,8.554c-.133-.173-.844-.806-.844-1q-.009.029-.015,0c0,3.248-3.5,5.333-6.431,4.463A5,5,0,0,0,24.156,7.85,5,5,0,0,0,20.787,2.414Z"
        style={{
          fill: "#ea2845",
          fillRule: "evenodd"
        }}
      />
    </svg>
  );
};

export const LaravelLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox="-4 0 264 264"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <g>
        <path
          d="M255.855641,59.619717 C255.950565,59.9710596 256,60.3333149 256,60.6972536 L256,117.265345 C256,118.743206 255.209409,120.108149 253.927418,120.843385 L206.448786,148.178786 L206.448786,202.359798 C206.448786,203.834322 205.665123,205.195421 204.386515,205.937838 L105.27893,262.990563 C105.05208,263.119455 104.804608,263.201946 104.557135,263.289593 C104.464333,263.320527 104.376687,263.377239 104.278729,263.403017 C103.585929,263.58546 102.857701,263.58546 102.164901,263.403017 C102.051476,263.372083 101.948363,263.310215 101.840093,263.26897 C101.613244,263.186479 101.376082,263.1143 101.159544,262.990563 L2.07258227,205.937838 C0.7913718,205.201819 0,203.837372 0,202.359798 L0,32.6555248 C0,32.2843161 0.0515567729,31.9234187 0.144358964,31.5728326 C0.175293028,31.454252 0.24747251,31.3459828 0.288717928,31.2274022 C0.366053087,31.0108638 0.438232569,30.7891697 0.55165747,30.5880982 C0.628992629,30.4540506 0.742417529,30.3457814 0.83521972,30.2220451 C0.953800298,30.0570635 1.06206952,29.8869261 1.20127281,29.7425672 C1.31985339,29.6239866 1.4745237,29.5363401 1.60857131,29.4332265 C1.75808595,29.3094903 1.89213356,29.1754427 2.06227091,29.0774848 L2.06742659,29.0774848 L51.6134853,0.551122364 C52.8901903,-0.183535768 54.4613221,-0.183535768 55.7380271,0.551122364 L105.284086,29.0774848 L105.294397,29.0774848 C105.459379,29.1805983 105.598582,29.3094903 105.748097,29.4280708 C105.882144,29.5311844 106.031659,29.6239866 106.15024,29.7374115 C106.294599,29.8869261 106.397712,30.0570635 106.521448,30.2220451 C106.609095,30.3457814 106.727676,30.4540506 106.799855,30.5880982 C106.918436,30.7943253 106.985459,31.0108638 107.06795,31.2274022 C107.109196,31.3459828 107.181375,31.454252 107.212309,31.5779883 C107.307234,31.9293308 107.355765,32.2915861 107.356668,32.6555248 L107.356668,138.651094 L148.643332,114.878266 L148.643332,60.6920979 C148.643332,60.3312005 148.694889,59.9651474 148.787691,59.619717 C148.823781,59.4959808 148.890804,59.3877116 148.93205,59.269131 C149.014541,59.0525925 149.08672,58.8308984 149.200145,58.629827 C149.27748,58.4957794 149.390905,58.3875102 149.478552,58.2637739 C149.602288,58.0987922 149.705401,57.9286549 149.84976,57.7842959 C149.968341,57.6657153 150.117856,57.5780688 150.251903,57.4749553 C150.406573,57.351219 150.540621,57.2171714 150.705603,57.1192136 L150.710758,57.1192136 L200.261973,28.5928511 C201.538395,27.8571345 203.110093,27.8571345 204.386515,28.5928511 L253.932573,57.1192136 C254.107866,57.2223271 254.241914,57.351219 254.396584,57.4697996 C254.525476,57.5729132 254.674991,57.6657153 254.793572,57.7791402 C254.93793,57.9286549 255.041044,58.0987922 255.16478,58.2637739 C255.257582,58.3875102 255.371007,58.4957794 255.443187,58.629827 C255.561767,58.8308984 255.628791,59.0525925 255.711282,59.269131 C255.757683,59.3877116 255.824707,59.4959808 255.855641,59.619717 Z M247.740605,114.878266 L247.740605,67.8378666 L230.402062,77.8192579 L206.448786,91.6106946 L206.448786,138.651094 L247.745761,114.878266 L247.740605,114.878266 Z M198.194546,199.97272 L198.194546,152.901386 L174.633101,166.357704 L107.351512,204.757188 L107.351512,252.27191 L198.194546,199.97272 Z M8.25939501,39.7961379 L8.25939501,199.97272 L99.0921175,252.266755 L99.0921175,204.762344 L51.6392637,177.906421 L51.6237967,177.89611 L51.603174,177.885798 C51.443348,177.792996 51.3093004,177.658949 51.1597857,177.545524 C51.0308938,177.44241 50.8813791,177.359919 50.7679542,177.246494 L50.7576429,177.231027 C50.6235953,177.102135 50.5307931,176.942309 50.4173682,176.79795 C50.3142546,176.658747 50.1905184,176.540167 50.1080276,176.395808 L50.1028719,176.380341 C50.0100697,176.22567 49.9533572,176.040066 49.8863334,175.864773 C49.8193096,175.710103 49.7316631,175.565744 49.6904177,175.400762 L49.6904177,175.395606 C49.6388609,175.19969 49.6285496,174.993463 49.6079269,174.792392 C49.5873041,174.637722 49.5460587,174.483051 49.5460587,174.328381 L49.5460587,174.31807 L49.5460587,63.5689658 L25.5979377,49.7723734 L8.25939501,39.8012935 L8.25939501,39.7961379 Z M53.6809119,8.89300821 L12.3994039,32.6555248 L53.6706006,56.4180414 L94.9469529,32.6503692 L53.6706006,8.89300821 L53.6809119,8.89300821 Z M75.1491521,157.19091 L99.0972731,143.404629 L99.0972731,39.7961379 L81.7587304,49.7775291 L57.8054537,63.5689658 L57.8054537,167.177457 L75.1491521,157.19091 Z M202.324244,36.934737 L161.047891,60.6972536 L202.324244,84.4597702 L243.59544,60.6920979 L202.324244,36.934737 Z M198.194546,91.6106946 L174.24127,77.8192579 L156.902727,67.8378666 L156.902727,114.878266 L180.850848,128.664547 L198.194546,138.651094 L198.194546,91.6106946 Z M103.216659,197.616575 L163.759778,163.052915 L194.023603,145.781396 L152.778185,122.034346 L105.289242,149.374903 L62.0073307,174.292291 L103.216659,197.616575 Z"
          fill="#FF2D20"
        ></path>
      </g>
    </svg>
  );
};

export const MySQLLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox="-18.458 -22.75 191.151 191.151"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <path d="M-18.458 6.58h191.151v132.49H-18.458V6.58z" fill="none" />
      <path
        d="M40.054 113.583h-5.175c-.183-8.735-.687-16.947-1.511-24.642h-.046l-7.879 24.642h-3.94l-7.832-24.642h-.045c-.581 7.388-.947 15.602-1.099 24.642H7.81c.304-10.993 1.068-21.299 2.289-30.919h6.414l7.465 22.719h.046l7.511-22.719h6.137c1.344 11.268 2.138 21.575 2.382 30.919M62.497 90.771c-2.107 11.434-4.887 19.742-8.337 24.928-2.688 3.992-5.633 5.99-8.84 5.99-.855 0-1.91-.258-3.16-.77v-2.757c.611.088 1.328.138 2.152.138 1.498 0 2.702-.412 3.62-1.238 1.098-1.006 1.647-2.137 1.647-3.388 0-.858-.428-2.612-1.282-5.268L42.618 90.77h5.084l4.076 13.19c.916 2.995 1.298 5.086 1.145 6.277 2.229-5.953 3.786-12.444 4.673-19.468h4.901v.002z"
        fill="#5d87a1"
      />
      <path
        d="M131.382 113.583h-14.7V82.664h4.945v27.113h9.755v3.806zM112.834 114.33l-5.684-2.805c.504-.414.986-.862 1.42-1.381 2.416-2.838 3.621-7.035 3.621-12.594 0-10.229-4.014-15.346-12.045-15.346-3.938 0-7.01 1.298-9.207 3.895-2.414 2.84-3.619 7.022-3.619 12.551 0 5.435 1.068 9.422 3.205 11.951 1.955 2.291 4.902 3.438 8.843 3.438 1.47 0 2.819-.18 4.048-.543l7.4 4.308 2.018-3.474zm-18.413-6.934c-1.252-2.014-1.878-5.248-1.878-9.707 0-7.785 2.365-11.682 7.1-11.682 2.475 0 4.289.932 5.449 2.792 1.25 2.017 1.879 5.222 1.879 9.619 0 7.849-2.367 11.774-7.099 11.774-2.476.001-4.29-.928-5.451-2.796M85.165 105.013c0 2.622-.962 4.773-2.884 6.458-1.924 1.678-4.504 2.519-7.737 2.519-3.024 0-5.956-.966-8.794-2.888l1.329-2.655c2.442 1.223 4.653 1.831 6.638 1.831 1.863 0 3.319-.413 4.375-1.232 1.055-.822 1.684-1.975 1.684-3.433 0-1.837-1.281-3.407-3.631-4.722-2.167-1.19-6.501-3.678-6.501-3.678-2.349-1.712-3.525-3.55-3.525-6.578 0-2.506.877-4.529 2.632-6.068 1.757-1.545 4.024-2.315 6.803-2.315 2.87 0 5.479.769 7.829 2.291l-1.192 2.656c-2.01-.854-3.994-1.281-5.951-1.281-1.585 0-2.809.381-3.66 1.146-.858.762-1.387 1.737-1.387 2.933 0 1.828 1.308 3.418 3.722 4.759 2.196 1.192 6.638 3.723 6.638 3.723 2.409 1.709 3.612 3.53 3.612 6.534"
        fill="#f8981d"
      />
      <path
        d="M137.59 72.308c-2.99-.076-5.305.225-7.248 1.047-.561.224-1.453.224-1.531.933.303.3.338.784.601 1.198.448.747 1.229 1.752 1.942 2.276.783.6 1.569 1.194 2.393 1.717 1.453.899 3.1 1.422 4.516 2.318.825.521 1.645 1.195 2.471 1.756.406.299.666.784 1.193.971v-.114c-.264-.336-.339-.822-.598-1.196l-1.122-1.082c-1.084-1.456-2.431-2.727-3.884-3.771-1.196-.824-3.812-1.944-4.297-3.322l-.076-.076c.822-.077 1.797-.375 2.578-.604 1.271-.335 2.43-.259 3.734-.594.6-.15 1.195-.338 1.797-.523v-.337c-.676-.673-1.158-1.567-1.869-2.203-1.902-1.643-3.998-3.25-6.164-4.595-1.16-.749-2.652-1.231-3.887-1.868-.445-.225-1.195-.336-1.457-.71-.67-.822-1.047-1.904-1.533-2.877-1.08-2.053-2.129-4.331-3.061-6.502-.674-1.456-1.084-2.91-1.906-4.257-3.85-6.35-8.031-10.196-14.457-13.971-1.381-.786-3.024-1.121-4.779-1.533l-2.803-.148c-.598-.262-1.197-.973-1.719-1.309-2.132-1.344-7.621-4.257-9.189-.411-1.01 2.431 1.494 4.821 2.354 6.054.635.856 1.458 1.83 1.902 2.802.263.635.337 1.309.6 1.98.598 1.644 1.157 3.473 1.943 5.007.41.782.857 1.604 1.381 2.312.3.414.822.597.936 1.272-.521.744-.562 1.867-.861 2.801-1.344 4.221-.819 9.45 1.086 12.552.596.934 2.018 2.99 3.92 2.202 1.684-.672 1.311-2.801 1.795-4.668.111-.451.038-.747.262-1.043v.073c.521 1.045 1.047 2.052 1.53 3.1 1.159 1.829 3.177 3.735 4.858 5.002.895.676 1.604 1.832 2.725 2.245V74.1h-.074c-.227-.335-.559-.485-.857-.745-.674-.673-1.42-1.495-1.943-2.241-1.566-2.093-2.952-4.41-4.182-6.801-.602-1.16-1.121-2.428-1.606-3.586-.226-.447-.226-1.121-.601-1.346-.562.821-1.381 1.532-1.791 2.538-.711 1.609-.785 3.588-1.049 5.646l-.147.072c-1.19-.299-1.604-1.53-2.056-2.575-1.119-2.654-1.307-6.914-.336-9.976.26-.783 1.385-3.249.936-3.995-.225-.715-.973-1.122-1.383-1.685-.482-.708-1.01-1.604-1.346-2.39-.896-2.091-1.347-4.408-2.312-6.498-.451-.974-1.234-1.982-1.868-2.879-.712-1.008-1.495-1.718-2.058-2.913-.186-.411-.447-1.083-.148-1.53.073-.3.225-.412.523-.487.484-.409 1.867.111 2.352.336 1.385.56 2.543 1.083 3.699 1.867.523.375 1.084 1.085 1.755 1.272h.786c1.193.26 2.538.072 3.661.41 1.979.636 3.772 1.569 5.38 2.576 4.893 3.103 8.928 7.512 11.652 12.778.447.858.637 1.644 1.045 2.539.787 1.832 1.76 3.7 2.541 5.493.785 1.755 1.533 3.547 2.654 5.005.559.784 2.805 1.195 3.812 1.606.745.335 1.905.633 2.577 1.044 1.271.783 2.537 1.682 3.732 2.543.595.448 2.465 1.382 2.576 2.13M99.484 39.844a5.82 5.82 0 0 0-1.529.188v.075h.072c.301.597.824 1.011 1.197 1.532.301.599.562 1.193.857 1.791l.072-.074c.527-.373.789-.971.789-1.868-.227-.264-.262-.522-.451-.784-.22-.374-.705-.56-1.007-.86"
        fill="#5d87a1"
      />
      <path
        d="M141.148 113.578h.774v-3.788h-1.161l-.947 2.585-1.029-2.585h-1.118v3.788h.731v-2.882h.041l1.078 2.882h.557l1.074-2.882v2.882zm-6.235 0h.819v-3.146h1.072v-.643h-3.008v.643h1.115l.002 3.146z"
        fill="#f8981d"
      />
    </svg>
  );
};

export const PythonLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox="0 0 32 32"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M13.0164 2C10.8193 2 9.03825 3.72453 9.03825 5.85185V8.51852H15.9235V9.25926H5.97814C3.78107 9.25926 2 10.9838 2 13.1111L2 18.8889C2 21.0162 3.78107 22.7407 5.97814 22.7407H8.27322V19.4815C8.27322 17.3542 10.0543 15.6296 12.2514 15.6296H19.5956C21.4547 15.6296 22.9617 14.1704 22.9617 12.3704V5.85185C22.9617 3.72453 21.1807 2 18.9836 2H13.0164ZM12.0984 6.74074C12.8589 6.74074 13.4754 6.14378 13.4754 5.40741C13.4754 4.67103 12.8589 4.07407 12.0984 4.07407C11.3378 4.07407 10.7213 4.67103 10.7213 5.40741C10.7213 6.14378 11.3378 6.74074 12.0984 6.74074Z"
        fill="url(#paint0_linear_87_8204)"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M18.9834 30C21.1805 30 22.9616 28.2755 22.9616 26.1482V23.4815L16.0763 23.4815L16.0763 22.7408L26.0217 22.7408C28.2188 22.7408 29.9998 21.0162 29.9998 18.8889V13.1111C29.9998 10.9838 28.2188 9.25928 26.0217 9.25928L23.7266 9.25928V12.5185C23.7266 14.6459 21.9455 16.3704 19.7485 16.3704L12.4042 16.3704C10.5451 16.3704 9.03809 17.8296 9.03809 19.6296L9.03809 26.1482C9.03809 28.2755 10.8192 30 13.0162 30H18.9834ZM19.9015 25.2593C19.1409 25.2593 18.5244 25.8562 18.5244 26.5926C18.5244 27.329 19.1409 27.9259 19.9015 27.9259C20.662 27.9259 21.2785 27.329 21.2785 26.5926C21.2785 25.8562 20.662 25.2593 19.9015 25.2593Z"
        fill="url(#paint1_linear_87_8204)"
      />
      <defs>
        <linearGradient
          id="paint0_linear_87_8204"
          x1="12.4809"
          y1="2"
          x2="12.4809"
          y2="22.7407"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#327EBD" />
          <stop offset="1" stopColor="#1565A7" />
        </linearGradient>
        <linearGradient
          id="paint1_linear_87_8204"
          x1="19.519"
          y1="9.25928"
          x2="19.519"
          y2="30"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#FFDA4B" />
          <stop offset="1" stopColor="#F9C600" />
        </linearGradient>
      </defs>
    </svg>
  );
};

export const FastAPILogo = ({ className }: { className?: string }) => {
  return (
    <svg
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 154 154"
      className={className}
    >
      <circle cx="77" cy="77" fill="#05998b" r="77" />
      <path
        d="M81.375 18.667l-38.75 70H77.5l-3.875 46.666 38.75-70H77.5z"
        fill="#fff"
      />
    </svg>
  );
};

export const SynkLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      viewBox="0 0 52 52"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      className={cn("ml-[14px]", className)}
    >
      <g clipPath="url(#clip0_9532_31065)">
        <g clipPath="url(#clip1_9532_31065)">
          <path
            d="M32.03 11.6196C31.6033 11.5001 31.1568 11.3806 30.6905 11.2667C30.8377 11.8243 30.9193 12.3974 30.9336 12.9742V13.384L28.9837 18.6716C29.9728 27.8267 29.4895 29.076 29.3313 29.4858C29.0798 30.1375 28.4072 31.1933 27.2797 32.7301L28.3874 43.0377L32.4172 40.1292C32.5816 40.0107 32.7156 39.8543 32.808 39.6732C32.9003 39.492 32.9485 39.2913 32.9485 39.0877V12.849C32.9474 12.5718 32.8574 12.3023 32.6919 12.0808C32.5264 11.8593 32.2942 11.6975 32.03 11.6196Z"
            fill="#030328"
          />
          <path
            d="M32.9485 39.0905C32.9485 39.2941 32.9003 39.4949 32.808 39.676C32.7156 39.8572 32.5816 40.0135 32.4172 40.1321L28.3874 43.0405L27.2797 32.7329C28.41 31.2018 29.0798 30.1403 29.3313 29.4886C29.4895 29.0788 29.9728 27.8295 28.9837 18.6744L30.9336 13.3868V12.977C30.9193 12.4002 30.8377 11.8271 30.6905 11.2695C31.1568 11.3834 31.6033 11.5029 32.03 11.6224C32.2947 11.7004 32.5272 11.8626 32.6927 12.0847C32.8583 12.3068 32.948 12.5769 32.9485 12.8547V39.0905Z"
            fill="#030328"
          />
          <path
            d="M13.2797 12.1603C15.4388 11.5247 17.7333 11.5247 19.8924 12.1603L20.1439 11.7448L20.4265 9.81818C19.4628 9.77264 17.8012 9.70435 16.6171 9.70435C15.3257 9.70435 14.0342 9.74134 12.7626 9.80964L13.0452 11.7448L13.2797 12.1603Z"
            fill="#030328"
          />
          <path
            d="M16.6087 9.70715C17.7927 9.70715 19.4544 9.77546 20.418 9.82099L20.1354 11.7476L19.8839 12.1631C17.7249 11.5275 15.4303 11.5275 13.2713 12.1631L13.0198 11.7505L12.7372 9.8153C14.0258 9.74415 15.3172 9.70715 16.6087 9.70715Z"
            fill="#030328"
          />
          <path
            d="M4.18885 18.6744L2.24462 13.3897V12.977C2.25878 12.4004 2.33939 11.8274 2.48482 11.2695C2.02137 11.3834 1.57205 11.5029 1.14816 11.6224C0.883263 11.7 0.650528 11.8621 0.484917 12.0843C0.319306 12.3065 0.229762 12.5768 0.229736 12.8547V39.0905C0.229675 39.2941 0.277842 39.4949 0.370239 39.676C0.462636 39.8572 0.596598 40.0135 0.76101 40.1321L4.80773 43.0604L5.91831 32.7642C4.78794 31.216 4.10124 30.146 3.84691 29.4886C3.68301 29.076 3.19978 27.8266 4.18885 18.6744Z"
            fill="#030328"
          />
          <path
            d="M4.80776 43.0604L0.755391 40.1349C0.590979 40.0163 0.457016 39.86 0.364619 39.6788C0.272223 39.4977 0.22406 39.297 0.224121 39.0933V12.8547C0.224147 12.5768 0.313691 12.3065 0.479302 12.0843C0.644912 11.8621 0.877648 11.7 1.14254 11.6224C1.56643 11.5029 2.01575 11.3834 2.4792 11.2695C2.33377 11.8274 2.25316 12.4004 2.239 12.977V13.3897L4.18888 18.6744C3.19981 27.8266 3.68304 29.076 3.84129 29.4886C4.09563 30.146 4.77385 31.216 5.91269 32.7642L4.80776 43.0604Z"
            fill="#030328"
          />
          <path
            d="M27.7706 28.8797C28.0871 28.0629 27.9063 24.2011 27.2846 18.5464V18.4611L29.2627 13.0853V12.9771C29.2627 10.6322 26.2475 4.35707 24.4587 1.02459L23.9952 0.170837C23.967 0.118145 23.9231 0.075738 23.8696 0.0496493C23.8161 0.0235606 23.7558 0.0151136 23.6973 0.0255141C23.6388 0.0359147 23.585 0.064637 23.5436 0.107586C23.5022 0.150534 23.4753 0.205524 23.4668 0.264746L21.743 12.3254L20.638 14.1553L20.3554 14.0614C19.1346 13.6375 17.8567 13.4034 16.5659 13.367C15.279 13.3977 14.005 13.632 12.7904 14.0614L12.5079 14.1553L11.4199 12.3254L9.70172 0.241983C9.69394 0.181862 9.66731 0.12581 9.62569 0.0820002C9.58407 0.0381906 9.52965 0.00890824 9.47035 -0.00157381C9.41105 -0.0120559 9.34998 -0.00319168 9.29603 0.0237251C9.24208 0.0506418 9.19808 0.0942047 9.17044 0.148066L8.70982 1.00182C6.92667 4.33999 3.90576 10.6151 3.90576 12.9544V13.0625L5.8839 18.4383V18.5237C5.2622 24.1784 5.08134 28.0402 5.39785 28.8569C5.68044 29.5883 6.8108 31.1564 7.74901 32.4057L6.38974 45.0555L7.74336 46.0316L8.75786 46.763L15.4327 51.598C15.7685 51.8402 16.1712 51.9704 16.5842 51.9704C16.9973 51.9704 17.4 51.8402 17.7358 51.598L25.9818 45.6559L26.8042 45.0612L25.4449 32.4C26.3803 31.1564 27.4909 29.6082 27.7706 28.8797ZM24.4445 7.82046L24.6593 6.31216C24.667 6.26426 24.6896 6.22004 24.7237 6.18581C24.7579 6.15157 24.8019 6.12906 24.8495 6.12149C24.8971 6.11392 24.9459 6.12168 24.9889 6.14365C25.0318 6.16562 25.0668 6.20069 25.0888 6.24386C26.1825 8.54046 27.2365 11.0562 27.3496 12.2059C27.352 12.2397 27.3472 12.2737 27.3354 12.3055L26.807 13.7284C26.7925 13.7685 26.7671 13.8037 26.7337 13.8299C26.7003 13.8562 26.6603 13.8724 26.6182 13.8769C26.5761 13.8813 26.5335 13.8738 26.4955 13.8551C26.4574 13.8364 26.4253 13.8073 26.4029 13.7711C25.0888 11.688 24.5745 8.72259 24.4502 7.87737C24.4459 7.85775 24.4441 7.83769 24.4445 7.81761V7.82046ZM19.1996 22.6445C19.8044 22.0411 20.8952 21.2016 22.2657 21.2016C24.0913 21.2016 23.04 22.6075 22.684 23.0286C22.6574 23.0599 22.6245 23.0849 22.5874 23.1021C22.5504 23.1193 22.51 23.1283 22.4692 23.1283H19.3974C19.3421 23.1275 19.2883 23.1103 19.2425 23.079C19.1968 23.0477 19.1612 23.0035 19.1401 22.952C19.119 22.9005 19.1135 22.8439 19.124 22.7892C19.1346 22.7346 19.1609 22.6842 19.1996 22.6445ZM20.7708 25.2569C20.8172 25.3744 20.8942 25.4771 20.9936 25.5543C21.0931 25.6314 21.2114 25.6801 21.336 25.6952C21.5127 25.7202 21.6922 25.6773 21.8389 25.575C21.9855 25.4727 22.0885 25.3185 22.1273 25.1431C22.0246 25.1415 21.9258 25.1031 21.8486 25.0347C21.7715 24.9664 21.721 24.8727 21.7062 24.7703C21.6969 24.7036 21.7033 24.6356 21.7249 24.5718C21.7465 24.508 21.7827 24.4503 21.8306 24.4032L21.8108 24.3861H23.0457V24.4487C23.0527 24.6661 23.0159 24.8826 22.9377 25.0853C22.8594 25.288 22.7413 25.4727 22.5904 25.6283C22.4395 25.7838 22.2589 25.9071 22.0595 25.9906C21.8601 26.0741 21.646 26.1162 21.4301 26.1142C21.2142 26.1123 21.0008 26.0665 20.8029 25.9794C20.605 25.8924 20.4266 25.7659 20.2785 25.6077C20.1303 25.4495 20.0155 25.2627 19.9408 25.0587C19.8661 24.8546 19.8332 24.6375 19.8439 24.4203V24.3861H21.0619C20.9184 24.4727 20.8099 24.6076 20.7556 24.767C20.7014 24.9263 20.7047 25.0999 20.7652 25.2569H20.7708ZM10.9169 21.2016C12.2931 21.2016 13.3782 22.0411 13.983 22.6445C14.022 22.6846 14.0484 22.7355 14.0588 22.7907C14.0692 22.8459 14.0632 22.9029 14.0414 22.9547C14.0196 23.0064 13.9832 23.0505 13.9366 23.0814C13.89 23.1123 13.8353 23.1286 13.7795 23.1283H10.7219C10.6811 23.1283 10.6407 23.1193 10.6036 23.1021C10.5666 23.0849 10.5336 23.0599 10.5071 23.0286C10.1369 22.6075 9.08567 21.2016 10.9112 21.2016H10.9169ZM11.482 24.7703C11.4649 24.8706 11.4134 24.9617 11.3364 25.0277C11.2595 25.0937 11.162 25.1305 11.061 25.1317C11.0954 25.3106 11.1967 25.4693 11.3439 25.5752C11.4911 25.6811 11.6731 25.7261 11.8522 25.7009C11.9675 25.6854 12.0769 25.6408 12.1703 25.5711C12.2638 25.5014 12.3381 25.409 12.3863 25.3025C12.4591 25.1445 12.4722 24.9652 12.4233 24.7982C12.3745 24.6311 12.2669 24.4877 12.1207 24.3946H13.3048C13.3135 24.3953 13.3218 24.3991 13.328 24.4054C13.3342 24.4116 13.338 24.42 13.3387 24.4288C13.3494 24.646 13.3165 24.8632 13.2418 25.0672C13.1672 25.2713 13.0523 25.458 12.9041 25.6163C12.756 25.7745 12.5776 25.9009 12.3797 25.988C12.1818 26.075 11.9685 26.1209 11.7525 26.1228C11.5366 26.1247 11.3225 26.0827 11.1231 25.9991C10.9237 25.9156 10.7431 25.7924 10.5922 25.6368C10.4413 25.4812 10.3232 25.2966 10.2449 25.0939C10.1667 24.8911 10.1299 24.6746 10.1369 24.4573V24.3946H11.3718L11.3521 24.4117C11.3997 24.4574 11.4362 24.5135 11.4588 24.5757C11.4813 24.6379 11.4893 24.7045 11.482 24.7703ZM6.81363 13.7768C6.79076 13.8128 6.75839 13.8417 6.72015 13.8603C6.68191 13.8788 6.63931 13.8863 6.59709 13.8819C6.55487 13.8774 6.51471 13.8613 6.48109 13.8352C6.44747 13.8091 6.42171 13.7741 6.4067 13.7341L5.88108 12.3112C5.86798 12.2798 5.86312 12.2455 5.86695 12.2116C5.97433 11.0733 7.0284 8.54615 8.12768 6.24955C8.14899 6.20588 8.18364 6.17023 8.22654 6.14784C8.26945 6.12544 8.31834 6.11748 8.36607 6.12512C8.41379 6.13275 8.45783 6.15559 8.49172 6.19028C8.52561 6.22496 8.54758 6.26968 8.5544 6.31786L8.76916 7.82615C8.77197 7.84788 8.77197 7.86988 8.76916 7.89161C8.63917 8.72829 8.12485 11.6937 6.81363 13.7768ZM10.8067 39.2756C9.90801 36.7968 9.89671 33.3278 9.89671 33.1798V32.9436L9.74976 32.7586C9.36261 32.2776 8.90198 31.6828 8.43005 31.0511C8.402 31.0144 8.38324 30.9714 8.3754 30.9258C8.36757 30.8802 8.37089 30.8334 8.38509 30.7894C8.39929 30.7454 8.42393 30.7055 8.45687 30.6733C8.48982 30.641 8.53009 30.6173 8.57417 30.6043L10.996 29.8928C11.0474 29.8776 11.0935 29.848 11.1288 29.8074L13.4404 27.1523C13.4775 27.1097 13.5264 27.0793 13.5808 27.0649C13.6352 27.0505 13.6926 27.0527 13.7457 27.0714C13.7988 27.09 13.8452 27.1242 13.8789 27.1695C13.9126 27.2149 13.9321 27.2693 13.9349 27.3259L14.339 34.9356C14.3413 34.9975 14.3234 35.0585 14.2882 35.1092C14.1271 35.3483 13.6665 36.0711 13.6665 36.5151C13.6665 37.0843 14.5001 37.8299 15.3225 38.4247C15.3316 38.4004 15.342 38.3767 15.3536 38.3535C15.6361 37.8356 16.0176 37.7416 16.2013 38.1401C16.2641 38.4344 16.286 38.7361 16.2663 39.0365H16.2805V39.7366C16.2806 39.7799 16.271 39.8228 16.2522 39.8618C16.1024 40.1663 15.3762 41.4697 13.8304 41.4697C13.155 41.4896 11.5329 41.2733 10.8067 39.2756ZM17.6962 42.1641C17.7197 42.1636 17.7428 42.1706 17.7622 42.184C17.7816 42.1974 17.7964 42.2165 17.8044 42.2387C17.8125 42.261 17.8135 42.2852 17.8073 42.308C17.8011 42.3309 17.7879 42.3512 17.7697 42.3661C17.4299 42.6283 17.0137 42.7704 16.5857 42.7704C16.1576 42.7704 15.7414 42.6283 15.4016 42.3661C15.3836 42.3513 15.3705 42.3313 15.3642 42.3087C15.3579 42.2862 15.3587 42.2622 15.3664 42.2401C15.3741 42.218 15.3884 42.1988 15.4074 42.1852C15.4263 42.1716 15.449 42.1642 15.4722 42.1641H17.6962ZM19.762 42.9979C19.4531 43.5759 18.9946 44.0588 18.4351 44.3955C17.8756 44.7321 17.236 44.9098 16.5842 44.9098C15.9325 44.9098 15.2929 44.7321 14.7334 44.3955C14.1739 44.0588 13.7154 43.5759 13.4065 42.9979C13.3821 42.9532 13.37 42.9028 13.3716 42.8518C13.3732 42.8008 13.3884 42.7512 13.4155 42.7082C13.4427 42.6651 13.4808 42.6302 13.526 42.6071C13.5711 42.584 13.6216 42.5735 13.6721 42.5767H13.8417C14.0205 42.578 14.1988 42.558 14.373 42.517C14.4278 42.5035 14.4853 42.5069 14.5382 42.5267C14.5911 42.5465 14.6369 42.5817 14.6697 42.6279C14.8865 42.9374 15.174 43.1899 15.5079 43.3642C15.8418 43.5385 16.2124 43.6294 16.5885 43.6294C16.9646 43.6294 17.3352 43.5385 17.6691 43.3642C18.003 43.1899 18.2904 42.9374 18.5073 42.6279C18.5401 42.5817 18.5859 42.5465 18.6388 42.5267C18.6916 42.5069 18.7492 42.5035 18.804 42.517C18.989 42.5619 19.1788 42.5839 19.3692 42.5824H19.502C19.5515 42.5803 19.6007 42.5913 19.6447 42.6144C19.6886 42.6375 19.7257 42.6718 19.7524 42.7139C19.779 42.756 19.7942 42.8043 19.7963 42.8542C19.7985 42.9041 19.7877 42.9536 19.7648 42.9979H19.762ZM24.778 31.0625C24.3089 31.6829 23.8454 32.2776 23.4583 32.77L23.3113 32.9549V33.1911C23.3113 33.3391 23.3113 36.8082 22.4014 39.2869C21.678 41.279 20.0531 41.501 19.389 41.501C17.8432 41.501 17.1282 40.1976 16.97 39.8931C16.9502 39.8543 16.9396 39.8115 16.9389 39.7679V39.0678H16.953C16.9334 38.7674 16.9553 38.4657 17.018 38.1714C17.1904 37.7729 17.5662 37.8669 17.8658 38.3848C17.8658 38.4076 17.8856 38.4332 17.8969 38.456C18.7192 37.8612 19.5529 37.1156 19.5529 36.5464C19.5529 36.1024 19.0894 35.3796 18.9283 35.1405C18.8941 35.0894 18.8772 35.0285 18.8803 34.9669L19.2816 27.3572C19.2844 27.3006 19.3039 27.2462 19.3376 27.2008C19.3713 27.1555 19.4177 27.1213 19.4708 27.1027C19.5239 27.084 19.5813 27.0818 19.6357 27.0962C19.6901 27.1106 19.739 27.141 19.7761 27.1836L22.0877 29.8387C22.1238 29.8798 22.1709 29.9094 22.2234 29.9241L24.6423 30.6356C24.6826 30.6506 24.7189 30.6746 24.7485 30.7058C24.7782 30.737 24.8004 30.7746 24.8134 30.8157C24.8265 30.8569 24.8301 30.9005 24.824 30.9432C24.8178 30.986 24.8021 31.0267 24.778 31.0625Z"
            fill="#030328"
          />
        </g>
      </g>
    </svg>
  );
};

export const OwaspZapLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      id="Layer_1"
      data-name="Layer 1"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      viewBox="0 0 90 90"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <defs>
        <radialGradient
          id="radial-gradient"
          cx="47.65"
          cy="47.68"
          fx="47.65"
          fy="47.68"
          r="41.32"
          gradientUnits="userSpaceOnUse"
        >
          <stop offset="0" stopColor="#4386ff" />
          <stop offset="1" stopColor="#00549b" />
        </radialGradient>
      </defs>
      <g>
        <circle className="cls-1" cx="47.65" cy="47.68" r="41.32" />
        <path
          className="cls-4"
          d="M4.47,18.31L37.27,4.16c.24-.1.52-.02.67.2l17.74,25.22c.23.32.08.79-.29.91l-4.75,1.54c-.38.12-.52.61-.27.93l14.01,17.64c.27.34.1.84-.3.94l-6.07,1.49c-.41.1-.57.61-.31.94l20.62,26.13c.39.5-.16,1.2-.71.89l-46.41-26.79c-.42-.24-.38-.88.07-1.06l5.59-2.21c.42-.17.49-.76.12-1.03l-18.84-13.6c-.37-.26-.31-.84.1-1.02l4.3-1.89c.41-.18.47-.76.1-1.02L4.36,19.33c-.37-.26-.31-.85.1-1.03Z"
        />
        <path
          className="cls-2"
          d="M37.48,4.12c.18,0,.35.09.45.24l17.74,25.22c.23.32.08.79-.29.91l-4.75,1.54c-.38.12-.52.61-.27.93l14.01,17.64c.27.34.1.84-.3.94l-6.07,1.49c-.41.1-.57.61-.31.94l20.62,26.13c.33.41,0,.96-.43.96-.09,0-.18-.02-.28-.08l-46.41-26.79c-.42-.24-.38-.88.07-1.06l5.59-2.21c.42-.17.49-.76.12-1.03l-18.84-13.6c-.37-.26-.31-.84.1-1.02l4.3-1.89c.41-.18.47-.76.1-1.02L4.36,19.33c-.37-.26-.31-.85.1-1.03L37.27,4.16c.07-.03.14-.04.22-.04M37.48,1c-.5,0-.99.1-1.45.3L3.23,15.44c-1.22.53-2.07,1.68-2.21,3.01-.14,1.33.45,2.64,1.53,3.42l14.66,10.44-.22.1c-1.21.53-2.05,1.68-2.19,3-.14,1.32.44,2.63,1.52,3.41l15.1,10.9-1.3.51c-1.33.53-2.22,1.74-2.32,3.18-.11,1.44.6,2.77,1.84,3.49l46.41,26.79c.56.32,1.2.5,1.84.5,1.39,0,2.69-.82,3.31-2.09.63-1.29.46-2.79-.43-3.92l-18.19-23.06,2.25-.55c1.22-.3,2.2-1.2,2.61-2.4.41-1.21.19-2.52-.61-3.52l-11.75-14.79,1.27-.41c1.11-.36,1.99-1.24,2.36-2.35.37-1.12.19-2.36-.48-3.32L40.49,2.56c-.69-.98-1.81-1.56-3.01-1.56h0Z"
        />
      </g>
    </svg>
  );
};

export const BurpeSuitLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      version="1.1"
      id="Layer_2"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      viewBox="0 0 44 44"
      xmlSpace="preserve"
      preserveAspectRatio="xMidYMid"
      className={cn("burpe-suit scale-90 ml-3", className)}
    >
      <rect x="0" y="7.1" fill="#FF6633" width="30.9" height="30.9" />
      <polygon
        fill="#FFFFFF"
        points="17.1,38.1 13.8,38.1 13.8,33.1 18.3,27.6 13.8,27.6 13.8,20.9 5.7,20.9 13.8,10.9 13.8,7.1 17.1,7.1 
   17.1,12.1 12.6,17.6 17.1,17.6 17.1,24.3 25.2,24.3 17.1,34.3 "
      />
    </svg>
  );
};

export const GitLogo = ({ className }: { className?: string }) => {
  return (
    <svg
      fill="#F1502F"
      viewBox="0 0 16 16"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      preserveAspectRatio="xMidYMid"
      className={className}
    >
      <g>
        <path d="M15,5.6,10.4,1A3.4,3.4,0,0,0,5.78.86L7.66,2.74a1.25,1.25,0,0,1,1.67,1.2V4a1.23,1.23,0,0,1-.08.38l2.45,2.4a1.17,1.17,0,0,1,.37-.08A1.3,1.3,0,1,1,10.77,8h0a1.17,1.17,0,0,1,.08-.37L8.6,5.38v5.23a1.28,1.28,0,0,1,.73,1.15,1.3,1.3,0,0,1-2.6,0,1.27,1.27,0,0,1,.67-1.11V5.07A1.27,1.27,0,0,1,6.73,4a1.17,1.17,0,0,1,.08-.37l-1.9-1.9L1,5.6a3.38,3.38,0,0,0,0,4.79H1L5.6,15a3.38,3.38,0,0,0,4.79,0h0L15,10.4a3.38,3.38,0,0,0,0-4.79Z" />
      </g>
    </svg>
  );
};

export const LookaLogo = ({ className }: { className?: string }) => {
  return (
    <Image
      src={ImagePath.LOOKA_LOGO}
      alt=""
      width={100}
      height={100}
      loading="lazy"
      draggable={false}
      className={cn("size-full object-contain", className)}
    />
  );
};

export const FramerMotionLogo = ({ className }: { className?: string }) => (
  <svg
    className={className}
    viewBox="3.7 3.7 43.6 43.6"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="m47.3 3.7v21.8l-10.9 10.9-10.9 10.9-10.9-10.9 10.9-10.9v.1-.1z"
      fill="#59529d"
    />
    <path d="m47.3 25.5v21.8l-10.9-10.9z" fill="#5271b4" />
    <path d="m25.5 25.5-10.9 10.9-10.9 10.9v-43.6l10.9 10.9z" fill="#bb4b96" />
  </svg>
);

const OpenAILogo = ({ className }: { className?: string }) => {
  return (
    <svg
      className={className}
      width="28"
      viewBox="0 0 28 28"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M26.153 11.46a6.888 6.888 0 0 0-.608-5.73 7.117 7.117 0 0 0-3.29-2.93 7.238 7.238 0 0 0-4.41-.454 7.065 7.065 0 0 0-2.41-1.742A7.15 7.15 0 0 0 12.514 0a7.216 7.216 0 0 0-4.217 1.346 7.061 7.061 0 0 0-2.603 3.539 7.12 7.12 0 0 0-2.734 1.188A7.012 7.012 0 0 0 .966 8.268a6.979 6.979 0 0 0 .88 8.273 6.89 6.89 0 0 0 .607 5.729 7.117 7.117 0 0 0 3.29 2.93 7.238 7.238 0 0 0 4.41.454 7.061 7.061 0 0 0 2.409 1.742c.92.404 1.916.61 2.923.604a7.215 7.215 0 0 0 4.22-1.345 7.06 7.06 0 0 0 2.605-3.543 7.116 7.116 0 0 0 2.734-1.187 7.01 7.01 0 0 0 1.993-2.196 6.978 6.978 0 0 0-.884-8.27Zm-10.61 14.71c-1.412 0-2.505-.428-3.46-1.215.043-.023.119-.064.168-.094l5.65-3.22a.911.911 0 0 0 .464-.793v-7.86l2.389 1.36a.087.087 0 0 1 .046.065v6.508c0 2.952-2.491 5.248-5.257 5.248ZM4.062 21.354a5.17 5.17 0 0 1-.635-3.516c.042.025.115.07.168.1l5.65 3.22a.928.928 0 0 0 .928 0l6.898-3.93v2.72a.083.083 0 0 1-.034.072l-5.711 3.255a5.386 5.386 0 0 1-4.035.522 5.315 5.315 0 0 1-3.23-2.443ZM2.573 9.184a5.283 5.283 0 0 1 2.768-2.301V13.515a.895.895 0 0 0 .464.793l6.897 3.93-2.388 1.36a.087.087 0 0 1-.08.008L4.52 16.349a5.262 5.262 0 0 1-2.475-3.185 5.192 5.192 0 0 1 .527-3.98Zm19.623 4.506-6.898-3.93 2.388-1.36a.087.087 0 0 1 .08-.008l5.713 3.255a5.28 5.28 0 0 1 2.054 2.118 5.19 5.19 0 0 1-.488 5.608 5.314 5.314 0 0 1-2.39 1.742v-6.633a.896.896 0 0 0-.459-.792Zm2.377-3.533a7.973 7.973 0 0 0-.168-.099l-5.65-3.22a.93.93 0 0 0-.928 0l-6.898 3.93V8.046a.083.083 0 0 1 .034-.072l5.712-3.251a5.375 5.375 0 0 1 5.698.241 5.262 5.262 0 0 1 1.865 2.28c.39.92.506 1.93.335 2.913ZM9.631 15.009l-2.39-1.36a.083.083 0 0 1-.046-.065V7.075c.001-.997.29-1.973.832-2.814a5.297 5.297 0 0 1 2.231-1.935 5.382 5.382 0 0 1 5.659.72 4.89 4.89 0 0 0-.168.093l-5.65 3.22a.913.913 0 0 0-.465.793l-.003 7.857Zm1.297-2.76L14 10.5l3.072 1.75v3.5L14 17.499l-3.072-1.75v-3.5Z"
        fill="currentColor"
      ></path>
    </svg>
  );
};

export const AIPoweredSkeleton = () => {
  const scale = [1, 1.1, 1];
  const transform = ["translateY(0px)", "translateY(-4px)", "translateY(0px)"];
  const sequence = [
    [
      ".circle-1",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-2",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-3",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-4",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-5",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ]
  ];

  useEffect(() => {
    animate(sequence, {
      // @ts-expect-error
      repeat: Infinity,
      repeatDelay: 1
    });
  }, []);
  return (
    <div className="p-8 overflow-hidden h-full relative flex items-center justify-center">
      <div className="flex flex-row flex-shrink-0 justify-center items-center gap-2">
        <FeatureContainer className="h-9 w-9 circle-1">
          <OpenAILogo className="size-6" />
        </FeatureContainer>
        <FeatureContainer className="h-14 w-14 circle-2">
          <VueLogo className="h-8 w-8" />
        </FeatureContainer>
        <FeatureContainer className="circle-3 h-[72px] w-[72px]">
          <div className="relative size-14 grid place-items-center overflow-hidden p-px">
            <Image
              src={ImagePath.NEXT_JS}
              alt={""}
              fill
              quality={100}
              loading="lazy"
              draggable={false}
              className="size-12 object-contain object-center rounded-full z-[5]"
            />
            <div className="absolute z-0 size-[52px] rounded-full top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white/75"></div>
          </div>
        </FeatureContainer>
        <FeatureContainer className="h-14 w-14 circle-4">
          <AngularLogo className="h-8 w-8" />
        </FeatureContainer>
        <FeatureContainer className="h-9 w-9 circle-5">
          <FlutterLogo className="size-6" />
        </FeatureContainer>
      </div>

      <div className="h-40 w-px absolute top-12 m-auto z-40 bg-gradient-to-b from-transparent via-secondary to-transparent animate-move">
        <div className="w-10 h-32 top-1/2 -translate-y-1/2 absolute -left-10">
          <Sparkles />
        </div>
      </div>
    </div>
  );
};

export const FrontendSkeleton = () => {
  const scale = [1, 1.1, 1];
  const transform = ["translateY(0px)", "translateY(-4px)", "translateY(0px)"];
  const sequence = [
    [
      ".circle-1",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-2",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-3",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-4",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-5",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ]
  ];

  useEffect(() => {
    animate(sequence, {
      // @ts-expect-error
      repeat: Infinity,
      repeatDelay: 1
    });
  }, []);
  return (
    <div className="p-8 overflow-hidden h-full relative flex items-center justify-center">
      <div className="flex flex-row flex-shrink-0 justify-center items-center gap-2">
        <FeatureContainer className="h-9 w-9 circle-1">
          <TailwindCSSLogo className="size-6" />
        </FeatureContainer>
        <FeatureContainer className="h-14 w-14 circle-2">
          <VueLogo className="h-8 w-8" />
        </FeatureContainer>
        <FeatureContainer className="circle-3 h-[72px] w-[72px]">
          <div className="relative size-14 grid place-items-center overflow-hidden p-px">
            <Image
              src={ImagePath.NEXT_JS}
              alt={""}
              fill
              quality={100}
              loading="lazy"
              draggable={false}
              className="size-12 object-contain object-center rounded-full z-[5]"
            />
            <div className="absolute z-0 size-[52px] rounded-full top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white/75"></div>
          </div>
        </FeatureContainer>
        <FeatureContainer className="h-14 w-14 circle-4">
          <AngularLogo className="h-8 w-8" />
        </FeatureContainer>
        <FeatureContainer className="h-9 w-9 circle-5">
          <FramerMotionLogo className="size-6" />
        </FeatureContainer>
      </div>

      <div className="h-40 w-px absolute top-12 m-auto z-40 bg-gradient-to-b from-transparent via-secondary to-transparent animate-move">
        <div className="w-10 h-32 top-1/2 -translate-y-1/2 absolute -left-10">
          <Sparkles />
        </div>
      </div>
    </div>
  );
};

export const ChatbotSkeleton = () => {
  const scale = [1, 1.1, 1];
  const transform = ["translateY(0px)", "translateY(-4px)", "translateY(0px)"];
  const sequence = [
    [
      ".circle-1",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-2",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-3",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-4",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-5",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ]
  ];

  useEffect(() => {
    animate(sequence, {
      // @ts-expect-error
      repeat: Infinity,
      repeatDelay: 1
    });
  }, []);
  return (
    <div className="p-8 overflow-hidden h-full relative flex items-center justify-center">
      <div className="flex flex-row flex-shrink-0 justify-center items-center gap-2">
        <FeatureContainer className="h-9 w-9 circle-1">
          <OpenAILogo className="h-6 w-6" />
        </FeatureContainer>
        <FeatureContainer className="h-14 w-14 circle-2">
          <NodeJSLogo className="h-8 w-8" />
        </FeatureContainer>
        <FeatureContainer className="circle-3 h-[72px] w-[72px]">
          <div
            title="Langchain"
            className="relative size-14 grid place-items-center overflow-hidden p-px"
          >
            <Image
              src={ImagePath.LANGCHAIN_LOGO}
              alt={""}
              fill
              quality={100}
              loading="lazy"
              draggable={false}
              className="size-12 object-contain object-center rounded-full"
            />
          </div>
        </FeatureContainer>
        <FeatureContainer className="h-14 w-14 circle-4">
          <div className="relative size-9 grid place-items-center overflow-hidden p-px">
            <Image
              src={ImagePath.TENSORFLOW}
              alt={""}
              fill
              quality={100}
              loading="lazy"
              draggable={false}
              className="size-8 object-contain object-center"
            />
          </div>
        </FeatureContainer>
        <FeatureContainer className="h-9 w-9 circle-5">
          <PythonLogo className="h-6 w-6" />
        </FeatureContainer>
      </div>

      <div className="h-40 w-px absolute top-12 m-auto z-40 bg-gradient-to-b from-transparent via-secondary to-transparent animate-move">
        <div className="w-10 h-32 top-1/2 -translate-y-1/2 absolute -left-10">
          <Sparkles />
        </div>
      </div>
    </div>
  );
};

export const FineTuningSkeleton = () => {
  const scale = [1, 1.1, 1];
  const transform = ["translateY(0px)", "translateY(-4px)", "translateY(0px)"];
  const sequence = [
    [
      ".circle-1",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-2",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-3",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-4",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-5",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ]
  ];

  useEffect(() => {
    animate(sequence, {
      // @ts-expect-error
      repeat: Infinity,
      repeatDelay: 1
    });
  }, []);
  return (
    <div className="p-8 overflow-hidden h-full relative flex items-center justify-center">
      <div className="flex flex-row flex-shrink-0 justify-center items-center gap-2">
        <FeatureContainer className="h-9 w-9 circle-1">
          <PythonLogo className="h-6 w-6" />
        </FeatureContainer>
        <FeatureContainer className="h-14 w-14 circle-2">
          <div
            title="Hugging Face Transformers"
            className="relative size-9 grid place-items-center overflow-hidden p-px"
          >
            <Image
              src={ImagePath.HUGGING_FACE_LOGO}
              alt={""}
              fill
              quality={100}
              loading="lazy"
              draggable={false}
              className="size-8 object-contain object-center rounded-full"
            />
          </div>
        </FeatureContainer>
        <FeatureContainer className="circle-3 h-[72px] w-[72px]">
          <div
            title="TensorFlow"
            className="relative size-14 grid place-items-center overflow-hidden p-px"
          >
            <Image
              src={ImagePath.TENSORFLOW}
              alt={""}
              fill
              quality={100}
              loading="lazy"
              draggable={false}
              className="size-12 object-contain object-center rounded-full"
            />
          </div>
        </FeatureContainer>
        <FeatureContainer className="h-14 w-14 circle-4">
          <OpenAILogo className="h-8 w-8" />
        </FeatureContainer>
        <FeatureContainer className="h-9 w-9 circle-5">
          <div
            title="Weights & Biases"
            className="relative size-7 grid place-items-center overflow-hidden p-px"
          >
            <Image
              src={ImagePath.WB_LOGO}
              alt={""}
              fill
              quality={100}
              loading="lazy"
              draggable={false}
              className="size-6 object-contain object-center rounded-full"
            />
          </div>
        </FeatureContainer>
      </div>

      <div className="h-40 w-px absolute top-12 m-auto z-40 bg-gradient-to-b from-transparent via-secondary to-transparent animate-move">
        <div className="w-10 h-32 top-1/2 -translate-y-1/2 absolute -left-10">
          <Sparkles />
        </div>
      </div>
    </div>
  );
};

export const BackendSkeleton = () => {
  const scale = [1, 1.1, 1];
  const transform = ["translateY(0px)", "translateY(-4px)", "translateY(0px)"];
  const sequence = [
    [
      ".circle-1",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-2",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-3",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-4",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-5",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ]
  ];

  useEffect(() => {
    animate(sequence, {
      // @ts-expect-error
      repeat: Infinity,
      repeatDelay: 1
    });
  }, []);
  return (
    <div className="p-8 overflow-hidden h-full relative flex items-center justify-center">
      <div className="flex flex-row flex-shrink-0 justify-center items-center gap-2">
        <FeatureContainer className="h-9 w-9 circle-1">
          <MySQLLogo className="h-6 w-6" />
        </FeatureContainer>
        <FeatureContainer className="h-14 w-14 circle-2">
          <FastAPILogo className="h-8 w-8" />
        </FeatureContainer>
        <FeatureContainer className="circle-3 h-[72px] w-[72px]">
          <NodeJSLogo className="h-12 w-12" />
        </FeatureContainer>
        <FeatureContainer className="h-14 w-14 circle-4">
          <div
            title="TensorFlow"
            className="relative size-9 grid place-items-center overflow-hidden p-px"
          >
            <Image
              src={ImagePath.TENSORFLOW}
              alt={""}
              fill
              quality={100}
              loading="lazy"
              draggable={false}
              className="size-8 object-contain object-center"
            />
          </div>
        </FeatureContainer>
        <FeatureContainer className="h-9 w-9 circle-5">
          <div
            title="Redis"
            className="relative size-7 grid place-items-center overflow-hidden p-px"
          >
            <Image
              src={ImagePath.REDIS_LOGO}
              alt={""}
              fill
              quality={100}
              loading="lazy"
              draggable={false}
              className="size-6 object-contain object-center"
            />
          </div>
        </FeatureContainer>
      </div>

      <div className="h-40 w-px absolute top-12 m-auto z-40 bg-gradient-to-b from-transparent via-secondary to-transparent animate-move">
        <div className="w-10 h-32 top-1/2 -translate-y-1/2 absolute -left-10">
          <Sparkles />
        </div>
      </div>
    </div>
  );
};

export const AutonomousSkeleton = () => {
  const scale = [1, 1.1, 1];
  const transform = ["translateY(0px)", "translateY(-4px)", "translateY(0px)"];
  const sequence = [
    [
      ".circle-1",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-2",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-3",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-4",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ],
    [
      ".circle-5",
      {
        scale,
        transform
      },
      { duration: 0.8 }
    ]
  ];

  useEffect(() => {
    animate(sequence, {
      // @ts-expect-error
      repeat: Infinity,
      repeatDelay: 1
    });
  }, []);
  return (
    <div className="p-8 overflow-hidden h-full relative flex items-center justify-center">
      <div className="flex flex-row flex-shrink-0 justify-center items-center gap-2">
        <FeatureContainer className="h-9 w-9 circle-1">
          <NodeJSLogo className="size-6" />
        </FeatureContainer>
        <FeatureContainer className="h-14 w-14 circle-2">
          <div
            title="Langchain"
            className="relative size-9 grid place-items-center overflow-hidden p-px"
          >
            <Image
              src={ImagePath.LANGCHAIN_LOGO}
              alt={""}
              fill
              quality={100}
              loading="lazy"
              draggable={false}
              className="size-8 object-contain object-center"
            />
          </div>
        </FeatureContainer>
        <FeatureContainer className="circle-3 h-[72px] w-[72px]">
          <OpenAILogo className="size-12" />
        </FeatureContainer>
        <FeatureContainer className="h-14 w-14 circle-4">
          <div
            title="AutoGen"
            className="relative size-9 grid grid-cols-1 place-items-center overflow-hidden rounded-md bg-black/85 p-px"
          >
            <span className="inline-block uppercase text-center font-poppins font-bold tracking-wide w-full">
              AG
            </span>
          </div>
        </FeatureContainer>
        <FeatureContainer className="h-9 w-9 circle-5">
          <FastAPILogo className="size-6" />
        </FeatureContainer>
      </div>

      <div className="h-40 w-px absolute top-12 m-auto z-40 bg-gradient-to-b from-transparent via-secondary to-transparent animate-move">
        <div className="w-10 h-32 top-1/2 -translate-y-1/2 absolute -left-10">
          <Sparkles />
        </div>
      </div>
    </div>
  );
};
